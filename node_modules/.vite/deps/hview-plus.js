import {
  Fragment,
  Text,
  Transition,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createStaticVNode,
  createTextVNode,
  createVNode,
  defineComponent,
  effectScope,
  getCurrentInstance,
  getCurrentScope,
  h,
  inject,
  isArray,
  isFunction,
  isRef,
  isString,
  isVNode,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeStyle,
  onBeforeMount,
  onBeforeUnmount,
  onMounted,
  onScopeDispose,
  onUnmounted,
  openBlock,
  provide,
  reactive,
  ref,
  render,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDynamicComponent,
  shallowRef,
  toDisplayString,
  toRefs,
  unref,
  useAttrs,
  useSlots,
  vModelCheckbox,
  vShow,
  watch,
  watchEffect,
  withCtx,
  withDirectives,
  withModifiers
} from "./chunk-DC6HOT7L.js";
import "./chunk-7FP5O474.js";

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/button/src/button2.mjs
var n = ["default", "primary", "success", "warning", "danger"];
var e = ["large", "normal", "small", "mini"];
var t = {
  type: {
    type: String,
    values: n
  },
  size: {
    type: String,
    values: e
  },
  plain: Boolean,
  round: Boolean,
  disabled: Boolean,
  icon: {
    type: String,
    default: ""
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/button/src/button.mjs
var C = { class: "" };
var k = {
  name: "HButton"
};
var N = defineComponent({
  ...k,
  props: t,
  setup(s7) {
    const e14 = s7, { icon: o8 } = toRefs(e14), r13 = computed(() => ({
      [`h-button--${e14.type}`]: e14.type,
      [`h-button--${e14.size}`]: e14.size,
      "is-plain": e14.plain,
      "is-round": e14.round,
      "is-disabled": e14.disabled
    }));
    return (c5, y8) => {
      const a18 = resolveComponent("h-icon");
      return openBlock(), createElementBlock("button", {
        class: normalizeClass(["h-button", unref(r13)])
      }, [
        createBaseVNode("span", C, [
          unref(o8) ? createCommentVNode("", true) : (openBlock(), createBlock(a18, {
            key: 0,
            name: unref(o8)
          }, null, 8, ["name"]))
        ]),
        renderSlot(c5.$slots, "default")
      ], 2);
    };
  }
});

// ../../node_modules/.pnpm/@hview-plus+utils@1.0.1/node_modules/@hview-plus/utils/es/vue/props/runtime.js
var o = (e14) => e14;

// ../../node_modules/.pnpm/@hview-plus+utils@1.0.1/node_modules/@hview-plus/utils/es/vue/math/index.js
var t2 = (e14, r13) => Number(Number(e14).toFixed(r13));

// ../../node_modules/.pnpm/@hview-plus+utils@1.0.1/node_modules/@hview-plus/utils/es/vue/withInstall.js
var a = (n3) => (n3.install = (t12) => {
  const e14 = n3.name || n3.__name;
  t12.component(e14, n3);
}, n3);

// ../../node_modules/.pnpm/@hview-plus+utils@1.0.1/node_modules/@hview-plus/utils/es/dom/ecma.js
var o2 = (f2) => {
  let e14 = f2.offsetLeft, t12 = f2.offsetParent;
  for (; t12 !== null; )
    e14 += t12.offsetLeft, t12 = t12.offsetParent;
  return e14;
};
var s = (f2) => {
  let e14 = f2.offsetTop, t12 = f2.offsetParent;
  for (; t12 !== null; )
    e14 += t12.offsetTop, t12 = t12.offsetParent;
  return e14;
};

// ../../node_modules/.pnpm/@hview-plus+utils@1.0.1/node_modules/@hview-plus/utils/es/comp/tree.js
function c(e14) {
  const n3 = Object.prototype.toString, o8 = {
    "[object Boolean]": "boolean",
    "[object Number]": "number",
    "[object String]": "string",
    "[object Function]": "function",
    "[object Array]": "array",
    "[object Date]": "date",
    "[object RegExp]": "regExp",
    "[object Undefined]": "undefined",
    "[object Null]": "null",
    "[object Object]": "object"
  }, t12 = n3.call(e14);
  return o8[t12];
}
function r(e14) {
  const n3 = c(e14);
  if (n3 === "array") {
    const o8 = [];
    for (let t12 = 0; t12 < e14.length; t12++)
      o8.push(r(e14[t12]));
    return o8;
  } else if (n3 === "object") {
    const o8 = {};
    for (const t12 in e14)
      o8[t12] = r(e14[t12]);
    return o8;
  } else
    return e14;
}

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/button/index.mjs
var a2 = a(N);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/link/src/link2.mjs
var e2 = ["primary", "success", "info", "warning", "danger"];
var r2 = {
  type: {
    type: String,
    validator(n3) {
      return e2.includes(n3);
    }
  },
  disabled: Boolean,
  underline: Boolean
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/link/src/link.mjs
var f = {
  name: "HLink"
};
var b = defineComponent({
  ...f,
  props: r2,
  setup(s7) {
    const e14 = s7, n3 = useAttrs(), r13 = computed(() => ({
      [`h-link--${e14.type}`]: e14.type,
      "is-disabled": e14.disabled,
      "is-underline": e14.underline
    }));
    return (o8, _4) => (openBlock(), createElementBlock("a", mergeProps({ class: "h-link" }, unref(n3), { class: unref(r13) }), [
      renderSlot(o8.$slots, "default")
    ], 16));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/link/index.mjs
var r3 = a(b);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/icon/src/icon2.mjs
var t3 = {
  name: {
    type: String,
    default: ""
  },
  dot: {
    type: Boolean
  },
  badge: {
    type: String || Number
  },
  color: {
    type: String
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/icon/src/icon.mjs
var v = { class: "hview-icon" };
var y = {
  name: "HIcon"
};
var w = defineComponent({
  ...y,
  props: t3,
  setup(s7) {
    const e14 = s7, i6 = computed(() => ({ ["hview-dot"]: e14.dot && !e14.badge })), l4 = computed(() => e14.badge), a18 = computed(() => ({
      color: e14.color
    }));
    return (m9, g) => (openBlock(), createElementBlock("div", v, [
      createBaseVNode("i", {
        class: normalizeClass(`h-icon-${e14.name}`),
        style: normalizeStyle(unref(a18))
      }, null, 6),
      m9.dot ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(["hview-info", unref(i6)])
      }, toDisplayString(unref(l4)), 3)) : createCommentVNode("", true)
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/icon/index.mjs
var a3 = a(w);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/card/src/card2.mjs
var t4 = (e14) => e14;
var a4 = {
  header: {
    type: String,
    default: ""
  },
  handle: {
    type: String,
    default: ""
  },
  bodyStyle: {
    type: t4([String, Object, Array]),
    default: ""
  },
  shadow: {
    type: String,
    values: ["always", "hover", "never"],
    default: "always"
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/card/src/card.mjs
var $ = {
  key: 0,
  class: "h-card-header"
};
var C2 = {
  key: 1,
  class: "h-card-handle"
};
var k2 = {
  name: "HCard"
};
var V = defineComponent({
  ...k2,
  props: a4,
  setup(n3) {
    const r13 = n3, h6 = computed(() => ({
      [`h-card-shadow--${r13.shadow}`]: r13.shadow
    }));
    return (e14, v6) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(["h-card", unref(h6)])
    }, [
      e14.$slots.header || e14.header ? (openBlock(), createElementBlock("div", $, [
        renderSlot(e14.$slots, "header", {}, () => [
          createTextVNode(toDisplayString(e14.header), 1)
        ])
      ])) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: "h-card-body",
        style: normalizeStyle(e14.bodyStyle)
      }, [
        renderSlot(e14.$slots, "default")
      ], 4),
      e14.$slots.handle ? (openBlock(), createElementBlock("div", C2, [
        renderSlot(e14.$slots, "handle", {}, () => [
          createTextVNode(toDisplayString(e14.handle), 1)
        ])
      ])) : createCommentVNode("", true)
    ], 2));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/card/index.mjs
var m = a(V);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/input/src/input2.mjs
var e3 = {
  type: String,
  maxlength: Number,
  iconBefore: String,
  iconAfter: String,
  size: String,
  clearable: Boolean,
  modelValue: [String, Number]
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/input/src/input.mjs
var z = ["type", "value"];
var E = ["value", "maxlength"];
var N2 = { class: "h-textarea-maxlength" };
var w2 = {
  name: "HInput"
};
var L = defineComponent({
  ...w2,
  props: e3,
  emits: ["update:modelValue"],
  setup(v6, { emit: g }) {
    const o8 = v6, { modelValue: p } = toRefs(o8), t12 = ref(), y8 = computed(() => ({
      [`h-input-${o8.size}`]: o8.size
    }));
    watchEffect(() => {
      t12.value = p ? p.value : "";
    });
    const r13 = (e14) => {
      t12.value = e14 ? e14.target.value : "", g("update:modelValue", t12.value);
    }, c5 = computed(() => t12.value === void 0 ? 0 : t12.value.length);
    return (e14, P4) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(["h-from-input", {
        "h-input-icon-before": e14.iconBefore && e14.iconBefore !== "",
        "h-input-icon-after": e14.iconAfter && e14.iconAfter !== "" || e14.clearable
      }])
    }, [
      e14.type !== "textarea" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        createBaseVNode("input", mergeProps({ class: "h-input" }, e14.$attrs, {
          type: e14.type,
          value: t12.value,
          class: unref(y8),
          onInput: r13
        }), null, 16, z),
        e14.iconAfter && e14.iconAfter !== "" ? (openBlock(), createElementBlock("i", {
          key: 0,
          class: normalizeClass(["h-after", `h-icon-${e14.iconAfter}`])
        }, null, 2)) : createCommentVNode("", true),
        e14.iconBefore && e14.iconBefore !== "" ? (openBlock(), createElementBlock("i", {
          key: 1,
          class: normalizeClass(["h-before", `h-icon-${e14.iconBefore}`])
        }, null, 2)) : createCommentVNode("", true),
        createVNode(Transition, { name: "fade" }, {
          default: withCtx(() => [
            e14.clearable && unref(c5) > 0 ? (openBlock(), createElementBlock("span", {
              key: 0,
              class: "h-icon-h",
              onClick: r13
            })) : createCommentVNode("", true)
          ]),
          _: 1
        })
      ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
        createBaseVNode("textarea", mergeProps({ class: "h-textarea" }, e14.$attrs, {
          value: t12.value,
          maxlength: e14.maxlength,
          onInput: r13
        }), `\r
      `, 16, E),
        createBaseVNode("span", N2, toDisplayString(unref(c5)) + "/" + toDisplayString(e14.maxlength), 1)
      ], 64))
    ], 2));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/input/index.mjs
var a5 = a(L);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tooltip/src/tooltip2.mjs
var t5 = [
  "left-start",
  "left",
  "left-end",
  "top-start",
  "top",
  "top-end",
  "right-start",
  "right",
  "right-end",
  "bottom-start",
  "bottom",
  "bottom-end"
];
var o3 = {
  placement: {
    type: String,
    values: t5
  },
  modelValue: {
    type: Boolean,
    default: null
  },
  content: [String, Number],
  width: String
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tooltip/src/tooltip.mjs
var S = {
  name: "HTooltip"
};
var j = defineComponent({
  ...S,
  props: o3,
  setup(g) {
    const r13 = g, d4 = getCurrentInstance(), { placement: a18, content: u4, width: n3, modelValue: m9 } = toRefs(r13), i6 = ref(m9.value);
    let l4 = null, f2 = "";
    function p(e14) {
      const t12 = document.getElementById(e14);
      t12 && t12.classList.remove("h-tooltip-show");
    }
    function x3(e14) {
      e14 && e14.classList.add("h-tooltip-show");
    }
    function E3(e14, t12, h6) {
      let s7 = document.documentElement.scrollTop, o8 = 0;
      return {
        "top-start": () => {
          o8 += e14.x, s7 += e14.y - t12.offsetHeight;
        },
        top: () => {
          o8 += e14.x + (e14.width - t12.offsetWidth) * 0.5, s7 += e14.y - t12.offsetHeight;
        },
        "top-end": () => {
          o8 += e14.x + e14.width - t12.offsetWidth, s7 += e14.y - t12.offsetHeight;
        },
        "left-start": () => {
          o8 += e14.x - t12.offsetWidth, s7 += e14.y;
        },
        left: () => {
          o8 += e14.x - t12.offsetWidth, s7 += e14.y + (e14.height - t12.offsetHeight) * 0.5;
        },
        "left-end": () => {
          o8 += e14.x - t12.offsetWidth, s7 += e14.y + e14.height - t12.offsetHeight;
        },
        "right-start": () => {
          o8 += e14.x + e14.width, s7 += e14.y;
        },
        right: () => {
          o8 += e14.x + e14.width, s7 += e14.y + (e14.height - t12.offsetHeight) * 0.5;
        },
        "right-end": () => {
          o8 += e14.x + e14.width, s7 += e14.y + e14.height - t12.offsetHeight;
        },
        "bottom-start": () => {
          o8 += e14.x, s7 += e14.y + e14.height;
        },
        bottom: () => {
          o8 += e14.x + (e14.width - t12.offsetWidth) * 0.5, s7 += e14.y + e14.height;
        },
        "bottom-end": () => {
          o8 += e14.x + e14.width - t12.offsetWidth, s7 += e14.y + e14.height;
        }
      }[h6](), { x: o8, y: s7 };
    }
    function w3(e14, t12) {
      var v6;
      const h6 = (v6 = d4 == null ? void 0 : d4.proxy) == null ? void 0 : v6.$el.firstElementChild.getBoundingClientRect();
      document.getElementById(t12) || document.body.appendChild(e14), e14.style.display = "block";
      const { x: o8, y: y8 } = E3(h6, e14, a18 == null ? void 0 : a18.value);
      e14.style.top = y8 + "px", e14.style.left = o8 + "px";
    }
    return onMounted(() => {
      var t12;
      const e14 = (t12 = d4 == null ? void 0 : d4.proxy) == null ? void 0 : t12.$el;
      l4 = document.createElement("div"), l4 && l4.addEventListener("mouseenter", () => {
        i6.value = true;
      }), l4 && l4.addEventListener("mouseleave", () => {
        i6.value = false;
      }), l4.className = `h-tooltip h-tooltip-${a18.value}`, n3 != null && n3.value && (l4.style.width = n3.value), f2 = l4.id = `h-tooltip-${d4.uid}`, watchEffect(() => {
        l4.innerHTML = `<span>${u4 == null ? void 0 : u4.value}</span>` || "", nextTick(w3(l4, f2)), l4.className = `h-tooltip h-tooltip-${a18.value}`, n3 != null && n3.value && (l4.style.width = n3.value), toString.call(r13.modelValue) !== "[object Null]" && (i6.value = m9.value), i6.value ? x3(l4) : p(f2);
      }), onUnmounted(() => {
        document.getElementById(f2) && document.body.removeChild(l4);
      }), e14 && e14.addEventListener("mouseenter", () => {
        i6.value = true;
      }), e14 && e14.addEventListener("mouseleave", () => {
        setTimeout(() => {
          i6.value = false;
        }, 500);
      });
    }), (e14, t12) => (openBlock(), createElementBlock("span", null, [
      renderSlot(e14.$slots, "default")
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tooltip/index.mjs
var r4 = a(j);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/avatar/src/avatar2.mjs
var t6 = (e14) => e14;
var r5 = {
  size: {
    type: [Number, String],
    values: ["", "default", "small", "large"],
    default: "default"
  },
  shape: {
    type: String,
    values: ["circle", "square"],
    default: "circle"
  },
  border: {
    type: String,
    value: ["none", "solid", "dot"],
    default: "solid"
  },
  icon: {
    type: String
  },
  src: {
    type: String,
    default: ""
  },
  srcSet: String,
  alt: String,
  fit: {
    type: t6(String),
    default: "cover"
  }
};
var a6 = {
  error: (e14) => e14 instanceof Event
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/avatar/src/avatar.mjs
var C3 = ["src", "alt", "srcset"];
var $2 = {
  name: "HAvatar"
};
var A = defineComponent({
  ...$2,
  props: r5,
  emits: a6,
  setup(c5, { emit: i6 }) {
    const r13 = c5, t12 = ref(false), p = computed(() => ({
      [`h-avatar-size--${r13.size}`]: typeof r13.size != "number",
      [`h-avatar--${r13.shape}`]: r13.shape,
      [`h-avatar-border--${r13.border}`]: r13.border
    })), m9 = computed(() => {
      const { size: e14 } = r13;
      return typeof e14 == "number" ? { width: e14 + "px", height: e14 + "px" } : {};
    }), u4 = computed(() => ({
      objectFit: r13.fit
    }));
    watch(
      () => r13.src,
      () => t12.value = false
    );
    function f2(e14) {
      t12.value = true, i6("error", e14);
    }
    return (e14, B5) => {
      const h6 = resolveComponent("h-icon");
      return openBlock(), createElementBlock("span", {
        class: normalizeClass(["h-avatar", unref(p)]),
        style: normalizeStyle(unref(m9))
      }, [
        (e14.src || e14.srcSet) && !t12.value ? (openBlock(), createElementBlock("img", {
          key: 0,
          src: e14.src,
          alt: e14.alt,
          srcset: e14.srcSet,
          style: normalizeStyle(unref(u4)),
          onError: f2
        }, null, 44, C3)) : e14.icon ? (openBlock(), createBlock(h6, {
          key: 1,
          name: e14.icon
        }, null, 8, ["name"])) : renderSlot(e14.$slots, "default", { key: 2 })
      ], 6);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/avatar/index.mjs
var m2 = a(A);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/radio/src/radio2.mjs
var e4 = {
  options: {
    type: Array,
    default: () => []
  },
  inline: {
    type: Boolean,
    default: true
  },
  customColor: {
    type: String,
    default: "#0e80eb"
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/radio/src/radio.mjs
var S2 = { class: "h-radio" };
var R = ["onClick"];
var z2 = {
  name: "HRadio"
};
var V2 = defineComponent({
  ...z2,
  props: e4,
  emits: ["change"],
  setup(p, { emit: m9 }) {
    const s7 = p, n3 = ref(-1), t12 = ref("inline-flex"), f2 = () => (s7.inline ? t12.value : t12.value = "flex", { display: `${t12.value}` }), h6 = (e14) => n3.value == e14 ? { marginRight: "4px", backgroundColor: s7.customColor } : { marginRight: "4px" }, _4 = (e14, i6) => {
      e14.disabled || (n3.value = i6), m9("change", e14);
    };
    return (e14, i6) => (openBlock(), createElementBlock("div", S2, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(e14.options, (l4, o8) => (openBlock(), createElementBlock("div", {
        class: normalizeClass(["h-item-radio", { "h-item-disabled-radio": l4.disabled }]),
        key: o8,
        style: normalizeStyle(f2())
      }, [
        createBaseVNode("span", {
          style: normalizeStyle(h6(o8)),
          class: normalizeClass({ active: n3.value == o8 }),
          onClick: (B5) => _4(l4, o8)
        }, null, 14, R),
        createTextVNode(toDisplayString(l4.lable), 1)
      ], 6))), 128))
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/radio/index.mjs
var m3 = a(V2);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/message/src/message2.mjs
var t7 = ["success", "info", "warning", "error"];
var s2 = {
  message: String,
  type: {
    type: String,
    validator(e14) {
      return t7.includes(e14);
    }
  },
  duration: {
    type: Number,
    default: 1500
  },
  center: {
    type: Boolean,
    default: false
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: false
  },
  showClose: {
    type: Boolean,
    default: false
  },
  onClose: {
    type: Function
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/message/src/message.mjs
var x = {
  key: 0,
  class: "h-message__content"
};
var z3 = ["innerHTML"];
var A2 = {
  name: "HMessage"
};
var F = defineComponent({
  ...A2,
  props: s2,
  setup(f2) {
    const d4 = f2, { message: a18, showClose: p, type: s7, duration: l4, center: _4, dangerouslyUseHTMLString: v6, onClose: h6 } = toRefs(d4);
    let t12 = ref(false), r13 = null;
    const g = computed(() => s7.value ? `h-message__icon h-icon-${s7.value}` : ""), y8 = () => {
      t12.value = true, l4.value > 0 && (r13 = setTimeout(() => {
        t12.value = false;
      }, l4.value));
    }, C7 = () => {
      t12.value = false;
    };
    return onMounted(() => {
      y8();
    }), onUnmounted(() => {
      clearTimeout(r13);
    }), (i6, c5) => (openBlock(), createBlock(Transition, {
      name: "h-message-fade",
      onBeforeLeave: unref(h6),
      onAfterLeave: c5[0] || (c5[0] = (P4) => i6.$emit("destroy"))
    }, {
      default: withCtx(() => [
        withDirectives(createBaseVNode("div", {
          class: normalizeClass(["h-message", unref(s7) ? `h-message--${unref(s7)}` : "", unref(_4) ? "is-center" : ""])
        }, [
          createBaseVNode("i", {
            class: normalizeClass(unref(g))
          }, null, 2),
          renderSlot(i6.$slots, "default", {}, () => [
            unref(v6) ? (openBlock(), createElementBlock("p", {
              key: 1,
              innerHTML: unref(a18),
              class: "h-message__content"
            }, null, 8, z3)) : (openBlock(), createElementBlock("p", x, toDisplayString(unref(a18)), 1))
          ]),
          unref(p) ? (openBlock(), createElementBlock("i", {
            key: 0,
            class: "h-message__closeBtn iconfont h-icon-close",
            onClick: C7
          })) : createCommentVNode("", true)
        ], 2), [
          [vShow, unref(t12)]
        ])
      ]),
      _: 3
    }, 8, ["onBeforeLeave"]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/message/src/index.mjs
function a7(e14) {
  typeof e14 == "string" && (e14 = {
    message: e14
  });
  const t12 = e14.onClose, r13 = {
    ...e14,
    onClose: () => {
      t12 && t12();
    }
  }, o8 = document.createElement("div"), n3 = createVNode(F, r13);
  n3.props.onDestroy = () => {
    render(null, o8);
  }, render(n3, o8), document.body.appendChild(o8.firstElementChild);
}

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/message/index.mjs
a7.install = function(s7) {
  s7.config.globalProperties.$message = a7;
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/src/container2.mjs
var t8 = ["horizontal", "vertical"];
var e5 = {
  direction: {
    type: String,
    value: t8
  }
};
var o4 = {
  height: {
    type: String,
    default: "60px"
  }
};
var r6 = {
  width: {
    type: String,
    default: "300px"
  }
};
var i = {
  height: {
    type: String,
    default: "60px"
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/src/container.mjs
var C4 = {
  name: "HContainer"
};
var k3 = defineComponent({
  ...C4,
  props: e5,
  setup(a18) {
    const t12 = a18, l4 = computed(() => ({
      "h-container-horizontal": c5.value
    })), e14 = useSlots(), c5 = computed(() => t12.direction === "vertical" ? true : t12.direction === "horizontal" ? false : e14 && e14.default ? e14.default().some((r13) => {
      const n3 = r13.type.name;
      return n3 === "HHeader" || n3 === "HFooter";
    }) : false);
    return (o8, r13) => (openBlock(), createElementBlock("section", {
      class: normalizeClass(["h-container", unref(l4)])
    }, [
      renderSlot(o8.$slots, "default")
    ], 2));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/src/header.mjs
var u = {
  name: "HHeader"
};
var y2 = defineComponent({
  ...u,
  props: o4,
  setup(e14) {
    const t12 = e14, r13 = computed(() => ({
      height: t12.height
    }));
    return (o8, f2) => (openBlock(), createElementBlock("header", {
      class: "h-header",
      style: normalizeStyle(unref(r13))
    }, [
      renderSlot(o8.$slots, "default")
    ], 4));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/src/aside.mjs
var m4 = {
  name: "HAside"
};
var y3 = defineComponent({
  ...m4,
  props: r6,
  setup(e14) {
    const t12 = e14, o8 = computed(() => ({
      width: t12.width
    }));
    return (r13, u4) => (openBlock(), createElementBlock("aside", {
      class: "h-aside",
      style: normalizeStyle(unref(o8))
    }, [
      renderSlot(r13.$slots, "default")
    ], 4));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/_virtual/plugin-vue_export-helper.mjs
var s3 = (t12, e14) => {
  const o8 = t12.__vccOpts || t12;
  for (const [r13, c5] of e14)
    o8[r13] = c5;
  return o8;
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/src/main.mjs
var s4 = {
  name: "HMain"
};
var a8 = { class: "h-main" };
function c2(e14, i6, m9, p, _4, f2) {
  return openBlock(), createElementBlock("main", a8, [
    renderSlot(e14.$slots, "default")
  ]);
}
var $3 = s3(s4, [["render", c2]]);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/src/footer.mjs
var u2 = {
  name: "HFooter"
};
var y4 = defineComponent({
  ...u2,
  props: i,
  setup(e14) {
    const o8 = e14, t12 = computed(() => ({
      height: o8.height
    }));
    return (r13, i6) => (openBlock(), createElementBlock("footer", {
      class: "h-footer",
      style: normalizeStyle(unref(t12))
    }, [
      renderSlot(r13.$slots, "default")
    ], 4));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/container/index.mjs
var e6 = a(k3);
var $4 = a(y2);
var d = a(y3);
var l = a($3);
var h2 = a(y4);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel/src/carousel2.mjs
var o5 = {
  initialIndex: {
    type: Number,
    default: 0
  },
  height: {
    type: String,
    default: ""
  },
  trigger: {
    type: String,
    values: ["hover", "click"],
    default: "hover"
  },
  autoplay: {
    type: Boolean,
    default: true
  },
  interval: {
    type: Number,
    default: 3e3
  },
  indicatorPosition: {
    type: String,
    values: ["", "none", "outside"],
    default: ""
  },
  indicator: {
    type: Boolean,
    default: true
  },
  indicatorType: {
    type: String,
    values: ["circle", "rect"],
    default: "circle"
  },
  arrow: {
    type: String,
    values: ["always", "hover", "never"],
    default: "hover"
  },
  loop: {
    type: Boolean,
    default: true
  },
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  pauseOnHover: {
    type: Boolean,
    default: true
  }
};
var a9 = {
  change: (e14, t12) => [e14, t12].every((r13) => Number.isInteger(r13))
};
var l2 = Symbol("carouselContextKey");

// ../../node_modules/.pnpm/@vueuse+shared@9.12.0_vue@3.2.45/node_modules/@vueuse/shared/index.mjs
var _a;
var isClient = typeof window !== "undefined";
var isIOS = isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function resolveUnref(r13) {
  return typeof r13 === "function" ? r13() : unref(r13);
}
function identity(arg) {
  return arg;
}
function tryOnScopeDispose(fn) {
  if (getCurrentScope()) {
    onScopeDispose(fn);
    return true;
  }
  return false;
}
function tryOnMounted(fn, sync = true) {
  if (getCurrentInstance())
    onMounted(fn);
  else if (sync)
    fn();
  else
    nextTick(fn);
}

// ../../node_modules/.pnpm/@vueuse+core@9.12.0_vue@3.2.45/node_modules/@vueuse/core/index.mjs
function unrefElement(elRef) {
  var _a2;
  const plain = resolveUnref(elRef);
  return (_a2 = plain == null ? void 0 : plain.$el) != null ? _a2 : plain;
}
var defaultWindow = isClient ? window : void 0;
var defaultDocument = isClient ? window.document : void 0;
var defaultNavigator = isClient ? window.navigator : void 0;
var defaultLocation = isClient ? window.location : void 0;
function useSupported(callback, sync = false) {
  const isSupported = ref();
  const update = () => isSupported.value = Boolean(callback());
  update();
  tryOnMounted(update, sync);
  return isSupported;
}
var _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var globalKey = "__vueuse_ssr_handlers__";
_global[globalKey] = _global[globalKey] || {};
var handlers = _global[globalKey];
var __getOwnPropSymbols$f = Object.getOwnPropertySymbols;
var __hasOwnProp$f = Object.prototype.hasOwnProperty;
var __propIsEnum$f = Object.prototype.propertyIsEnumerable;
var __objRest$2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$f.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$f)
    for (var prop of __getOwnPropSymbols$f(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$f.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function useResizeObserver(target, callback, options = {}) {
  const _a2 = options, { window: window2 = defaultWindow } = _a2, observerOptions = __objRest$2(_a2, ["window"]);
  let observer;
  const isSupported = useSupported(() => window2 && "ResizeObserver" in window2);
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const stopWatch = watch(() => unrefElement(target), (el) => {
    cleanup();
    if (isSupported.value && window2 && el) {
      observer = new ResizeObserver(callback);
      observer.observe(el, observerOptions);
    }
  }, { immediate: true, flush: "post" });
  const stop = () => {
    cleanup();
    stopWatch();
  };
  tryOnScopeDispose(stop);
  return {
    isSupported,
    stop
  };
}
var defaultState = {
  x: 0,
  y: 0,
  pointerId: 0,
  pressure: 0,
  tiltX: 0,
  tiltY: 0,
  width: 0,
  height: 0,
  twist: 0,
  pointerType: null
};
var keys = Object.keys(defaultState);
var SwipeDirection;
(function(SwipeDirection2) {
  SwipeDirection2["UP"] = "UP";
  SwipeDirection2["RIGHT"] = "RIGHT";
  SwipeDirection2["DOWN"] = "DOWN";
  SwipeDirection2["LEFT"] = "LEFT";
  SwipeDirection2["NONE"] = "NONE";
})(SwipeDirection || (SwipeDirection = {}));
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a18, b5) => {
  for (var prop in b5 || (b5 = {}))
    if (__hasOwnProp.call(b5, prop))
      __defNormalProp(a18, prop, b5[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b5)) {
      if (__propIsEnum.call(b5, prop))
        __defNormalProp(a18, prop, b5[prop]);
    }
  return a18;
};
var _TransitionPresets = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
var TransitionPresets = __spreadValues({
  linear: identity
}, _TransitionPresets);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel/src/utils.mjs
var b2 = (l4) => {
  const s7 = isArray(l4) ? l4 : [l4], r13 = [];
  return s7.forEach((t12) => {
    var v6;
    isArray(t12) ? r13.push(...b2(t12)) : isVNode(t12) && isArray(t12.children) ? r13.push(...b2(t12.children)) : (r13.push(t12), isVNode(t12) && ((v6 = t12.component) == null ? void 0 : v6.subTree) && r13.push(...b2(t12.component.subTree)));
  }), r13;
};
var se = (l4, s7, r13) => b2(l4.subTree).filter(
  (a18) => {
    var n3;
    return isVNode(a18) && ((n3 = a18.type) == null ? void 0 : n3.name) === s7 && !!a18.component;
  }
).map((a18) => a18.component.uid).map((a18) => r13[a18]).filter((a18) => !!a18);
var ie = (l4, s7) => {
  const r13 = {}, t12 = shallowRef([]);
  return {
    children: t12,
    addChild: (n3) => {
      r13[n3.uid] = n3, t12.value = se(l4, s7, r13);
    },
    removeChild: (n3) => {
      delete r13[n3], t12.value = t12.value.filter((i6) => i6.uid !== n3);
    }
  };
};
var R2 = 300;
var de = (l4, s7, r13) => {
  const {
    children: t12,
    addChild: v6,
    removeChild: a18
  } = ie(getCurrentInstance(), "HCarouselItem"), n3 = ref(-1), i6 = ref(null), E3 = ref(false), d4 = ref(), z6 = computed(() => l4.arrow !== "never" && !unref(h6)), P4 = computed(() => t12.value.some((e14) => e14.props.label.toString().length > 0)), h6 = computed(() => l4.direction === "vertical"), V6 = (e14) => {
    let o8 = null;
    o8 || (o8 = setTimeout(() => {
      c5(e14), o8 = null;
    }, R2));
  }, _4 = (e14) => {
    let o8 = null;
    o8 || (o8 = setTimeout(() => {
      Q3(e14), o8 = null;
    }, R2));
  };
  function I() {
    i6.value && (clearInterval(i6.value), i6.value = null);
  }
  function C7() {
    l4.interval <= 0 || !l4.autoplay || i6.value || (i6.value = setInterval(() => D3(), l4.interval));
  }
  const D3 = () => {
    n3.value < t12.value.length - 1 ? n3.value = n3.value + 1 : l4.loop && (n3.value = 0);
  };
  function c5(e14) {
    if (isString(e14)) {
      const f2 = t12.value.filter((A4) => A4.props.name === e14);
      f2.length > 0 && (e14 = t12.value.indexOf(f2[0]));
    }
    if (e14 = Number(e14), Number.isNaN(e14) || e14 !== Math.floor(e14)) {
      console.error(r13, "index必须是数字");
      return;
    }
    const o8 = t12.value.length, u4 = n3.value;
    e14 < 0 ? n3.value = l4.loop ? o8 - 1 : 0 : e14 >= o8 ? n3.value = l4.loop ? 0 : o8 - 1 : n3.value = e14, u4 === n3.value && p(u4), B5();
  }
  function p(e14) {
    t12.value.forEach((o8, u4) => {
      o8.translateItem(u4, n3.value, e14);
    });
  }
  function K3(e14, o8) {
    var L3, M2, S6, F2;
    const u4 = unref(t12), f2 = u4.length;
    if (f2 === 0 || !e14.states.inStage)
      return false;
    const A4 = o8 + 1, Y3 = o8 - 1, H4 = f2 - 1, Z4 = u4[H4].states.active, $8 = u4[0].states.active, x3 = (M2 = (L3 = u4[A4]) == null ? void 0 : L3.states) == null ? void 0 : M2.active, ee4 = (F2 = (S6 = u4[Y3]) == null ? void 0 : S6.states) == null ? void 0 : F2.active;
    return o8 === H4 && $8 || x3 ? "left" : o8 === 0 && Z4 || ee4 ? "right" : false;
  }
  function U2() {
    E3.value = true, l4.pauseOnHover && I();
  }
  function j4() {
    E3.value = false, C7();
  }
  function q4(e14) {
    unref(h6) || t12.value.forEach((o8, u4) => {
      e14 === K3(o8, u4) && (o8.states.hover = true);
    });
  }
  function G5() {
    unref(h6) || t12.value.forEach((e14) => {
      e14.states.hover = false;
    });
  }
  function J4(e14) {
    n3.value = e14;
  }
  function Q3(e14) {
    l4.trigger === "hover" && e14 !== n3.value && (n3.value = e14);
  }
  function W2() {
    c5(n3.value - 1);
  }
  function X2() {
    c5(n3.value + 1);
  }
  function B5() {
    I(), C7();
  }
  watch(
    () => n3.value,
    (e14, o8) => {
      p(o8), o8 > -1 && s7("change", e14, o8);
    }
  ), watch(
    () => l4.autoplay,
    (e14) => {
      e14 ? C7() : I();
    }
  ), watch(
    () => l4.loop,
    () => {
      c5(n3.value);
    }
  ), watch(
    () => l4.interval,
    () => {
      B5();
    }
  ), watch(
    () => t12.value,
    () => {
      t12.value.length > 0 && c5(l4.initialIndex);
    }
  );
  const y8 = shallowRef();
  return onMounted(() => {
    y8.value = useResizeObserver(d4.value, () => {
      p();
    }), C7();
  }), onBeforeUnmount(() => {
    I(), d4.value && y8.value && y8.value.stop();
  }), provide(l2, {
    root: d4,
    isVertical: h6,
    items: t12,
    loop: l4.loop,
    addItem: v6,
    removeItem: a18,
    setActiveItem: c5
  }), {
    root: d4,
    activeIndex: n3,
    arrowDisplay: z6,
    hasLabel: P4,
    hover: E3,
    items: t12,
    handleButtonEnter: q4,
    handleButtonLeave: G5,
    handleIndicatorClick: J4,
    handleMouseEnter: U2,
    handleMouseLeave: j4,
    setActiveItem: c5,
    prev: W2,
    next: X2,
    throttledArrowClick: V6,
    throttledIndicatorHover: _4
  };
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel/src/carousel.mjs
var _ = ["onMouseenter", "onClick"];
var ee = { key: 0 };
var oe = {
  name: "HCarousel"
};
var ie2 = defineComponent({
  ...oe,
  props: o5,
  emits: a9,
  setup(D3, { expose: H4, emit: N6 }) {
    const r13 = D3, {
      root: P4,
      activeIndex: s7,
      arrowDisplay: v6,
      hasLabel: f2,
      hover: w3,
      items: y8,
      handleButtonEnter: C7,
      handleButtonLeave: u4,
      handleIndicatorClick: T6,
      handleMouseEnter: k8,
      handleMouseLeave: M2,
      setActiveItem: V6,
      prev: z6,
      next: A4,
      throttledArrowClick: $8,
      throttledIndicatorHover: F2
    } = de(r13, N6, "Hcarousel"), j4 = computed(() => ({
      [`h-carousel--${r13.direction}`]: r13.direction
    })), q4 = computed(() => ({
      [`h-carousel-indicators--${r13.direction}`]: r13.direction,
      ["h-carousel-indicators-labels"]: unref(f2),
      ["h-carousel-indicators-outside"]: r13.indicatorPosition === "outside"
    })), G5 = computed(() => ({
      [`h-carousel-indicator-button--${r13.indicatorType}`]: r13.indicatorType
    }));
    return H4({
      setActiveItem: V6,
      prev: z6,
      next: A4
    }), (i6, o8) => {
      const b5 = resolveComponent("h-icon");
      return openBlock(), createElementBlock("div", {
        ref_key: "root",
        ref: P4,
        class: normalizeClass(["h-carousel", unref(j4)]),
        onMouseenter: o8[6] || (o8[6] = withModifiers(
          (...t12) => unref(k8) && unref(k8)(...t12),
          ["stop"]
        )),
        onMouseleave: o8[7] || (o8[7] = withModifiers(
          (...t12) => unref(M2) && unref(M2)(...t12),
          ["stop"]
        ))
      }, [
        createBaseVNode("div", {
          class: "h-carousel-container",
          style: normalizeStyle({ height: i6.height })
        }, [
          unref(v6) ? (openBlock(), createBlock(Transition, {
            key: 0,
            name: "carousel-arrow-left"
          }, {
            default: withCtx(() => [
              withDirectives(createBaseVNode("button", {
                type: "button",
                class: "h-carousel-arrow h-carousel-arrow-left",
                onMouseenter: o8[0] || (o8[0] = (t12) => unref(C7)("left")),
                onMouseleave: o8[1] || (o8[1] = (...t12) => unref(u4) && unref(u4)(...t12)),
                onClick: o8[2] || (o8[2] = withModifiers((t12) => unref($8)(unref(s7) - 1), ["stop"]))
              }, [
                createVNode(b5, { name: "arrow-left" })
              ], 544), [
                [vShow, (i6.arrow === "always" || unref(w3)) && (r13.loop || unref(s7) > 0)]
              ])
            ]),
            _: 1
          })) : createCommentVNode("", true),
          unref(v6) ? (openBlock(), createBlock(Transition, {
            key: 1,
            name: "carousel-arrow-right"
          }, {
            default: withCtx(() => [
              withDirectives(createBaseVNode("button", {
                type: "button",
                class: "h-carousel-arrow h-carousel-arrow-right",
                onMouseenter: o8[3] || (o8[3] = (t12) => unref(C7)("right")),
                onMouseleave: o8[4] || (o8[4] = (...t12) => unref(u4) && unref(u4)(...t12)),
                onClick: o8[5] || (o8[5] = withModifiers((t12) => unref($8)(unref(s7) + 1), ["stop"]))
              }, [
                createVNode(b5, { name: "arrow-right" })
              ], 544), [
                [vShow, (i6.arrow === "always" || unref(w3)) && (r13.loop || unref(s7) < unref(y8).length - 1)]
              ])
            ]),
            _: 1
          })) : createCommentVNode("", true),
          renderSlot(i6.$slots, "default")
        ], 4),
        i6.indicatorPosition !== "none" ? (openBlock(), createElementBlock("ul", {
          key: 0,
          class: normalizeClass(["h-carousel-indicators", unref(q4)])
        }, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(y8), (t12, c5) => (openBlock(), createElementBlock("li", {
            key: c5,
            class: normalizeClass(["h-carousel-indicator", {
              "h-carousel-indicator-active": c5 === unref(s7),
              [`h-carousel-indicator--${r13.direction}`]: r13.direction
            }]),
            onMouseenter: (J4) => unref(F2)(c5),
            onClick: withModifiers((J4) => unref(T6)(c5), ["stop"])
          }, [
            createBaseVNode("button", {
              class: normalizeClass(["h-carousel-indicator-button", unref(G5)])
            }, [
              unref(f2) ? (openBlock(), createElementBlock("span", ee, toDisplayString(t12.props.label), 1)) : createCommentVNode("", true)
            ], 2)
          ], 42, _))), 128))
        ], 2)) : createCommentVNode("", true)
      ], 34);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel/index.mjs
var m5 = a(ie2);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel-item/src/carousel-item2.mjs
var e7 = {
  name: { type: String, default: "" },
  label: {
    type: [String, Number],
    default: ""
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel-item/src/utils.mjs
var T = (k8, I) => {
  const r13 = inject(l2), u4 = getCurrentInstance();
  r13 || console.error(I, "usage: <h-carousel><h-carousel-item></h-carousel-item></h-carousel>"), u4 || console.error(I, "compositional hook can only be invoked inside setups");
  const p = ref(false), l4 = ref(0), v6 = ref(1), i6 = ref(false), f2 = ref(false), C7 = ref(false), m9 = ref(false), { isVertical: g } = r13;
  function y8(t12, e14, o8) {
    const s7 = o8 - 1, c5 = e14 - 1, h6 = e14 + 1, a18 = o8 / 2;
    return e14 === 0 && t12 === s7 ? -1 : e14 === s7 && t12 === 0 ? o8 : t12 < c5 && e14 - t12 >= a18 ? o8 + 1 : t12 > h6 && t12 - e14 >= a18 ? -2 : t12;
  }
  function b5(t12, e14, o8) {
    const s7 = r13.root.value;
    return s7 ? ((o8 ? s7.offsetHeight : s7.offsetWidth) || 0) * (t12 - e14) : 0;
  }
  const N6 = (t12, e14, o8) => {
    var a18;
    const s7 = (a18 = r13.items.value.length) != null ? a18 : Number.NaN, c5 = t12 === e14;
    o8 !== void 0 && (m9.value = c5 || t12 === o8), !c5 && s7 > 2 && r13.loop && (t12 = y8(t12, e14, s7));
    const h6 = unref(g);
    i6.value = c5, l4.value = b5(t12, e14, h6), f2.value = true;
  };
  function V6() {
  }
  return onMounted(() => {
    r13.addItem({
      props: k8,
      states: reactive({
        hover: p,
        translate: l4,
        scale: v6,
        active: i6,
        ready: f2,
        inStage: C7,
        animating: m9
      }),
      uid: u4.uid,
      translateItem: N6
    });
  }), onUnmounted(() => {
    r13.removeItem(u4.uid);
  }), {
    active: i6,
    animating: m9,
    hover: p,
    inStage: C7,
    isVertical: g,
    translate: l4,
    scale: v6,
    ready: f2,
    handleItemClick: V6
  };
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel-item/src/carousel-item.mjs
var B = {
  name: "HCarouselItem"
};
var P = defineComponent({
  ...B,
  props: e7,
  setup(n3) {
    const l4 = n3, { active: i6, animating: c5, hover: m9, inStage: u4, isVertical: p, translate: f2, scale: d4, ready: h6, handleItemClick: s7 } = T(
      l4,
      "HCarouselItem"
    ), C7 = computed(() => ({
      ["h-carousel-item--active"]: unref(i6),
      ["h-carousel-item--inStage"]: unref(u4),
      ["h-carousel-item--hover"]: unref(m9),
      ["h-carousel-item--animating"]: unref(c5)
    })), v6 = computed(() => {
      const t12 = `${`translate${unref(p) ? "Y" : "X"}`}(${unref(f2)}px)`, r13 = `scale(${unref(d4)})`;
      return {
        transform: [t12, r13].join(" ")
      };
    });
    return (o8, t12) => withDirectives((openBlock(), createElementBlock("div", {
      class: normalizeClass(["h-carousel-item", unref(C7)]),
      style: normalizeStyle(unref(v6)),
      onClick: t12[0] || (t12[0] = (...r13) => unref(s7) && unref(s7)(...r13))
    }, [
      renderSlot(o8.$slots, "default")
    ], 6)), [
      [vShow, unref(h6)]
    ]);
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/carousel-item/index.mjs
var a10 = a(P);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tag/src/tag2.mjs
var a11 = {
  closable: Boolean,
  type: {
    type: String,
    values: ["success", "info", "warning", "danger", "primary"],
    default: "primary"
  },
  border: Boolean,
  disableTransitions: Boolean,
  color: {
    type: String,
    default: ""
  },
  size: {
    type: String,
    values: ["medium", "small", "large"],
    default: "medium"
  },
  theme: {
    type: String,
    values: ["dark", "plain"],
    default: "plain"
  },
  round: Boolean
};
var n2 = {
  close: (e14) => e14 instanceof MouseEvent,
  click: (e14) => e14 instanceof MouseEvent
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tag/src/tag.mjs
var N3 = { class: "h-tag-content" };
var S3 = { class: "h-tag-content" };
var V3 = {
  name: "HTag"
};
var P2 = defineComponent({
  ...V3,
  props: a11,
  emits: n2,
  setup(g, { emit: a18 }) {
    const C7 = g, c5 = computed(() => {
      const { type: o8, border: f2, theme: e14, round: _4, size: p } = C7;
      return {
        ["h-tag-round"]: _4,
        [`h-tag--${o8}`]: unref(o8),
        [`h-tag--${p}`]: unref(p),
        [`is-${e14}`]: unref(e14)
      };
    }), r13 = (o8) => {
      a18("close", o8);
    }, i6 = (o8) => {
      a18("click", o8);
    };
    return (o8, f2) => {
      const e14 = resolveComponent("h-icon");
      return o8.disableTransitions ? (openBlock(), createElementBlock("span", {
        key: 0,
        class: normalizeClass(["h-tag", unref(c5)]),
        style: normalizeStyle({ backgroundColor: o8.color }),
        onClick: i6
      }, [
        createBaseVNode("span", N3, [
          renderSlot(o8.$slots, "default")
        ]),
        o8.closable ? (openBlock(), createBlock(e14, {
          key: 0,
          name: "close",
          class: "h-tag-close",
          onClick: withModifiers(r13, ["stop"])
        }, null, 8, ["onClick"])) : createCommentVNode("", true)
      ], 6)) : (openBlock(), createBlock(Transition, {
        key: 1,
        name: "h-tag-zoom-in-center",
        appear: ""
      }, {
        default: withCtx(() => [
          createBaseVNode("span", {
            class: normalizeClass(["h-tag", unref(c5)]),
            style: normalizeStyle({ backgroundColor: o8.color }),
            onClick: i6
          }, [
            createBaseVNode("span", S3, [
              renderSlot(o8.$slots, "default")
            ]),
            o8.closable ? (openBlock(), createBlock(e14, {
              key: 0,
              name: "close",
              class: "h-tag-close",
              onClick: withModifiers(r13, ["stop"])
            }, null, 8, ["onClick"])) : createCommentVNode("", true)
          ], 6)
        ]),
        _: 3
      }));
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tag/index.mjs
var r7 = a(P2);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/progress/src/progress2.mjs
var t9 = (e14) => e14;
var r8 = {
  type: {
    type: String,
    default: "line",
    values: ["line", "circle", "dashboard"]
  },
  percentage: {
    type: Number,
    default: 0,
    validator: (e14) => e14 >= 0 && e14 <= 100
  },
  status: {
    type: String,
    default: "",
    values: ["", "success", "warning", "error"]
  },
  indeterminate: {
    type: Boolean,
    default: false
  },
  duration: {
    type: Number,
    default: 3
  },
  strokeWidth: {
    type: Number,
    default: 6
  },
  strokeLinecap: {
    type: t9(String),
    default: "round"
  },
  textInside: {
    type: Boolean,
    default: false
  },
  width: {
    type: Number,
    default: 126
  },
  showText: {
    type: Boolean,
    default: true
  },
  color: {
    type: t9([String, Array, Function]),
    default: ""
  },
  format: {
    type: t9(Function),
    default: (e14) => `${e14}%`
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/progress/src/progress.mjs
var O = ["aria-valuenow"];
var V4 = {
  key: 0,
  class: "h-progress-bar"
};
var H = {
  key: 0,
  class: "h-progress-bar-innerText"
};
var R3 = { viewBox: "0 0 100 100" };
var U = ["d", "stroke-width"];
var j2 = ["d", "stroke", "opacity", "stroke-linecap", "stroke-width"];
var q = { key: 0 };
var G = {
  name: "HProgress"
};
var Y = defineComponent({
  ...G,
  props: r8,
  setup(_4) {
    const t12 = _4, f2 = {
      success: "#67c23a",
      error: "#f56c6c",
      warning: "#e6a23c",
      default: "#20a0ff"
    }, P4 = computed(() => {
      const { status: e14, type: s7, showText: i6, textInside: a18 } = t12;
      return {
        [`h-progress--${s7}`]: s7,
        [`h-progress--${e14}`]: e14,
        ["h-progress-without-text"]: !i6,
        ["h-progress-text-inside"]: a18
      };
    }), T6 = computed(() => ({
      width: `${t12.percentage}%`,
      animationDuration: `${t12.duration}s`,
      backgroundColor: $8(t12.percentage)
    })), d4 = computed(() => (t12.strokeWidth / t12.width * 100).toFixed(1)), k8 = computed(() => ["circle", "dashboard"].includes(t12.type) ? Number.parseInt(`${50 - Number.parseFloat(d4.value) / 2}`, 10) : 0), m9 = computed(() => {
      const e14 = k8.value, s7 = t12.type === "dashboard";
      return `
          M 50 50
          m 0 ${s7 ? "" : "-"}${e14}
          a ${e14} ${e14} 0 1 1 0 ${s7 ? "-" : ""}${e14 * 2}
          a ${e14} ${e14} 0 1 1 0 ${s7 ? "" : "-"}${e14 * 2}
          `;
    }), u4 = computed(() => 2 * Math.PI * k8.value), g = computed(() => t12.type === "dashboard" ? 0.75 : 1), y8 = computed(() => `${-1 * u4.value * (1 - g.value) / 2}px`), x3 = computed(() => ({
      strokeDasharray: `${u4.value * g.value}px, ${u4.value}px`,
      strokeDashoffset: y8.value
    })), I = computed(() => ({
      strokeDasharray: `${u4.value * g.value * (t12.percentage / 100)}px, ${u4.value}px`,
      strokeDashoffset: y8.value,
      transition: "stroke-dasharray 0.6s ease 0s, stroke 0.6s ease, opacity ease 0.6s"
    })), z6 = computed(() => {
      let e14;
      return t12.color ? e14 = $8(t12.percentage) : e14 = f2[t12.status] || f2.default, e14;
    }), B5 = computed(() => t12.status === "warning" ? "warning" : t12.status === "success" ? "success" : "close"), N6 = computed(() => t12.type === "line" ? 12 + t12.strokeWidth * 0.4 : t12.width * 0.111111 + 2), v6 = computed(() => t12.format(t12.percentage));
    function W2(e14) {
      const s7 = 100 / e14.length;
      return e14.map((a18, c5) => isString(a18) ? {
        color: a18,
        percentage: (c5 + 1) * s7
      } : a18).sort((a18, c5) => a18.percentage - c5.percentage);
    }
    const $8 = (e14) => {
      var i6;
      const { color: s7 } = t12;
      if (isFunction(s7))
        return s7(e14);
      if (isString(s7))
        return s7;
      {
        const a18 = W2(s7);
        for (const c5 of a18)
          if (c5.percentage > e14)
            return c5.color;
        return (i6 = a18[a18.length - 1]) == null ? void 0 : i6.color;
      }
    };
    return (e14, s7) => {
      const i6 = resolveComponent("h-icon");
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["h-progress", unref(P4)]),
        role: "progressbar",
        "aria-valuenow": e14.percentage,
        "aria-valuemin": "0",
        "aria-valuemax": "100"
      }, [
        e14.type === "line" ? (openBlock(), createElementBlock("div", V4, [
          createBaseVNode("div", {
            class: "h-progress-bar-outer",
            style: normalizeStyle({ height: `${e14.strokeWidth}px` })
          }, [
            createBaseVNode("div", {
              class: normalizeClass(["h-progress-bar-inner", { ["h-progress-bar-innerindeterminate"]: e14.indeterminate }]),
              style: normalizeStyle(unref(T6))
            }, [
              (e14.showText || e14.$slots.default) && e14.textInside ? (openBlock(), createElementBlock("div", H, [
                renderSlot(e14.$slots, "default", { percentage: e14.percentage }, () => [
                  createBaseVNode("span", null, toDisplayString(unref(v6)), 1)
                ])
              ])) : createCommentVNode("", true)
            ], 6)
          ], 4)
        ])) : (openBlock(), createElementBlock("div", {
          key: 1,
          class: "h-progress-circle",
          style: normalizeStyle({ height: `${e14.width}px`, width: `${e14.width}px` })
        }, [
          (openBlock(), createElementBlock("svg", R3, [
            createBaseVNode("path", {
              class: "h-progress-circle-track",
              d: unref(m9),
              stroke: "#e5e9f2",
              "stroke-width": unref(d4),
              fill: "none",
              style: normalizeStyle(unref(x3))
            }, null, 12, U),
            createBaseVNode("path", {
              class: "h-progress-circle-path",
              d: unref(m9),
              stroke: unref(z6),
              fill: "none",
              opacity: e14.percentage ? 1 : 0,
              "stroke-linecap": e14.strokeLinecap,
              "stroke-width": unref(d4),
              style: normalizeStyle(unref(I))
            }, null, 12, j2)
          ]))
        ], 4)),
        (e14.showText || e14.$slots.default) && !e14.textInside ? (openBlock(), createElementBlock("div", {
          key: 2,
          class: "h-progress-text",
          style: normalizeStyle({ fontSize: `${unref(N6)}px` })
        }, [
          renderSlot(e14.$slots, "default", { percentage: e14.percentage }, () => [
            e14.status ? (openBlock(), createBlock(i6, {
              key: 1,
              name: unref(B5)
            }, null, 8, ["name"])) : (openBlock(), createElementBlock("span", q, toDisplayString(unref(v6)), 1))
          ])
        ], 4)) : createCommentVNode("", true)
      ], 10, O);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/progress/index.mjs
var m6 = a(Y);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/scrollbar/src/scrollbar2.mjs
var a12 = {
  height: {
    type: [String, Number],
    default: ""
  },
  maxHeight: {
    type: [String, Number],
    default: ""
  },
  native: {
    type: Boolean,
    default: false
  },
  wrapStyle: {
    type: o([String, Object, Array]),
    default: ""
  },
  wrapClass: {
    type: String,
    default: ""
  },
  viewStyle: {
    type: o([String, Object, Array]),
    default: ""
  },
  viewClass: {
    type: String,
    default: ""
  },
  noresize: {
    type: Boolean,
    default: false
  },
  tag: {
    type: String,
    default: "div"
  },
  always: {
    type: Boolean,
    default: false
  },
  minSize: {
    type: Number,
    default: 20
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/scrollbar/src/scroll-thumb.mjs
var A3 = {
  name: "HThumb"
};
var q2 = defineComponent({
  ...A3,
  props: {
    height: null,
    maxHeight: null,
    width: null,
    viewHeight: null,
    viewWidth: null,
    thumbHeight: null,
    thumbWidth: null,
    native: { type: Boolean },
    always: { type: Boolean },
    noresize: { type: Boolean },
    retio: null,
    move: null
  },
  emits: ["update:isDraw", "setScrollViewTop", "setScrollViewLeft"],
  setup(v6, { expose: _4, emit: c5 }) {
    const e14 = v6, h6 = ref(0), m9 = ref(0), y8 = (t12) => {
      const l4 = e14.viewHeight - r13.value, o8 = t12 * r13.value * e14.retio / l4;
      if (o8 >= a18.value)
        return h6.value = a18.value;
      h6.value = o8;
    }, S6 = (t12) => {
      const l4 = e14.viewWidth - n3.value, o8 = t12 * n3.value * e14.retio / l4;
      if (o8 >= a18.value)
        return m9.value = a18.value;
      m9.value = o8;
    }, W2 = (t12) => {
      const l4 = Number(t12 * e14.viewHeight / r13.value).toFixed(5);
      c5("setScrollViewTop", l4);
    }, L3 = (t12) => {
      const l4 = Number(t12 * e14.viewWidth / n3.value).toFixed(5);
      c5("setScrollViewLeft", l4);
    }, b5 = (t12, l4) => {
      let o8 = t12;
      t12 <= 0 && (t12 = 0), t12 >= a18.value && (t12 = a18.value, o8 = l4 === "moveX" ? n3.value : r13.value), l4 === "moveX" ? m9.value = t12 : h6.value = t12, s7.value = true, c5("update:isDraw", s7.value), l4 === "moveX" ? L3(o8) : W2(o8);
    }, i6 = ref({}), V6 = ref(null), r13 = ref(Number(parseInt(e14.height))), n3 = ref(Number(parseInt(e14.width))), a18 = ref(0), f2 = ref(false), s7 = ref(false), N6 = computed(() => e14.move === "moveX" ? {
      width: `${e14.width}px`
    } : {
      height: `${e14.height}`
    }), z6 = computed(() => e14.move === "moveX" ? {
      width: `${e14.thumbWidth}px`,
      left: `${m9.value}px`
    } : {
      height: `${e14.thumbHeight}px`,
      top: `${h6.value}px`
    }), D3 = computed(() => e14.viewWidth ? !e14.height && !e14.maxHeight && e14.viewWidth <= n3.value : !e14.height && !e14.maxHeight);
    function Y3(t12, l4) {
      t12.onmousedown = function(o8) {
        let g = l4 === "moveX" ? o8.pageX - t12.offsetLeft : o8.pageY - t12.offsetTop;
        return document.onmousemove = function(T6) {
          let $8 = l4 === "moveX" ? T6.pageX - g : T6.pageY - g;
          return b5($8, l4 === "moveX" ? "moveX" : "moveY"), false;
        }, document.onmouseup = function() {
          return document.onmousemove = null, document.onmouseup = null, document.onmousedown = null, nextTick(() => {
            s7.value = false, c5("update:isDraw", s7.value);
          }), false;
        }, false;
      };
    }
    const d4 = () => {
      f2.value || (f2.value = true, n3.value = Number(parseInt(e14.width)), r13.value = Number(parseInt(e14.height)), nextTick(() => {
        a18.value = e14.move === "moveX" ? n3.value - i6.value.offsetWidth : r13.value - i6.value.offsetHeight;
      }), f2.value = false);
    };
    return watch(
      () => e14.height,
      () => {
        e14.noresize || d4();
      }
    ), watch(
      () => e14.viewHeight,
      () => {
        e14.noresize || d4();
      }
    ), onMounted(() => {
      Y3(i6.value, e14.move === "moveX" ? "moveX" : "moveY"), d4();
    }), onUnmounted(() => {
      !i6.value || (i6.value.onmousedown = null);
    }), _4({
      setScrollTop: y8,
      setScrollLeft: S6,
      handleDrawScrollVal: b5
    }), (t12, l4) => (openBlock(), createElementBlock("div", {
      ref_key: "scrollbar_bar",
      ref: V6,
      class: normalizeClass([
        "h-scrollbar__bar",
        v6.move === "moveX" ? "is-horizontal" : "is-vertical",
        { show: s7.value },
        { hide: unref(D3) },
        { native: v6.native },
        { always: v6.always }
      ]),
      style: normalizeStyle(unref(N6))
    }, [
      createBaseVNode("div", {
        ref_key: "scrollbar_thumb",
        ref: i6,
        class: "h-scrollbar__thumb",
        style: normalizeStyle(unref(z6))
      }, null, 4)
    ], 6));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/scrollbar/src/scrollbar.mjs
var J = {
  class: "h-scrollbar",
  ref: "scrollbar"
};
var K = {
  name: "HScrollbar"
};
var ae = defineComponent({
  ...K,
  props: a12,
  emits: ["scroll"],
  setup(k8, { expose: D3, emit: V6 }) {
    const l4 = k8, o8 = ref(null), i6 = ref(null), u4 = ref(null), a18 = ref(Number(parseInt(l4.height))), v6 = ref(Number(parseInt(l4.maxHeight))), n3 = ref(0), f2 = ref(0), b5 = ref(0), c5 = ref(false), S6 = ref(0), s7 = ref(0), h6 = ref(0), H4 = ref(false), p = computed(() => !l4.height && !l4.maxHeight ? "moveX" : "moveY"), W2 = computed(() => a18.value ? {
      height: `${a18.value}px`
    } : {}), C7 = (e14) => {
      u4.value.handleDrawScrollVal(e14, "moveY"), c5.value = false;
    }, x3 = (e14) => {
      u4.value.handleDrawScrollVal(e14, "moveX"), c5.value = false;
    }, m9 = () => {
      if (c5.value)
        return;
      const e14 = p.value === "moveX" ? Number(o8.value.scrollLeft.toFixed(5)) : Number(o8.value.scrollTop.toFixed(5));
      p.value === "moveX" ? u4.value.setScrollLeft(e14) : u4.value.setScrollTop(e14), V6("scroll", { scrollTop: o8.value.scrollTop, scrollLeft: o8.value.scrollLeft });
    }, I = (e14) => {
      o8.value.scrollTop = e14;
    }, X2 = (e14) => {
      o8.value.scrollLeft = e14;
    }, w3 = () => {
      var e14, r13;
      H4.value = true, n3.value = i6.value.offsetWidth, f2.value = (e14 = i6.value) == null ? void 0 : e14.offsetHeight, b5.value = (r13 = i6.value) == null ? void 0 : r13.scrollWidth, s7.value = t2(a18.value * a18.value / f2.value, 0), a18.value !== -1 && s7.value <= l4.minSize && (s7.value = l4.minSize), h6.value = t2(n3.value * n3.value / b5.value, 0), h6.value <= l4.minSize && (h6.value = l4.minSize), v6.value && (f2.value >= v6.value ? a18.value = v6.value : (a18.value = 0, s7.value = 0)), S6.value = 1 - (p.value === "moveX" ? t2(h6.value / n3.value, 2) : t2(s7.value / a18.value, 2)), H4.value = false;
    };
    watch(
      () => l4.height,
      () => {
        l4.noresize || (a18.value = Number(parseInt(l4.height)), w3(), m9());
      }
    ), watch(
      () => l4.maxHeight,
      () => {
        l4.noresize || (v6.value = Number(parseInt(l4.maxHeight)), a18.value = Number(parseInt(l4.height)) || 0, w3(), m9());
      }
    );
    let g = null;
    return onMounted(() => {
      var r13;
      w3(), (r13 = o8.value) == null || r13.addEventListener("scroll", m9), g = new MutationObserver(e14);
      function e14() {
        l4.noresize || (w3(), m9());
      }
      nextTick(() => {
        g.observe(i6.value, {
          childList: true,
          characterData: true
        });
      });
    }), onUnmounted(() => {
      var e14;
      (e14 = o8.value) == null || e14.removeEventListener("scroll", m9), g.disconnect();
    }), D3({
      setScrollTop: C7,
      setScrollLeft: x3,
      wrapRef: o8
    }), (e14, r13) => (openBlock(), createElementBlock("div", J, [
      createBaseVNode("div", {
        class: normalizeClass([e14.wrapClass, "h-scrollbar__wrap", { native: e14.native }]),
        ref_key: "scrollbar_wrap",
        ref: o8,
        style: normalizeStyle([unref(W2), e14.wrapStyle])
      }, [
        (openBlock(), createBlock(resolveDynamicComponent(e14.tag), {
          class: normalizeClass([e14.viewClass, "h-scrollbar__view"]),
          ref_key: "scrollbar_view",
          ref: i6,
          style: normalizeStyle(e14.viewStyle)
        }, {
          default: withCtx(() => [
            renderSlot(e14.$slots, "default")
          ]),
          _: 3
        }, 8, ["class", "style"]))
      ], 6),
      createVNode(q2, {
        ref_key: "scrollThumb",
        ref: u4,
        onSetScrollViewTop: I,
        onSetScrollViewLeft: X2,
        always: e14.always,
        isDraw: c5.value,
        "onUpdate:isDraw": r13[0] || (r13[0] = (B5) => c5.value = B5),
        height: a18.value,
        maxHeight: v6.value,
        width: n3.value,
        noresize: e14.noresize,
        viewHeight: f2.value,
        viewWidth: b5.value,
        thumbWidth: h6.value,
        native: l4.native,
        move: unref(p),
        retio: S6.value,
        thumbHeight: s7.value
      }, null, 8, ["always", "isDraw", "height", "maxHeight", "width", "noresize", "viewHeight", "viewWidth", "thumbWidth", "native", "move", "retio", "thumbHeight"])
    ], 512));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/scrollbar/index.mjs
var l3 = a(ae);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/slider/src/slider2.mjs
var t10 = Array;
var a13 = {
  modelValue: {
    type: o([Number, Array]),
    default: 0
  },
  id: {
    type: String,
    default: void 0
  },
  min: {
    type: Number,
    default: 0
  },
  max: {
    type: Number,
    default: 100
  },
  step: {
    type: Number,
    default: 1
  },
  showInput: Boolean,
  showInputControls: {
    type: Boolean,
    default: true
  },
  showStops: Boolean,
  showTooltip: {
    type: Boolean,
    default: true
  },
  formatTooltip: {
    type: o(Function),
    default: void 0
  },
  disabled: Boolean,
  range: Boolean,
  vertical: Boolean,
  height: {
    type: Number,
    default: 6
  },
  width: Number,
  debounce: {
    type: Number,
    default: 300
  },
  label: {
    type: String,
    default: void 0
  },
  rangeStartLabel: {
    type: String,
    default: void 0
  },
  rangeEndLabel: {
    type: String,
    default: void 0
  },
  formatValueText: {
    type: o(Function),
    default: void 0
  },
  tooltipClass: {
    type: String,
    default: void 0
  },
  placement: {
    type: String,
    values: t10,
    default: "top"
  },
  marks: {
    type: o(Object)
  },
  validateEvent: {
    type: Boolean,
    default: true
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/slider/src/marker.mjs
var T2 = { class: "h-slider__button-wrapper" };
var V5 = {
  name: "HSliderMarker"
};
var z4 = defineComponent({
  ...V5,
  props: a13,
  emits: ["update:isDraw", "setMarkerSite"],
  setup(f2, { expose: d4, emit: n3 }) {
    const e14 = f2, o8 = useAttrs(), r13 = ref(null), l4 = ref(0), _4 = ref(0), c5 = computed(() => e14.vertical ? {
      bottom: `${e14.modelValue}%`
    } : {
      left: `${e14.modelValue}%`
    }), w3 = (t12) => {
      t12.onmousedown = function() {
        return document.onmousemove = function(s7) {
          return e14.disabled || (n3("update:isDraw", true), e14.vertical ? l4.value = s(o8.runway_wraper) + o8.runway_wraper.offsetHeight - s7.pageY : l4.value = s7.pageX - o2(o8.runway_wraper), n3("setMarkerSite", l4.value, o8.yname)), false;
        }, document.onmouseup = function() {
          return document.onmousemove = null, document.onmousedown = null, document.onmouseup = null, setTimeout(() => {
            n3("update:isDraw", false);
          }, 50), false;
        }, false;
      };
    };
    return onMounted(() => {
      w3(r13.value);
    }), d4({
      btnIndex: _4
    }), (t12, s7) => {
      const v6 = resolveComponent("h-tooltip");
      return openBlock(), createElementBlock("div", T2, [
        t12.showTooltip ? (openBlock(), createBlock(v6, {
          key: 0,
          content: t12.$attrs.tip,
          placement: t12.placement
        }, {
          default: withCtx(() => [
            createBaseVNode("div", {
              ref_key: "btn",
              ref: r13,
              class: "h-slider__button",
              style: normalizeStyle(unref(c5))
            }, null, 4)
          ]),
          _: 1
        }, 8, ["content", "placement"])) : (openBlock(), createElementBlock("div", {
          key: 1,
          ref_key: "btn",
          ref: r13,
          class: "h-slider__button",
          style: normalizeStyle(unref(c5))
        }, null, 4))
      ]);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/slider/src/utils.mjs
var c3 = (u4, t12, n3) => {
  if (u4 > n3 || u4 < t12)
    throw new Error("不能超出限定范围(默认0~100)");
  return true;
};
var i2 = (u4, t12, n3) => {
  if (!u4)
    return [];
  const o8 = Math.floor(n3 / t12), s7 = u4 / o8, e14 = [];
  for (let r13 = 1; r13 <= o8; r13++)
    e14.push(s7 * r13);
  return e14;
};
var d2 = (u4, t12, n3) => {
  const o8 = (n3 - t12) / 2;
  return u4 > t12 + o8 ? "end" : "start";
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/slider/src/runway.mjs
var Z = {
  key: 0,
  class: "h-slider__stop"
};
var ee2 = {
  name: "HSliderRunway"
};
var ie3 = defineComponent({
  ...ee2,
  props: a13,
  setup(D3, { expose: A4 }) {
    const e14 = D3, o8 = ref(null), v6 = ref(null), d4 = ref(null), i6 = ref(0), s7 = ref(0), h6 = ref(0), p = ref(0), f2 = ref([]), w3 = ref(0), y8 = ref(0), c5 = ref(false), S6 = ref(0), L3 = (t12) => {
      let a18 = 0;
      const l4 = JSON.parse(JSON.stringify(f2.value));
      l4.unshift(0), l4.push(Number.MAX_SAFE_INTEGER);
      for (let n3 = 0; n3 < l4.length; n3++)
        if (t12 <= l4[n3]) {
          a18 = d2(t12, l4[n3 - 1], l4[n3]) === "end" ? n3 : n3 - 1;
          break;
        }
      return [l4, a18];
    }, B5 = computed(() => e14.vertical ? {
      bottom: `${h6.value}%`,
      height: `${p.value}%`
    } : {
      left: `${h6.value}%`,
      width: `${p.value}%`
    }), m9 = (t12, a18) => {
      let l4 = 0, [n3, u4] = L3(t12);
      u4 === -1 && (u4 = 0), l4 = Number(t2(String(n3[u4] / e14.width * 100), 0)), a18 === "btn1" ? (i6.value = l4, w3.value = u4 * e14.step + e14.min, v6.value.btnIndex = u4 - (u4 === 0 ? 0 : 1)) : (s7.value = l4, y8.value = u4 * e14.step + e14.min, d4.value.btnIndex = u4 - (u4 === 0 ? 0 : 1)), C7(), e14.formatTooltip && (w3.value = e14.formatTooltip(w3.value), y8.value = e14.formatTooltip(y8.value));
    }, C7 = () => {
      e14.range && isArray(e14.modelValue) ? (h6.value = Math.min(s7.value, i6.value), p.value = Math.max(s7.value, i6.value) - Math.min(s7.value, i6.value)) : p.value = i6.value;
    }, M2 = (t12) => {
      if (e14.disabled || c5.value)
        return false;
      let a18 = "btn1";
      if (e14.vertical ? S6.value = s(o8.value) + o8.value.offsetHeight - t12.pageY : S6.value = t12.pageX - o2(o8.value), e14.range) {
        let l4 = v6.value.btnIndex > d4.value.btnIndex ? "start" : "end", n3 = v6.value.btnIndex > d4.value.btnIndex ? v6.value.btnIndex : d4.value.btnIndex, u4 = l4 === "start" ? "end" : "start", F2 = l4 === "start" ? d4.value.btnIndex : v6.value.btnIndex;
        d2(S6.value, f2.value[F2], f2.value[n3]) === u4 ? a18 = "btn1" : a18 = "btn2";
      }
      return m9(S6.value, a18), false;
    }, k8 = computed(() => e14.width / (e14.max - e14.min)), x3 = () => {
      f2.value = i2(e14.width, e14.step, e14.max - e14.min), e14.range && isArray(e14.modelValue) ? (m9(k8.value * (e14.modelValue[0] - e14.min), "btn1"), m9(k8.value * (e14.modelValue[1] - e14.min), "btn2"), h6.value = Math.min(s7.value, i6.value), p.value = Math.max(s7.value, i6.value) - Math.min(s7.value, i6.value)) : m9(k8.value * (e14.modelValue - e14.min), "btn1");
    };
    return watch([() => e14.width, () => e14.step, () => e14.max, () => e14.min], () => {
      x3();
    }), onMounted(() => {
      x3(), o8.value && o8.value.addEventListener("click", M2);
    }), onUnmounted(() => {
      o8.value && o8.value.removeEventListener("click", M2);
    }), A4({
      update: x3
    }), (t12, a18) => (openBlock(), createElementBlock("div", {
      class: "h-slider__runway",
      ref_key: "slider_runway",
      ref: o8,
      style: normalizeStyle({ height: `${t12.height}px` })
    }, [
      createBaseVNode("div", {
        class: "h-slider__bar",
        style: normalizeStyle(unref(B5))
      }, null, 4),
      t12.showStops ? (openBlock(), createElementBlock("div", Z, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(f2.value, (l4, n3) => (openBlock(), createElementBlock("div", {
          class: "h-slider__stop_item",
          style: normalizeStyle(t12.vertical ? `bottom: ${l4}px` : `left: ${l4}px`),
          key: n3
        }, null, 4))), 128))
      ])) : createCommentVNode("", true),
      createVNode(z4, mergeProps({
        ref_key: "btn1",
        ref: v6
      }, t12.$attrs, {
        "model-value": i6.value,
        placement: t12.placement,
        tip: w3.value,
        isDraw: c5.value,
        "onUpdate:isDraw": a18[0] || (a18[0] = (l4) => c5.value = l4),
        disabled: t12.disabled,
        showTooltip: t12.showTooltip,
        vertical: t12.vertical,
        yname: "btn1",
        onSetMarkerSite: m9
      }), null, 16, ["model-value", "placement", "tip", "isDraw", "disabled", "showTooltip", "vertical"]),
      t12.range ? (openBlock(), createBlock(z4, mergeProps({
        key: 1,
        ref_key: "btn2",
        ref: d4
      }, t12.$attrs, {
        yname: "btn2",
        isDraw: c5.value,
        "onUpdate:isDraw": a18[1] || (a18[1] = (l4) => c5.value = l4),
        placement: t12.placement,
        showTooltip: t12.showTooltip,
        disabled: t12.disabled,
        "model-value": s7.value,
        vertical: t12.vertical,
        tip: y8.value,
        onSetMarkerSite: m9
      }), null, 16, ["isDraw", "placement", "showTooltip", "disabled", "model-value", "vertical", "tip"])) : createCommentVNode("", true)
    ], 4));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/slider/src/slider.mjs
var B2 = {
  name: "HSlider"
};
var N4 = defineComponent({
  ...B2,
  props: a13,
  setup(m9) {
    const a18 = m9, l4 = ref(a18.modelValue), t12 = ref(null), p = ref(null), o8 = ref(null), s7 = ref(0), d4 = ref(false), n3 = () => {
      nextTick(() => {
        s7.value = a18.vertical ? a18.height : o8.value.offsetWidth;
      });
    };
    return watch(
      () => a18.modelValue,
      () => {
        if (isArray(l4.value) ? l4.value.forEach((e14) => {
          c3(e14, a18.min, a18.max);
        }) : c3(l4.value, a18.min, a18.max), a18.range && l4.value.length !== 2)
          throw new Error("有range字段则必须传入modelValue一个数组参数");
        n3();
      },
      {
        immediate: true
      }
    ), watch([() => a18.range], () => {
      t12.value.update();
    }), watch([() => a18.vertical, () => a18.height], () => {
      n3();
    }), (e14, E3) => (openBlock(), createElementBlock("div", {
      ref_key: "slider",
      ref: p,
      class: normalizeClass(["h-slider", { "is-vertical": e14.vertical }, { "is-disabled": e14.disabled }, { "is-clicking": d4.value }])
    }, [
      createBaseVNode("div", {
        class: "h-slider__runway_wraper",
        ref_key: "runway_wraper",
        ref: o8
      }, [
        createVNode(ie3, {
          ref_key: "runway",
          ref: t12,
          modelValue: l4.value,
          min: e14.min,
          max: e14.max,
          step: e14.step,
          showTooltip: e14.showTooltip,
          showStops: e14.showStops,
          disabled: e14.disabled,
          formatTooltip: e14.formatTooltip,
          range: e14.range,
          vertical: e14.vertical,
          width: s7.value,
          height: e14.height,
          tooltipClass: e14.tooltipClass,
          placement: e14.placement,
          marks: e14.marks,
          runway_wraper: o8.value
        }, null, 8, ["modelValue", "min", "max", "step", "showTooltip", "showStops", "disabled", "formatTooltip", "range", "vertical", "width", "height", "tooltipClass", "placement", "marks", "runway_wraper"])
      ], 512)
    ], 2));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/slider/index.mjs
var m7 = a(N4);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/result/src/result2.mjs
var t11 = {
  title: {
    type: String,
    default: ""
  },
  subTitle: {
    type: String,
    default: ""
  },
  icon: {
    type: String,
    values: ["success", "warning", "info", "error"],
    default: "info"
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/result/src/result.mjs
var v2 = { class: "h-result" };
var b3 = {
  key: 0,
  class: "h-result-title"
};
var k4 = {
  key: 1,
  class: "h-result-sub-title"
};
var y5 = {
  key: 2,
  class: "h-result-extra"
};
var C5 = {
  name: "HResult"
};
var B3 = defineComponent({
  ...C5,
  props: t11,
  setup(u4) {
    const t12 = u4, a18 = computed(() => (console.log(t12), {
      [`h-result--${t12.icon}`]: t12.icon
    }));
    return (e14, N6) => {
      const c5 = resolveComponent("h-icon");
      return openBlock(), createElementBlock("div", v2, [
        createBaseVNode("div", null, [
          renderSlot(e14.$slots, "icon", {}, () => [
            createVNode(c5, {
              name: t12.icon,
              class: normalizeClass(unref(a18)),
              style: { "font-size": "64px" }
            }, null, 8, ["name", "class"])
          ])
        ]),
        e14.title || e14.$slots.title ? (openBlock(), createElementBlock("div", b3, [
          renderSlot(e14.$slots, "title", {}, () => [
            createBaseVNode("p", null, toDisplayString(e14.title), 1)
          ])
        ])) : createCommentVNode("", true),
        e14.subTitle || e14.$slots["sub-title"] ? (openBlock(), createElementBlock("div", k4, [
          renderSlot(e14.$slots, "sub-title", {}, () => [
            createBaseVNode("p", null, toDisplayString(e14.subTitle), 1)
          ])
        ])) : createCommentVNode("", true),
        e14.$slots.extra ? (openBlock(), createElementBlock("div", y5, [
          renderSlot(e14.$slots, "extra")
        ])) : createCommentVNode("", true)
      ]);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/result/index.mjs
var s5 = a(B3);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tree/src/nodeContent.mjs
var d3 = {
  props: {
    data: {
      type: Object,
      required: true
    },
    renderContent: Function,
    parentData: Array
  },
  setup(r13) {
    const { data: a18, renderContent: e14, parentData: n3 } = toRefs(r13), o8 = reactive({
      data: a18.value,
      parentData: n3.value
    });
    return () => [e14.value ? e14.value(h, o8) : h("span", a18.value.label)];
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tree/src/transition.mjs
var h3 = defineComponent({
  name: "HCollapseTransition",
  props: {
    duration: {
      type: Number,
      default: 0.5
    },
    animate: {
      type: String,
      default: "ease"
    }
  },
  setup(t12) {
    const o8 = (e14) => e14.currentStyle ? e14.currentStyle : e14.currentStyle || getComputedStyle(e14), n3 = (e14, a18) => {
      if (!!e14)
        for (const i6 in a18)
          Object.prototype.hasOwnProperty.call(a18, i6) && (e14.style[i6] = a18[i6]);
    }, r13 = {
      transition: `all ${t12.duration}s ${t12.animate}`,
      overflow: "hidden"
    };
    return {
      OnbeforeEnter: (e14) => {
        e14.dataset.paddingTop = o8(e14).paddingTop, e14.dataset.paddingBottom = o8(e14).paddingBottom, n3(e14, Object.assign(r13, { height: 0 }));
      },
      Onenter: (e14) => {
        setTimeout(() => {
          n3(e14, {
            height: `${e14.scrollHeight}px`,
            paddingTop: e14.dataset.paddingTop,
            paddingBottom: e14.dataset.paddingBottom
          });
        }, 0);
      },
      OnafterEnter: (e14) => {
        n3(e14, { height: "", overflow: "" });
      },
      OnbeforeLeave: (e14) => {
        n3(
          e14,
          Object.assign(r13, {
            height: `${e14.scrollHeight}px`,
            overflow: ""
          })
        );
      },
      Onleave: (e14) => {
        setTimeout(() => {
          n3(e14, { height: 0, overflow: "hidden" });
        }, 0);
      },
      OnafterLeave: (e14) => {
        n3(e14, { height: 0, overflow: "hidden" });
      }
    };
  }
});
function v3(t12, o8, n3, r13, f2, s7) {
  return openBlock(), createBlock(Transition, {
    onBeforeEnter: t12.OnbeforeEnter,
    onEnter: t12.Onenter,
    onAfterEnter: t12.OnafterEnter,
    onBeforeLeave: t12.OnbeforeLeave,
    onLeave: t12.Onleave,
    onAfterLeave: t12.OnafterLeave
  }, {
    default: withCtx(() => [
      renderSlot(t12.$slots, "default")
    ]),
    _: 3
  }, 8, ["onBeforeEnter", "onEnter", "onAfterEnter", "onBeforeLeave", "onLeave", "onAfterLeave"]);
}
var T3 = s3(h3, [["render", v3]]);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tree/src/treeNode.mjs
var G2 = createBaseVNode("i", { class: "h-icon-you1" }, null, -1);
var J2 = [
  G2
];
var Q = {
  key: 0,
  class: "h-tree-ul-box"
};
var R4 = {
  name: "HTreeNode"
};
var Z2 = defineComponent({
  ...R4,
  props: {
    items: {
      type: Object,
      default: () => {
      }
    },
    label: String,
    children: String,
    showCheckbox: Boolean,
    index: Number,
    nodeKey: String,
    defaultExpandedKeys: Array,
    defaultCheckedKeys: Array,
    defaultExpandAll: Boolean,
    renderContent: Function,
    parentData: Array
  },
  setup(e14) {
    const d4 = e14, f2 = inject("checkboxChange", () => {
    }), V6 = inject("toggle-change", () => {
    }), A4 = inject("checked-change", () => {
    });
    onMounted(() => {
      y8();
    }), watch(
      () => d4.defaultCheckedKeys,
      (n3) => {
        n3 && y8();
      }
    );
    const O3 = computed(() => d4.items.children && d4.items.children.length), p = computed(() => ({
      "padding-left": d4.index * 15 + "px"
    })), v6 = computed(() => [
      "h-tree-node__expand-icon",
      {
        expanded: d4.items.isOpen
      }
    ]), B5 = (n3) => {
      n3.isOpen = !n3.isOpen, V6(n3);
    }, N6 = (n3) => {
      o8(d4.items, n3), C7(), A4(d4.items);
    }, o8 = (n3, t12) => {
      n3.isChecked = t12, n3.children && n3.children.length && n3.children.forEach((l4) => {
        o8(l4, t12);
      });
    }, C7 = () => {
      nextTick(() => {
        f2 && f2();
      });
    }, y8 = () => {
      let { items: n3, nodeKey: t12, defaultExpandedKeys: l4, defaultCheckedKeys: s7, defaultExpandAll: a18 } = d4;
      const i6 = t12 && n3[t12], D3 = l4.includes(i6) || a18, r13 = s7.includes(i6);
      n3.isOpen = D3, n3.isChecked = r13, nextTick(() => {
        r13 && o8(d4.items, r13), C7();
      });
    };
    return (n3, t12) => {
      const l4 = resolveComponent("h-checkbox"), s7 = resolveComponent("tree-node", true);
      return openBlock(), createElementBlock("ul", {
        class: "h-tree-node",
        style: normalizeStyle(unref(p))
      }, [
        createBaseVNode("div", {
          class: normalizeClass(["h-tree-node__content"]),
          onClick: t12[1] || (t12[1] = withModifiers((a18) => B5(e14.items), ["stop"]))
        }, [
          createBaseVNode("span", {
            class: normalizeClass(unref(v6))
          }, J2, 2),
          e14.showCheckbox ? (openBlock(), createBlock(l4, {
            key: 0,
            style: { "margin-right": "0" },
            modelValue: e14.items.isChecked,
            "onUpdate:modelValue": t12[0] || (t12[0] = (a18) => e14.items.isChecked = a18),
            indeterminate: e14.items.indeterminate,
            disabled: e14.items.disabled,
            onChange: N6
          }, null, 8, ["modelValue", "indeterminate", "disabled"])) : createCommentVNode("", true),
          createVNode(d3, {
            data: e14.items,
            "render-content": e14.renderContent,
            "parent-data": e14.parentData
          }, null, 8, ["data", "render-content", "parent-data"])
        ]),
        createVNode(T3, {
          duration: 0.3,
          animate: "linear"
        }, {
          default: withCtx(() => [
            unref(O3) ? withDirectives((openBlock(), createElementBlock("div", Q, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(e14.items.children, (a18, i6) => (openBlock(), createBlock(s7, {
                key: i6,
                items: a18,
                label: e14.label,
                children: e14.children,
                "show-checkbox": e14.showCheckbox,
                index: e14.index && e14.index + 1,
                "node-key": e14.nodeKey,
                "default-expanded-keys": e14.defaultExpandedKeys,
                "default-checked-keys": e14.defaultCheckedKeys,
                "default-expand-all": e14.defaultExpandAll,
                "render-content": e14.renderContent,
                "parent-data": e14.items.children
              }, null, 8, ["items", "label", "children", "show-checkbox", "index", "node-key", "default-expanded-keys", "default-checked-keys", "default-expand-all", "render-content", "parent-data"]))), 128))
            ], 512)), [
              [vShow, e14.items.isOpen]
            ]) : createCommentVNode("", true)
          ]),
          _: 1
        }, 8, ["duration"])
      ], 4);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tree/src/tree2.mjs
var e8 = {
  data: {
    type: Array,
    default: () => []
  },
  label: {
    type: String,
    default: "label"
  },
  children: {
    type: String,
    default: "children"
  },
  showCheckbox: {
    type: Boolean,
    default: false
  },
  nodeKey: {
    type: String,
    default: ""
  },
  defaultExpandedKeys: {
    type: Array,
    default: () => []
  },
  defaultCheckedKeys: {
    type: Array,
    default: () => []
  },
  defaultExpandAll: {
    type: Boolean,
    default: false
  },
  renderContent: {
    type: Function
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tree/src/tree.mjs
var L2 = { class: "h-tree" };
var M = {
  name: "HTree"
};
var G3 = defineComponent({
  ...M,
  props: e8,
  emits: ["toggle-change", "checked-change"],
  setup(C7, { expose: b5, emit: t12 }) {
    const l4 = C7, a18 = ref([]), i6 = ref(l4.defaultCheckedKeys);
    watch(
      () => l4.data,
      (n3) => {
        console.log(n3);
      },
      { immediate: true }
    ), onMounted(() => {
      k8(r(l4.data));
    });
    const k8 = (n3) => {
      a18.value = n3.map((e14) => (e14.children = e14[l4.children] || [], e14.label = e14[l4.label], e14.id = e14[l4.nodeKey], e14.isOpen = false, e14.isChecked = false, e14.children && e14.children.length && k8(e14.children), {
        id: e14.id,
        label: e14.label,
        children: e14.children,
        isOpen: e14.isOpen,
        isChecked: e14.isChecked,
        disabled: e14.disabled
      }));
    }, y8 = () => {
      f2(a18.value);
    }, v6 = (n3) => {
      t12("toggle-change", n3);
    }, x3 = (n3) => {
      const e14 = r13();
      t12("checked-change", e14, n3);
    }, f2 = (n3) => {
      n3.forEach((e14) => {
        let d4, c5, h6;
        if (e14.children && e14.children.length) {
          f2(e14.children);
          const u4 = e14.children;
          h6 = u4.filter((E3) => E3.isChecked), h6.length === 0 ? (d4 = false, c5 = false) : h6.length === u4.length ? (d4 = true, c5 = false) : (d4 = false, c5 = true), e14.isChecked = d4, e14.indeterminate = c5;
        }
      });
    }, K3 = (n3) => {
      !l4.showCheckbox || (i6.value = n3);
    }, w3 = () => r13().map((n3) => n3.id), r13 = () => {
      const n3 = [], e14 = function(d4) {
        d4.forEach((c5) => {
          c5.isChecked && n3.push({
            id: c5.id,
            label: c5.label,
            children: c5.children ? c5.children : []
          }), c5.children && c5.children.length && e14(c5.children);
        });
      };
      return e14(a18.value), n3;
    };
    return provide("checkboxChange", y8), provide("toggle-change", v6), provide("checked-change", x3), b5({
      setCheckedKeys: K3,
      getCheckedKeys: w3,
      getCheckedNodes: r13
    }), (n3, e14) => (openBlock(), createElementBlock("div", L2, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(a18.value, (d4, c5) => (openBlock(), createBlock(Z2, {
        key: c5,
        items: d4,
        label: n3.label,
        children: n3.children,
        "show-checkbox": n3.showCheckbox,
        index: 0,
        "node-key": n3.nodeKey,
        "default-expanded-keys": n3.defaultExpandedKeys,
        "default-checked-keys": i6.value,
        "default-expand-all": n3.defaultExpandAll,
        "render-content": n3.renderContent,
        "parent-data": a18.value
      }, null, 8, ["items", "label", "children", "show-checkbox", "node-key", "default-expanded-keys", "default-checked-keys", "default-expand-all", "render-content", "parent-data"]))), 128))
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/tree/index.mjs
var a14 = a(G3);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/checkboxGroup/src/checkboxGroup.mjs
var h4 = { class: "h-checkbox-group" };
var i3 = {
  name: "HCheckboxGroup"
};
var k5 = defineComponent({
  ...i3,
  props: {
    modelValue: {
      type: Array,
      default: () => []
    },
    disabled: {
      type: Boolean,
      default: false
    }
  },
  emits: ["update:modelValue", "change"],
  setup(c5, { emit: o8 }) {
    const t12 = c5, l4 = computed(() => t12.modelValue), n3 = computed(() => t12.disabled);
    return provide("checkboxGroup", {
      modelValue: l4,
      disabled: n3,
      changeEvent: (e14) => {
        o8("update:modelValue", e14), nextTick(() => o8("change", e14));
      }
    }), (e14, _4) => (openBlock(), createElementBlock("div", h4, [
      renderSlot(e14.$slots, "default")
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/checkboxGroup/index.mjs
var a15 = a(k5);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/checkbox/src/checkbox2.mjs
var e9 = {
  modelValue: Boolean,
  label: String,
  disabled: {
    type: Boolean,
    default: false
  },
  indeterminate: {
    type: Boolean,
    default: false
  },
  border: {
    type: Boolean,
    default: false
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/checkbox/src/checkbox.mjs
var S4 = createBaseVNode("span", { class: "h-checkbox__inner" }, null, -1);
var T4 = ["disabled", "value"];
var $5 = { class: "h-checkbox__label" };
var j3 = {
  name: "HCheckbox"
};
var H2 = defineComponent({
  ...j3,
  props: e9,
  emits: ["update:modelValue", "change"],
  setup(m9, { emit: r13 }) {
    const a18 = m9, l4 = inject("checkboxGroup", {}), t12 = computed(() => !!(l4 && l4.modelValue)), o8 = computed({
      get() {
        return t12.value ? l4 && l4.modelValue.value : a18.modelValue;
      },
      set(e14) {
        t12.value ? l4 && l4.changeEvent(e14) : r13("update:modelValue", e14);
      }
    }), i6 = computed(() => t12.value ? o8.value.includes(a18.label) : o8.value), d4 = computed(() => t12.value && l4 && l4.disabled.value || a18.disabled), k8 = () => {
      nextTick(() => r13("change", o8.value));
    };
    return (e14, u4) => (openBlock(), createElementBlock("label", {
      class: normalizeClass(["h-checkbox", [{ "is-checked": unref(i6) }, { "is-disabled": unref(d4) }, { "is-bordered": e14.border }]])
    }, [
      createBaseVNode("span", {
        class: normalizeClass(["h-checkbox__input", {
          "is-checked": unref(i6),
          "is-disabled": unref(d4),
          "is-indeterminate": e14.indeterminate
        }])
      }, [
        S4,
        withDirectives(createBaseVNode("input", {
          class: "h-checkbox__original",
          type: "checkbox",
          "onUpdate:modelValue": u4[0] || (u4[0] = (v6) => isRef(o8) ? o8.value = v6 : null),
          disabled: unref(d4),
          value: e14.label,
          onChange: k8
        }, null, 40, T4), [
          [vModelCheckbox, unref(o8)]
        ])
      ], 2),
      createBaseVNode("span", $5, [
        renderSlot(e14.$slots, "default"),
        e14.$slots.default ? createCommentVNode("", true) : (openBlock(), createElementBlock(Fragment, { key: 0 }, [
          createTextVNode(toDisplayString(e14.label), 1)
        ], 64))
      ])
    ], 2));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/checkbox/index.mjs
var a16 = a(H2);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/badge/src/badge2.mjs
var e10 = {
  value: {
    type: [String, Number],
    default: ""
  },
  max: {
    type: Number,
    default: 99
  },
  isDot: Boolean,
  hidden: Boolean,
  type: {
    type: String,
    values: ["primary", "success", "warning", "info", "danger"],
    default: "danger"
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/badge/src/badge.mjs
var y6 = { class: "h-badge" };
var D = ["textContent"];
var b4 = {
  name: "HBadge"
};
var B4 = defineComponent({
  ...b4,
  props: e10,
  setup(r13, { expose: a18 }) {
    const e14 = r13, i6 = computed(() => e14.type && e14.value && !e14.isDot ? {
      [`h-badge-type--${e14.type}`]: e14.type
    } : {
      "is-dot": e14.isDot
    }), t12 = computed(() => e14.isDot ? "" : typeof e14.value == "number" && typeof e14.max == "number" ? e14.max < e14.value ? `${e14.max}+` : `${e14.value}` : `${e14.value}`);
    return a18({
      content: t12
    }), (o8, g) => (openBlock(), createElementBlock("div", y6, [
      renderSlot(o8.$slots, "default"),
      withDirectives(createBaseVNode("sup", {
        class: normalizeClass(unref(i6)),
        textContent: toDisplayString(unref(t12))
      }, null, 10, D), [
        [vShow, !o8.hidden && (unref(t12) || o8.isDot)]
      ])
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/badge/index.mjs
var r9 = a(B4);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/modal/src/modal2.mjs
var e11 = {
  show: {
    type: Boolean,
    default: false
  },
  zIndex: {
    type: Number,
    default: 1
  },
  bgColor: {
    type: String,
    default: "rgba(0,0,0,0.6)"
  },
  title: {
    type: Boolean,
    default: true
  },
  footer: {
    type: Boolean,
    default: true
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/modal/src/modal.mjs
var C6 = {
  class: "modal",
  role: "dialog",
  "aria-labelledby": "modalTitle",
  "aria-describedby": "modalDescription"
};
var y7 = {
  key: 0,
  class: "modal-header",
  id: "modalTitle"
};
var k6 = {
  class: "modal-body",
  id: "modalDescription"
};
var _2 = {
  key: 1,
  class: "modal-footer"
};
var T5 = {
  name: "HModal"
};
var N5 = defineComponent({
  ...T5,
  props: e11,
  emits: ["onClose", "update:show"],
  setup(c5, { emit: n3 }) {
    const i6 = c5, s7 = () => {
      n3("update:show", !i6.show), n3("onClose");
    };
    return (e14, w3) => (openBlock(), createBlock(Transition, { name: "modal-fade" }, {
      default: withCtx(() => [
        i6.show ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: "modal-backdrop",
          style: normalizeStyle({ zIndex: e14.zIndex, backgroundColor: e14.bgColor })
        }, [
          createBaseVNode("div", C6, [
            e14.title ? (openBlock(), createElementBlock("header", y7, [
              renderSlot(e14.$slots, "header", {}, () => [
                createTextVNode(" This is the default title! ")
              ]),
              createBaseVNode("button", {
                type: "button",
                class: "btn-close",
                onClick: s7,
                "aria-label": "Close modal"
              }, " x ")
            ])) : createCommentVNode("", true),
            createBaseVNode("section", k6, [
              !e14.title && !e14.footer ? (openBlock(), createElementBlock("button", {
                key: 0,
                type: "button",
                class: "btn-close",
                onClick: s7,
                "aria-label": "Close modal"
              }, " x ")) : createCommentVNode("", true),
              renderSlot(e14.$slots, "body", {}, () => [
                createTextVNode(" This is the default body! ")
              ])
            ]),
            e14.footer ? (openBlock(), createElementBlock("footer", _2, [
              renderSlot(e14.$slots, "footer", {}, () => [
                createTextVNode(" This is the default footer! ")
              ]),
              createBaseVNode("button", {
                type: "button",
                class: "btn-green",
                onClick: s7,
                "aria-label": "Close modal"
              }, " Close Modal ")
            ])) : createCommentVNode("", true)
          ])
        ], 4)) : createCommentVNode("", true)
      ]),
      _: 3
    }));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/modal/index.mjs
var r10 = a(N5);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/upload/src/upload2.mjs
var o6 = {
  type: String,
  multiple: Boolean,
  accept: String,
  drag: Boolean,
  showFileList: Boolean
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/upload/src/upload.mjs
var H3 = { class: "h-upload" };
var O2 = ["multiple", "accept"];
var P3 = {
  key: 0,
  class: "h-upload-image"
};
var q3 = { class: "preview-content" };
var x2 = { class: "preview-images-list" };
var z5 = { class: "view" };
var G4 = { class: "preview-delete-icon" };
var J3 = ["src"];
var K2 = ["src"];
var Q2 = { class: "tip" };
var W = {
  key: 1,
  class: "h-upload-file"
};
var X = { class: "h-upload-content" };
var Y2 = createBaseVNode("div", { class: "h-upload-text" }, [
  createTextVNode("将文件拖拽到此处或"),
  createBaseVNode("em", null, "点击上传")
], -1);
var Z3 = { class: "h-upload-list-content" };
var ee3 = { class: "h-upload-list" };
var te = { class: "h-upload-list_item" };
var le = { class: "h-upload-list_item-name" };
var se2 = { class: "h-upload-list_item-status-label" };
var oe2 = {
  name: "HUpload"
};
var ce = defineComponent({
  ...oe2,
  props: o6,
  emits: ["getFilesList"],
  setup(I, { emit: D3 }) {
    const n3 = I;
    onMounted(() => {
      !r13.value || (r13.value.addEventListener(
        "drop",
        (e14) => {
          e14.preventDefault(), e14.dataTransfer.files && (w3(e14.dataTransfer.files), u4.value.push(...Array.from(e14.dataTransfer.files)));
        },
        false
      ), r13.value.addEventListener(
        "dragover",
        (e14) => {
          e14.preventDefault();
        },
        false
      ));
    });
    const k8 = ref(), r13 = ref(), u4 = ref([]), d4 = ref([]);
    ref(false);
    const m9 = ref(false), C7 = ref();
    ref("");
    const _4 = () => k8.value.click(), A4 = (e14) => {
      let l4 = e14.target.files;
      !l4 || (w3(l4), u4.value.push(...Array.from(l4)), D3("getFilesList", u4.value));
    }, U2 = (e14) => {
      u4.value.splice(e14, 1);
    }, w3 = (e14) => {
      for (let l4 = 0; l4 < e14.length; l4++)
        d4.value.push({
          url: URL.createObjectURL(e14[l4])
        });
    }, $8 = (e14) => {
      m9.value = true, C7.value = d4.value[e14].url;
    }, V6 = (e14) => {
      d4.value.splice(e14, 1);
    };
    return (e14, l4) => {
      const c5 = resolveComponent("h-icon"), b5 = resolveComponent("h-modal2");
      return openBlock(), createElementBlock("div", H3, [
        withDirectives(createBaseVNode("input", {
          ref_key: "hIpt",
          ref: k8,
          type: "file",
          onChange: A4,
          multiple: n3.multiple,
          accept: n3.accept
        }, null, 40, O2), [
          [vShow, false]
        ]),
        n3.type === "image" && !e14.drag ? (openBlock(), createElementBlock("div", P3, [
          createBaseVNode("div", q3, [
            createBaseVNode("ul", x2, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(d4.value, (h6, p) => (openBlock(), createElementBlock("li", null, [
                createBaseVNode("div", z5, [
                  createBaseVNode("span", G4, [
                    createVNode(c5, {
                      name: "view",
                      onClick: (v6) => $8(p),
                      class: "preview-icon"
                    }, null, 8, ["onClick"]),
                    createVNode(c5, {
                      name: "delete",
                      onClick: (v6) => V6(p),
                      class: "deletecon"
                    }, null, 8, ["onClick"])
                  ]),
                  createBaseVNode("img", {
                    src: h6.url,
                    alt: ""
                  }, null, 8, J3)
                ]),
                createVNode(b5, {
                  show: m9.value,
                  "onUpdate:show": l4[0] || (l4[0] = (v6) => m9.value = v6)
                }, {
                  header: withCtx(() => [
                    createTextVNode(" 查看图片 ")
                  ]),
                  body: withCtx(() => [
                    createBaseVNode("img", {
                      src: C7.value,
                      alt: "无法获取图片信息",
                      class: "modalImg"
                    }, null, 8, K2)
                  ]),
                  _: 1
                }, 8, ["show"])
              ]))), 256)),
              createBaseVNode("div", {
                class: "upload-area",
                onClick: _4
              }, [
                createBaseVNode("div", null, [
                  renderSlot(e14.$slots, "uploadIcon", {}, () => [
                    createVNode(c5, {
                      name: "view",
                      class: "plusIcon"
                    })
                  ])
                ]),
                createBaseVNode("div", Q2, [
                  renderSlot(e14.$slots, "tip", {}, () => [
                    createTextVNode("点击上传")
                  ])
                ])
              ])
            ])
          ])
        ])) : createCommentVNode("", true),
        n3.type === "file" ? (openBlock(), createElementBlock("div", W, [
          n3.drag ? (openBlock(), createElementBlock("div", {
            key: 1,
            class: "h-upload-dragger",
            ref_key: "fileArea",
            ref: r13,
            onClick: _4
          }, [
            createBaseVNode("div", X, [
              createVNode(c5, {
                name: "delete-solid",
                class: "h-upload-icon"
              }),
              Y2
            ])
          ], 512)) : (openBlock(), createElementBlock("div", {
            key: 0,
            onClick: _4
          }, [
            renderSlot(e14.$slots, "default")
          ])),
          createBaseVNode("div", Z3, [
            createBaseVNode("div", ee3, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(u4.value, (h6, p) => (openBlock(), createElementBlock("div", te, [
                createBaseVNode("div", le, toDisplayString(h6.name), 1),
                createBaseVNode("div", se2, [
                  createVNode(c5, {
                    name: "delete-solid",
                    onClick: (v6) => U2(p)
                  }, null, 8, ["onClick"])
                ])
              ]))), 256))
            ])
          ])
        ])) : createCommentVNode("", true)
      ]);
    };
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/upload/index.mjs
var r11 = a(ce);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/empty/src/empty-img.mjs
var c4 = {
  name: "emptyImg"
};
var r12 = {
  width: "184",
  height: "152",
  viewBox: "0 0 184 152",
  xmlns: "http://www.w3.org/2000/svg"
};
var o7 = createStaticVNode('<g fill="none" fill-rule="evenodd"><g transform="translate(24 31.67)"><ellipse fill-opacity=".8" fill="#F5F5F7" cx="67.797" cy="106.89" rx="67.797" ry="12.668"></ellipse><path d="M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z" fill="#AEB8C2"></path><path d="M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z" fill="url(#linearGradient-1)" transform="translate(13.56)"></path><path d="M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z" fill="#F5F5F7"></path><path d="M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z" fill="#DCE0E6"></path></g><g transform="translate(149.65 15.383)" fill="#FFF"><ellipse cx="20.654" cy="3.167" rx="2.849" ry="2.815"></ellipse><path d="M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z"></path></g></g>', 1);
var h5 = [
  o7
];
function i4(s7, n3, p, f2, d4, m9) {
  return openBlock(), createElementBlock("svg", r12, h5);
}
var v4 = s3(c4, [["render", i4]]);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/empty/src/empty2.mjs
var e12 = {
  image: {
    type: String,
    default: ""
  },
  imageSize: Number,
  description: {
    type: String,
    default: ""
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/empty/src/empty.mjs
var _3 = { class: "h-empty" };
var k7 = ["src"];
var S5 = { class: "h-empty-description" };
var $6 = { key: 1 };
var v5 = {
  key: 0,
  class: "h-empty-bottom"
};
var E2 = {
  name: "HEmpty"
};
var D2 = defineComponent({
  ...E2,
  props: e12,
  setup(a18) {
    const s7 = a18, p = computed(() => s7.description || "description"), d4 = computed(() => ({
      width: s7.imageSize ? `${s7.imageSize}px` : ""
    }));
    return (e14, N6) => (openBlock(), createElementBlock("div", _3, [
      createBaseVNode("div", {
        class: "h-empty-image",
        style: normalizeStyle(unref(d4))
      }, [
        e14.image ? (openBlock(), createElementBlock("img", {
          key: 0,
          src: e14.image,
          ondragstart: "return false"
        }, null, 8, k7)) : renderSlot(e14.$slots, "image", { key: 1 }, () => [
          createVNode(v4)
        ])
      ], 4),
      createBaseVNode("div", S5, [
        e14.$slots.description ? renderSlot(e14.$slots, "No data", { key: 0 }) : (openBlock(), createElementBlock("p", $6, toDisplayString(unref(p)), 1))
      ]),
      e14.$slots.default ? (openBlock(), createElementBlock("div", v5, [
        renderSlot(e14.$slots, "default")
      ])) : createCommentVNode("", true)
    ]));
  }
});

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/empty/index.mjs
var a17 = a(D2);

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/src/index.mjs
var $7 = [
  a2,
  r3,
  a3,
  m,
  a5,
  e6,
  $4,
  d,
  l,
  h2,
  m2,
  m3,
  r4,
  m5,
  a10,
  a7,
  l3,
  r7,
  m6,
  s5,
  m7,
  a14,
  a15,
  a16,
  r9,
  r10,
  r11,
  a17
];

// ../../node_modules/.pnpm/@hview-plus+locale@1.0.1_vue@3.2.45/node_modules/@hview-plus/locale/es/lang/en-US.js
var e13 = {
  name: "en-US",
  hp: {
    colorpicker: {
      confirm: "OK",
      clear: "Clear",
      defaultLabel: "color picker",
      description: "current color is {color}. press enter to select a new color."
    },
    datepicker: {
      now: "Now",
      today: "Today",
      cancel: "Cancel",
      clear: "Clear",
      confirm: "OK",
      dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
      monthTablePrompt: "Use the arrow keys and enter to select the month",
      yearTablePrompt: "Use the arrow keys and enter to select the year",
      selectedDate: "Selected date",
      selectDate: "Select date",
      selectTime: "Select time",
      startDate: "Start Date",
      startTime: "Start Time",
      endDate: "End Date",
      endTime: "End Time",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "January",
      month2: "February",
      month3: "March",
      month4: "April",
      month5: "May",
      month6: "June",
      month7: "July",
      month8: "August",
      month9: "September",
      month10: "October",
      month11: "November",
      month12: "December",
      week: "week",
      weeks: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat"
      },
      weeksFull: {
        sun: "Sunday",
        mon: "Monday",
        tue: "Tuesday",
        wed: "Wednesday",
        thu: "Thursday",
        fri: "Friday",
        sat: "Saturday"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    inputNumber: {
      decrease: "decrease number",
      increase: "increase number"
    },
    select: {
      loading: "Loading",
      noMatch: "No matching data",
      noData: "No data",
      placeholder: "Select"
    },
    dropdown: {
      toggleDropdown: "Toggle Dropdown"
    },
    cascader: {
      noMatch: "No matching data",
      loading: "Loading",
      placeholder: "Select",
      noData: "No data"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
    },
    dialog: {
      close: "Close this dialog"
    },
    drawer: {
      close: "Close this dialog"
    },
    messagebox: {
      title: "Message",
      confirm: "OK",
      cancel: "Cancel",
      error: "Illegal input",
      close: "Close this dialog"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Delete",
      preview: "Preview",
      continue: "Continue"
    },
    slider: {
      defaultLabel: "slider between {min} and {max}",
      defaultRangeStartLabel: "pick start value",
      defaultRangeEndLabel: "pick end value"
    },
    table: {
      emptyText: "No Data",
      confirmFilter: "Confirm",
      resetFilter: "Reset",
      clearFilter: "All",
      sumText: "Sum"
    },
    tree: {
      emptyText: "No Data"
    },
    transfer: {
      noMatch: "No matching data",
      noData: "No data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    }
  }
};

// ../../node_modules/.pnpm/@hview-plus+locale@1.0.1_vue@3.2.45/node_modules/@hview-plus/locale/es/lang/zh-CN.js
var u3 = {
  name: "zh-CN",
  hp: {
    colorpicker: {
      confirm: "确定",
      clear: "清空"
    },
    datepicker: {
      now: "此刻",
      today: "今天",
      cancel: "取消",
      clear: "清空",
      confirm: "确定",
      selectDate: "选择日期",
      selectTime: "选择时间",
      startDate: "开始日期",
      startTime: "开始时间",
      endDate: "结束日期",
      endTime: "结束时间",
      prevYear: "前一年",
      nextYear: "后一年",
      prevMonth: "上个月",
      nextMonth: "下个月",
      year: "年",
      month1: "1 月",
      month2: "2 月",
      month3: "3 月",
      month4: "4 月",
      month5: "5 月",
      month6: "6 月",
      month7: "7 月",
      month8: "8 月",
      month9: "9 月",
      month10: "10 月",
      month11: "11 月",
      month12: "12 月",
      weeks: {
        sun: "日",
        mon: "一",
        tue: "二",
        wed: "三",
        thu: "四",
        fri: "五",
        sat: "六"
      },
      months: {
        jan: "一月",
        feb: "二月",
        mar: "三月",
        apr: "四月",
        may: "五月",
        jun: "六月",
        jul: "七月",
        aug: "八月",
        sep: "九月",
        oct: "十月",
        nov: "十一月",
        dec: "十二月"
      }
    },
    select: {
      loading: "加载中",
      noMatch: "无匹配数据",
      noData: "无数据",
      placeholder: "请选择"
    },
    cascader: {
      noMatch: "无匹配数据",
      loading: "加载中",
      placeholder: "请选择",
      noData: "暂无数据"
    },
    pagination: {
      goto: "前往",
      pagesize: "条/页",
      total: "共 {total} 条",
      pageClassifier: "页",
      deprecationWarning: "你使用了一些已被废弃的用法，请参考 h-pagination 的官方文档"
    },
    messagebox: {
      title: "提示",
      confirm: "确定",
      cancel: "取消",
      error: "输入的数据不合法!"
    },
    upload: {
      deleteTip: "按 delete 键可删除",
      delete: "删除",
      preview: "查看图片",
      continue: "继续上传"
    },
    table: {
      emptyText: "暂无数据",
      confirmFilter: "筛选",
      resetFilter: "重置",
      clearFilter: "全部",
      sumText: "合计"
    },
    tree: {
      emptyText: "暂无数据"
    },
    transfer: {
      noMatch: "无匹配数据",
      noData: "无数据",
      titles: ["列表 1", "列表 2"],
      filterPlaceholder: "请输入搜索内容",
      noCheckedFormat: "共 {total} 项",
      hasCheckedFormat: "已选 {checked}/{total} 项"
    },
    image: {
      error: "加载失败"
    },
    pageHeader: {
      title: "返回"
    },
    popconfirm: {
      confirmButtonText: "确定",
      cancelButtonText: "取消"
    }
  }
};

// ../../node_modules/.pnpm/@intlify+shared@9.2.2/node_modules/@intlify/shared/dist/shared.esm-bundler.js
var inBrowser = typeof window !== "undefined";
var mark;
var measure;
if (true) {
  const perf2 = inBrowser && window.performance;
  if (perf2 && perf2.mark && perf2.measure && perf2.clearMarks && perf2.clearMeasures) {
    mark = (tag) => perf2.mark(tag);
    measure = (name, startTag, endTag) => {
      perf2.measure(name, startTag, endTag);
      perf2.clearMarks(startTag);
      perf2.clearMarks(endTag);
    };
  }
}
var RE_ARGS = /\{([0-9a-zA-Z]+)\}/g;
function format(message, ...args) {
  if (args.length === 1 && isObject2(args[0])) {
    args = args[0];
  }
  if (!args || !args.hasOwnProperty) {
    args = {};
  }
  return message.replace(RE_ARGS, (match, identifier) => {
    return args.hasOwnProperty(identifier) ? args[identifier] : "";
  });
}
var hasSymbol = typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol";
var makeSymbol = (name) => hasSymbol ? Symbol(name) : name;
var generateFormatCacheKey = (locale, key, source) => friendlyJSONstringify({ l: locale, k: key, s: source });
var friendlyJSONstringify = (json) => JSON.stringify(json).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029").replace(/\u0027/g, "\\u0027");
var isNumber2 = (val) => typeof val === "number" && isFinite(val);
var isDate = (val) => toTypeString(val) === "[object Date]";
var isRegExp = (val) => toTypeString(val) === "[object RegExp]";
var isEmptyObject = (val) => isPlainObject(val) && Object.keys(val).length === 0;
function warn(msg, err) {
  if (typeof console !== "undefined") {
    console.warn(`[intlify] ` + msg);
    if (err) {
      console.warn(err.stack);
    }
  }
}
var assign = Object.assign;
var _globalThis;
var getGlobalThis = () => {
  return _globalThis || (_globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
};
function escapeHtml(rawText) {
  return rawText.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&apos;");
}
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn2(obj, key) {
  return hasOwnProperty.call(obj, key);
}
var isArray2 = Array.isArray;
var isFunction3 = (val) => typeof val === "function";
var isString3 = (val) => typeof val === "string";
var isBoolean = (val) => typeof val === "boolean";
var isObject2 = (val) => (
  // eslint-disable-line
  val !== null && typeof val === "object"
);
var objectToString = Object.prototype.toString;
var toTypeString = (value) => objectToString.call(value);
var isPlainObject = (val) => toTypeString(val) === "[object Object]";
var toDisplayString2 = (val) => {
  return val == null ? "" : isArray2(val) || isPlainObject(val) && val.toString === objectToString ? JSON.stringify(val, null, 2) : String(val);
};
var RANGE = 2;
function generateCodeFrame(source, start = 0, end = source.length) {
  const lines = source.split(/\r?\n/);
  let count = 0;
  const res = [];
  for (let i6 = 0; i6 < lines.length; i6++) {
    count += lines[i6].length + 1;
    if (count >= start) {
      for (let j4 = i6 - RANGE; j4 <= i6 + RANGE || end > count; j4++) {
        if (j4 < 0 || j4 >= lines.length)
          continue;
        const line = j4 + 1;
        res.push(`${line}${" ".repeat(3 - String(line).length)}|  ${lines[j4]}`);
        const lineLength = lines[j4].length;
        if (j4 === i6) {
          const pad = start - (count - lineLength) + 1;
          const length = Math.max(1, end > count ? lineLength - pad : end - start);
          res.push(`   |  ` + " ".repeat(pad) + "^".repeat(length));
        } else if (j4 > i6) {
          if (end > count) {
            const length = Math.max(Math.min(end - count, lineLength), 1);
            res.push(`   |  ` + "^".repeat(length));
          }
          count += lineLength + 1;
        }
      }
      break;
    }
  }
  return res.join("\n");
}
function createEmitter() {
  const events = /* @__PURE__ */ new Map();
  const emitter = {
    events,
    on(event, handler) {
      const handlers2 = events.get(event);
      const added = handlers2 && handlers2.push(handler);
      if (!added) {
        events.set(event, [handler]);
      }
    },
    off(event, handler) {
      const handlers2 = events.get(event);
      if (handlers2) {
        handlers2.splice(handlers2.indexOf(handler) >>> 0, 1);
      }
    },
    emit(event, payload) {
      (events.get(event) || []).slice().map((handler) => handler(payload));
      (events.get("*") || []).slice().map((handler) => handler(event, payload));
    }
  };
  return emitter;
}

// ../../node_modules/.pnpm/@intlify+message-compiler@9.2.2/node_modules/@intlify/message-compiler/dist/message-compiler.esm-bundler.js
var CompileErrorCodes = {
  // tokenizer error codes
  EXPECTED_TOKEN: 1,
  INVALID_TOKEN_IN_PLACEHOLDER: 2,
  UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,
  UNKNOWN_ESCAPE_SEQUENCE: 4,
  INVALID_UNICODE_ESCAPE_SEQUENCE: 5,
  UNBALANCED_CLOSING_BRACE: 6,
  UNTERMINATED_CLOSING_BRACE: 7,
  EMPTY_PLACEHOLDER: 8,
  NOT_ALLOW_NEST_PLACEHOLDER: 9,
  INVALID_LINKED_FORMAT: 10,
  // parser error codes
  MUST_HAVE_MESSAGES_IN_PLURAL: 11,
  UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,
  UNEXPECTED_EMPTY_LINKED_KEY: 13,
  UNEXPECTED_LEXICAL_ANALYSIS: 14,
  // Special value for higher-order compilers to pick up the last code
  // to avoid collision of error codes. This should always be kept as the last
  // item.
  __EXTEND_POINT__: 15
};
var errorMessages = {
  // tokenizer error messages
  [CompileErrorCodes.EXPECTED_TOKEN]: `Expected token: '{0}'`,
  [CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER]: `Invalid token in placeholder: '{0}'`,
  [CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: `Unterminated single quote in placeholder`,
  [CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE]: `Unknown escape sequence: \\{0}`,
  [CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE]: `Invalid unicode escape sequence: {0}`,
  [CompileErrorCodes.UNBALANCED_CLOSING_BRACE]: `Unbalanced closing brace`,
  [CompileErrorCodes.UNTERMINATED_CLOSING_BRACE]: `Unterminated closing brace`,
  [CompileErrorCodes.EMPTY_PLACEHOLDER]: `Empty placeholder`,
  [CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER]: `Not allowed nest placeholder`,
  [CompileErrorCodes.INVALID_LINKED_FORMAT]: `Invalid linked format`,
  // parser error messages
  [CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL]: `Plural must have messages`,
  [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER]: `Unexpected empty linked modifier`,
  [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY]: `Unexpected empty linked key`,
  [CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS]: `Unexpected lexical analysis in token: '{0}'`
};
function createCompileError(code3, loc, options = {}) {
  const { domain, messages, args } = options;
  const msg = true ? format((messages || errorMessages)[code3] || "", ...args || []) : code3;
  const error = new SyntaxError(String(msg));
  error.code = code3;
  if (loc) {
    error.location = loc;
  }
  error.domain = domain;
  return error;
}
function defaultOnError(error) {
  throw error;
}
function createPosition(line, column, offset) {
  return { line, column, offset };
}
function createLocation(start, end, source) {
  const loc = { start, end };
  if (source != null) {
    loc.source = source;
  }
  return loc;
}
var CHAR_SP = " ";
var CHAR_CR = "\r";
var CHAR_LF = "\n";
var CHAR_LS = String.fromCharCode(8232);
var CHAR_PS = String.fromCharCode(8233);
function createScanner(str) {
  const _buf = str;
  let _index = 0;
  let _line = 1;
  let _column = 1;
  let _peekOffset = 0;
  const isCRLF = (index2) => _buf[index2] === CHAR_CR && _buf[index2 + 1] === CHAR_LF;
  const isLF = (index2) => _buf[index2] === CHAR_LF;
  const isPS = (index2) => _buf[index2] === CHAR_PS;
  const isLS = (index2) => _buf[index2] === CHAR_LS;
  const isLineEnd = (index2) => isCRLF(index2) || isLF(index2) || isPS(index2) || isLS(index2);
  const index = () => _index;
  const line = () => _line;
  const column = () => _column;
  const peekOffset = () => _peekOffset;
  const charAt = (offset) => isCRLF(offset) || isPS(offset) || isLS(offset) ? CHAR_LF : _buf[offset];
  const currentChar = () => charAt(_index);
  const currentPeek = () => charAt(_index + _peekOffset);
  function next() {
    _peekOffset = 0;
    if (isLineEnd(_index)) {
      _line++;
      _column = 0;
    }
    if (isCRLF(_index)) {
      _index++;
    }
    _index++;
    _column++;
    return _buf[_index];
  }
  function peek() {
    if (isCRLF(_index + _peekOffset)) {
      _peekOffset++;
    }
    _peekOffset++;
    return _buf[_index + _peekOffset];
  }
  function reset() {
    _index = 0;
    _line = 1;
    _column = 1;
    _peekOffset = 0;
  }
  function resetPeek(offset = 0) {
    _peekOffset = offset;
  }
  function skipToPeek() {
    const target = _index + _peekOffset;
    while (target !== _index) {
      next();
    }
    _peekOffset = 0;
  }
  return {
    index,
    line,
    column,
    peekOffset,
    charAt,
    currentChar,
    currentPeek,
    next,
    peek,
    reset,
    resetPeek,
    skipToPeek
  };
}
var EOF = void 0;
var LITERAL_DELIMITER = "'";
var ERROR_DOMAIN$1 = "tokenizer";
function createTokenizer(source, options = {}) {
  const location = options.location !== false;
  const _scnr = createScanner(source);
  const currentOffset = () => _scnr.index();
  const currentPosition = () => createPosition(_scnr.line(), _scnr.column(), _scnr.index());
  const _initLoc = currentPosition();
  const _initOffset = currentOffset();
  const _context = {
    currentType: 14,
    offset: _initOffset,
    startLoc: _initLoc,
    endLoc: _initLoc,
    lastType: 14,
    lastOffset: _initOffset,
    lastStartLoc: _initLoc,
    lastEndLoc: _initLoc,
    braceNest: 0,
    inLinked: false,
    text: ""
  };
  const context = () => _context;
  const { onError } = options;
  function emitError(code3, pos, offset, ...args) {
    const ctx = context();
    pos.column += offset;
    pos.offset += offset;
    if (onError) {
      const loc = createLocation(ctx.startLoc, pos);
      const err = createCompileError(code3, loc, {
        domain: ERROR_DOMAIN$1,
        args
      });
      onError(err);
    }
  }
  function getToken(context2, type, value) {
    context2.endLoc = currentPosition();
    context2.currentType = type;
    const token = { type };
    if (location) {
      token.loc = createLocation(context2.startLoc, context2.endLoc);
    }
    if (value != null) {
      token.value = value;
    }
    return token;
  }
  const getEndToken = (context2) => getToken(
    context2,
    14
    /* EOF */
  );
  function eat(scnr, ch) {
    if (scnr.currentChar() === ch) {
      scnr.next();
      return ch;
    } else {
      emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);
      return "";
    }
  }
  function peekSpaces(scnr) {
    let buf = "";
    while (scnr.currentPeek() === CHAR_SP || scnr.currentPeek() === CHAR_LF) {
      buf += scnr.currentPeek();
      scnr.peek();
    }
    return buf;
  }
  function skipSpaces(scnr) {
    const buf = peekSpaces(scnr);
    scnr.skipToPeek();
    return buf;
  }
  function isIdentifierStart(ch) {
    if (ch === EOF) {
      return false;
    }
    const cc = ch.charCodeAt(0);
    return cc >= 97 && cc <= 122 || // a-z
    cc >= 65 && cc <= 90 || // A-Z
    cc === 95;
  }
  function isNumberStart(ch) {
    if (ch === EOF) {
      return false;
    }
    const cc = ch.charCodeAt(0);
    return cc >= 48 && cc <= 57;
  }
  function isNamedIdentifierStart(scnr, context2) {
    const { currentType } = context2;
    if (currentType !== 2) {
      return false;
    }
    peekSpaces(scnr);
    const ret = isIdentifierStart(scnr.currentPeek());
    scnr.resetPeek();
    return ret;
  }
  function isListIdentifierStart(scnr, context2) {
    const { currentType } = context2;
    if (currentType !== 2) {
      return false;
    }
    peekSpaces(scnr);
    const ch = scnr.currentPeek() === "-" ? scnr.peek() : scnr.currentPeek();
    const ret = isNumberStart(ch);
    scnr.resetPeek();
    return ret;
  }
  function isLiteralStart(scnr, context2) {
    const { currentType } = context2;
    if (currentType !== 2) {
      return false;
    }
    peekSpaces(scnr);
    const ret = scnr.currentPeek() === LITERAL_DELIMITER;
    scnr.resetPeek();
    return ret;
  }
  function isLinkedDotStart(scnr, context2) {
    const { currentType } = context2;
    if (currentType !== 8) {
      return false;
    }
    peekSpaces(scnr);
    const ret = scnr.currentPeek() === ".";
    scnr.resetPeek();
    return ret;
  }
  function isLinkedModifierStart(scnr, context2) {
    const { currentType } = context2;
    if (currentType !== 9) {
      return false;
    }
    peekSpaces(scnr);
    const ret = isIdentifierStart(scnr.currentPeek());
    scnr.resetPeek();
    return ret;
  }
  function isLinkedDelimiterStart(scnr, context2) {
    const { currentType } = context2;
    if (!(currentType === 8 || currentType === 12)) {
      return false;
    }
    peekSpaces(scnr);
    const ret = scnr.currentPeek() === ":";
    scnr.resetPeek();
    return ret;
  }
  function isLinkedReferStart(scnr, context2) {
    const { currentType } = context2;
    if (currentType !== 10) {
      return false;
    }
    const fn = () => {
      const ch = scnr.currentPeek();
      if (ch === "{") {
        return isIdentifierStart(scnr.peek());
      } else if (ch === "@" || ch === "%" || ch === "|" || ch === ":" || ch === "." || ch === CHAR_SP || !ch) {
        return false;
      } else if (ch === CHAR_LF) {
        scnr.peek();
        return fn();
      } else {
        return isIdentifierStart(ch);
      }
    };
    const ret = fn();
    scnr.resetPeek();
    return ret;
  }
  function isPluralStart(scnr) {
    peekSpaces(scnr);
    const ret = scnr.currentPeek() === "|";
    scnr.resetPeek();
    return ret;
  }
  function detectModuloStart(scnr) {
    const spaces = peekSpaces(scnr);
    const ret = scnr.currentPeek() === "%" && scnr.peek() === "{";
    scnr.resetPeek();
    return {
      isModulo: ret,
      hasSpace: spaces.length > 0
    };
  }
  function isTextStart(scnr, reset = true) {
    const fn = (hasSpace = false, prev = "", detectModulo = false) => {
      const ch = scnr.currentPeek();
      if (ch === "{") {
        return prev === "%" ? false : hasSpace;
      } else if (ch === "@" || !ch) {
        return prev === "%" ? true : hasSpace;
      } else if (ch === "%") {
        scnr.peek();
        return fn(hasSpace, "%", true);
      } else if (ch === "|") {
        return prev === "%" || detectModulo ? true : !(prev === CHAR_SP || prev === CHAR_LF);
      } else if (ch === CHAR_SP) {
        scnr.peek();
        return fn(true, CHAR_SP, detectModulo);
      } else if (ch === CHAR_LF) {
        scnr.peek();
        return fn(true, CHAR_LF, detectModulo);
      } else {
        return true;
      }
    };
    const ret = fn();
    reset && scnr.resetPeek();
    return ret;
  }
  function takeChar(scnr, fn) {
    const ch = scnr.currentChar();
    if (ch === EOF) {
      return EOF;
    }
    if (fn(ch)) {
      scnr.next();
      return ch;
    }
    return null;
  }
  function takeIdentifierChar(scnr) {
    const closure = (ch) => {
      const cc = ch.charCodeAt(0);
      return cc >= 97 && cc <= 122 || // a-z
      cc >= 65 && cc <= 90 || // A-Z
      cc >= 48 && cc <= 57 || // 0-9
      cc === 95 || // _
      cc === 36;
    };
    return takeChar(scnr, closure);
  }
  function takeDigit(scnr) {
    const closure = (ch) => {
      const cc = ch.charCodeAt(0);
      return cc >= 48 && cc <= 57;
    };
    return takeChar(scnr, closure);
  }
  function takeHexDigit(scnr) {
    const closure = (ch) => {
      const cc = ch.charCodeAt(0);
      return cc >= 48 && cc <= 57 || // 0-9
      cc >= 65 && cc <= 70 || // A-F
      cc >= 97 && cc <= 102;
    };
    return takeChar(scnr, closure);
  }
  function getDigits(scnr) {
    let ch = "";
    let num = "";
    while (ch = takeDigit(scnr)) {
      num += ch;
    }
    return num;
  }
  function readModulo(scnr) {
    skipSpaces(scnr);
    const ch = scnr.currentChar();
    if (ch !== "%") {
      emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);
    }
    scnr.next();
    return "%";
  }
  function readText(scnr) {
    let buf = "";
    while (true) {
      const ch = scnr.currentChar();
      if (ch === "{" || ch === "}" || ch === "@" || ch === "|" || !ch) {
        break;
      } else if (ch === "%") {
        if (isTextStart(scnr)) {
          buf += ch;
          scnr.next();
        } else {
          break;
        }
      } else if (ch === CHAR_SP || ch === CHAR_LF) {
        if (isTextStart(scnr)) {
          buf += ch;
          scnr.next();
        } else if (isPluralStart(scnr)) {
          break;
        } else {
          buf += ch;
          scnr.next();
        }
      } else {
        buf += ch;
        scnr.next();
      }
    }
    return buf;
  }
  function readNamedIdentifier(scnr) {
    skipSpaces(scnr);
    let ch = "";
    let name = "";
    while (ch = takeIdentifierChar(scnr)) {
      name += ch;
    }
    if (scnr.currentChar() === EOF) {
      emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);
    }
    return name;
  }
  function readListIdentifier(scnr) {
    skipSpaces(scnr);
    let value = "";
    if (scnr.currentChar() === "-") {
      scnr.next();
      value += `-${getDigits(scnr)}`;
    } else {
      value += getDigits(scnr);
    }
    if (scnr.currentChar() === EOF) {
      emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);
    }
    return value;
  }
  function readLiteral(scnr) {
    skipSpaces(scnr);
    eat(scnr, `'`);
    let ch = "";
    let literal = "";
    const fn = (x3) => x3 !== LITERAL_DELIMITER && x3 !== CHAR_LF;
    while (ch = takeChar(scnr, fn)) {
      if (ch === "\\") {
        literal += readEscapeSequence(scnr);
      } else {
        literal += ch;
      }
    }
    const current = scnr.currentChar();
    if (current === CHAR_LF || current === EOF) {
      emitError(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, currentPosition(), 0);
      if (current === CHAR_LF) {
        scnr.next();
        eat(scnr, `'`);
      }
      return literal;
    }
    eat(scnr, `'`);
    return literal;
  }
  function readEscapeSequence(scnr) {
    const ch = scnr.currentChar();
    switch (ch) {
      case "\\":
      case `'`:
        scnr.next();
        return `\\${ch}`;
      case "u":
        return readUnicodeEscapeSequence(scnr, ch, 4);
      case "U":
        return readUnicodeEscapeSequence(scnr, ch, 6);
      default:
        emitError(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, currentPosition(), 0, ch);
        return "";
    }
  }
  function readUnicodeEscapeSequence(scnr, unicode, digits) {
    eat(scnr, unicode);
    let sequence = "";
    for (let i6 = 0; i6 < digits; i6++) {
      const ch = takeHexDigit(scnr);
      if (!ch) {
        emitError(CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE, currentPosition(), 0, `\\${unicode}${sequence}${scnr.currentChar()}`);
        break;
      }
      sequence += ch;
    }
    return `\\${unicode}${sequence}`;
  }
  function readInvalidIdentifier(scnr) {
    skipSpaces(scnr);
    let ch = "";
    let identifiers = "";
    const closure = (ch2) => ch2 !== "{" && ch2 !== "}" && ch2 !== CHAR_SP && ch2 !== CHAR_LF;
    while (ch = takeChar(scnr, closure)) {
      identifiers += ch;
    }
    return identifiers;
  }
  function readLinkedModifier(scnr) {
    let ch = "";
    let name = "";
    while (ch = takeIdentifierChar(scnr)) {
      name += ch;
    }
    return name;
  }
  function readLinkedRefer(scnr) {
    const fn = (detect = false, buf) => {
      const ch = scnr.currentChar();
      if (ch === "{" || ch === "%" || ch === "@" || ch === "|" || !ch) {
        return buf;
      } else if (ch === CHAR_SP) {
        return buf;
      } else if (ch === CHAR_LF) {
        buf += ch;
        scnr.next();
        return fn(detect, buf);
      } else {
        buf += ch;
        scnr.next();
        return fn(true, buf);
      }
    };
    return fn(false, "");
  }
  function readPlural(scnr) {
    skipSpaces(scnr);
    const plural = eat(
      scnr,
      "|"
      /* Pipe */
    );
    skipSpaces(scnr);
    return plural;
  }
  function readTokenInPlaceholder(scnr, context2) {
    let token = null;
    const ch = scnr.currentChar();
    switch (ch) {
      case "{":
        if (context2.braceNest >= 1) {
          emitError(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, currentPosition(), 0);
        }
        scnr.next();
        token = getToken(
          context2,
          2,
          "{"
          /* BraceLeft */
        );
        skipSpaces(scnr);
        context2.braceNest++;
        return token;
      case "}":
        if (context2.braceNest > 0 && context2.currentType === 2) {
          emitError(CompileErrorCodes.EMPTY_PLACEHOLDER, currentPosition(), 0);
        }
        scnr.next();
        token = getToken(
          context2,
          3,
          "}"
          /* BraceRight */
        );
        context2.braceNest--;
        context2.braceNest > 0 && skipSpaces(scnr);
        if (context2.inLinked && context2.braceNest === 0) {
          context2.inLinked = false;
        }
        return token;
      case "@":
        if (context2.braceNest > 0) {
          emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);
        }
        token = readTokenInLinked(scnr, context2) || getEndToken(context2);
        context2.braceNest = 0;
        return token;
      default:
        let validNamedIdentifier = true;
        let validListIdentifier = true;
        let validLiteral = true;
        if (isPluralStart(scnr)) {
          if (context2.braceNest > 0) {
            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);
          }
          token = getToken(context2, 1, readPlural(scnr));
          context2.braceNest = 0;
          context2.inLinked = false;
          return token;
        }
        if (context2.braceNest > 0 && (context2.currentType === 5 || context2.currentType === 6 || context2.currentType === 7)) {
          emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);
          context2.braceNest = 0;
          return readToken(scnr, context2);
        }
        if (validNamedIdentifier = isNamedIdentifierStart(scnr, context2)) {
          token = getToken(context2, 5, readNamedIdentifier(scnr));
          skipSpaces(scnr);
          return token;
        }
        if (validListIdentifier = isListIdentifierStart(scnr, context2)) {
          token = getToken(context2, 6, readListIdentifier(scnr));
          skipSpaces(scnr);
          return token;
        }
        if (validLiteral = isLiteralStart(scnr, context2)) {
          token = getToken(context2, 7, readLiteral(scnr));
          skipSpaces(scnr);
          return token;
        }
        if (!validNamedIdentifier && !validListIdentifier && !validLiteral) {
          token = getToken(context2, 13, readInvalidIdentifier(scnr));
          emitError(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, currentPosition(), 0, token.value);
          skipSpaces(scnr);
          return token;
        }
        break;
    }
    return token;
  }
  function readTokenInLinked(scnr, context2) {
    const { currentType } = context2;
    let token = null;
    const ch = scnr.currentChar();
    if ((currentType === 8 || currentType === 9 || currentType === 12 || currentType === 10) && (ch === CHAR_LF || ch === CHAR_SP)) {
      emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);
    }
    switch (ch) {
      case "@":
        scnr.next();
        token = getToken(
          context2,
          8,
          "@"
          /* LinkedAlias */
        );
        context2.inLinked = true;
        return token;
      case ".":
        skipSpaces(scnr);
        scnr.next();
        return getToken(
          context2,
          9,
          "."
          /* LinkedDot */
        );
      case ":":
        skipSpaces(scnr);
        scnr.next();
        return getToken(
          context2,
          10,
          ":"
          /* LinkedDelimiter */
        );
      default:
        if (isPluralStart(scnr)) {
          token = getToken(context2, 1, readPlural(scnr));
          context2.braceNest = 0;
          context2.inLinked = false;
          return token;
        }
        if (isLinkedDotStart(scnr, context2) || isLinkedDelimiterStart(scnr, context2)) {
          skipSpaces(scnr);
          return readTokenInLinked(scnr, context2);
        }
        if (isLinkedModifierStart(scnr, context2)) {
          skipSpaces(scnr);
          return getToken(context2, 12, readLinkedModifier(scnr));
        }
        if (isLinkedReferStart(scnr, context2)) {
          skipSpaces(scnr);
          if (ch === "{") {
            return readTokenInPlaceholder(scnr, context2) || token;
          } else {
            return getToken(context2, 11, readLinkedRefer(scnr));
          }
        }
        if (currentType === 8) {
          emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);
        }
        context2.braceNest = 0;
        context2.inLinked = false;
        return readToken(scnr, context2);
    }
  }
  function readToken(scnr, context2) {
    let token = {
      type: 14
      /* EOF */
    };
    if (context2.braceNest > 0) {
      return readTokenInPlaceholder(scnr, context2) || getEndToken(context2);
    }
    if (context2.inLinked) {
      return readTokenInLinked(scnr, context2) || getEndToken(context2);
    }
    const ch = scnr.currentChar();
    switch (ch) {
      case "{":
        return readTokenInPlaceholder(scnr, context2) || getEndToken(context2);
      case "}":
        emitError(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, currentPosition(), 0);
        scnr.next();
        return getToken(
          context2,
          3,
          "}"
          /* BraceRight */
        );
      case "@":
        return readTokenInLinked(scnr, context2) || getEndToken(context2);
      default:
        if (isPluralStart(scnr)) {
          token = getToken(context2, 1, readPlural(scnr));
          context2.braceNest = 0;
          context2.inLinked = false;
          return token;
        }
        const { isModulo, hasSpace } = detectModuloStart(scnr);
        if (isModulo) {
          return hasSpace ? getToken(context2, 0, readText(scnr)) : getToken(context2, 4, readModulo(scnr));
        }
        if (isTextStart(scnr)) {
          return getToken(context2, 0, readText(scnr));
        }
        break;
    }
    return token;
  }
  function nextToken() {
    const { currentType, offset, startLoc, endLoc } = _context;
    _context.lastType = currentType;
    _context.lastOffset = offset;
    _context.lastStartLoc = startLoc;
    _context.lastEndLoc = endLoc;
    _context.offset = currentOffset();
    _context.startLoc = currentPosition();
    if (_scnr.currentChar() === EOF) {
      return getToken(
        _context,
        14
        /* EOF */
      );
    }
    return readToken(_scnr, _context);
  }
  return {
    nextToken,
    currentOffset,
    currentPosition,
    context
  };
}
var ERROR_DOMAIN = "parser";
var KNOWN_ESCAPES = /(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g;
function fromEscapeSequence(match, codePoint4, codePoint6) {
  switch (match) {
    case `\\\\`:
      return `\\`;
    case `\\'`:
      return `'`;
    default: {
      const codePoint = parseInt(codePoint4 || codePoint6, 16);
      if (codePoint <= 55295 || codePoint >= 57344) {
        return String.fromCodePoint(codePoint);
      }
      return "�";
    }
  }
}
function createParser(options = {}) {
  const location = options.location !== false;
  const { onError } = options;
  function emitError(tokenzer, code3, start, offset, ...args) {
    const end = tokenzer.currentPosition();
    end.offset += offset;
    end.column += offset;
    if (onError) {
      const loc = createLocation(start, end);
      const err = createCompileError(code3, loc, {
        domain: ERROR_DOMAIN,
        args
      });
      onError(err);
    }
  }
  function startNode(type, offset, loc) {
    const node = {
      type,
      start: offset,
      end: offset
    };
    if (location) {
      node.loc = { start: loc, end: loc };
    }
    return node;
  }
  function endNode(node, offset, pos, type) {
    node.end = offset;
    if (type) {
      node.type = type;
    }
    if (location && node.loc) {
      node.loc.end = pos;
    }
  }
  function parseText(tokenizer, value) {
    const context = tokenizer.context();
    const node = startNode(3, context.offset, context.startLoc);
    node.value = value;
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  function parseList(tokenizer, index) {
    const context = tokenizer.context();
    const { lastOffset: offset, lastStartLoc: loc } = context;
    const node = startNode(5, offset, loc);
    node.index = parseInt(index, 10);
    tokenizer.nextToken();
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  function parseNamed(tokenizer, key) {
    const context = tokenizer.context();
    const { lastOffset: offset, lastStartLoc: loc } = context;
    const node = startNode(4, offset, loc);
    node.key = key;
    tokenizer.nextToken();
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  function parseLiteral(tokenizer, value) {
    const context = tokenizer.context();
    const { lastOffset: offset, lastStartLoc: loc } = context;
    const node = startNode(9, offset, loc);
    node.value = value.replace(KNOWN_ESCAPES, fromEscapeSequence);
    tokenizer.nextToken();
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  function parseLinkedModifier(tokenizer) {
    const token = tokenizer.nextToken();
    const context = tokenizer.context();
    const { lastOffset: offset, lastStartLoc: loc } = context;
    const node = startNode(8, offset, loc);
    if (token.type !== 12) {
      emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER, context.lastStartLoc, 0);
      node.value = "";
      endNode(node, offset, loc);
      return {
        nextConsumeToken: token,
        node
      };
    }
    if (token.value == null) {
      emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
    }
    node.value = token.value || "";
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return {
      node
    };
  }
  function parseLinkedKey(tokenizer, value) {
    const context = tokenizer.context();
    const node = startNode(7, context.offset, context.startLoc);
    node.value = value;
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  function parseLinked(tokenizer) {
    const context = tokenizer.context();
    const linkedNode = startNode(6, context.offset, context.startLoc);
    let token = tokenizer.nextToken();
    if (token.type === 9) {
      const parsed = parseLinkedModifier(tokenizer);
      linkedNode.modifier = parsed.node;
      token = parsed.nextConsumeToken || tokenizer.nextToken();
    }
    if (token.type !== 10) {
      emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
    }
    token = tokenizer.nextToken();
    if (token.type === 2) {
      token = tokenizer.nextToken();
    }
    switch (token.type) {
      case 11:
        if (token.value == null) {
          emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
        }
        linkedNode.key = parseLinkedKey(tokenizer, token.value || "");
        break;
      case 5:
        if (token.value == null) {
          emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
        }
        linkedNode.key = parseNamed(tokenizer, token.value || "");
        break;
      case 6:
        if (token.value == null) {
          emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
        }
        linkedNode.key = parseList(tokenizer, token.value || "");
        break;
      case 7:
        if (token.value == null) {
          emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
        }
        linkedNode.key = parseLiteral(tokenizer, token.value || "");
        break;
      default:
        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, context.lastStartLoc, 0);
        const nextContext = tokenizer.context();
        const emptyLinkedKeyNode = startNode(7, nextContext.offset, nextContext.startLoc);
        emptyLinkedKeyNode.value = "";
        endNode(emptyLinkedKeyNode, nextContext.offset, nextContext.startLoc);
        linkedNode.key = emptyLinkedKeyNode;
        endNode(linkedNode, nextContext.offset, nextContext.startLoc);
        return {
          nextConsumeToken: token,
          node: linkedNode
        };
    }
    endNode(linkedNode, tokenizer.currentOffset(), tokenizer.currentPosition());
    return {
      node: linkedNode
    };
  }
  function parseMessage(tokenizer) {
    const context = tokenizer.context();
    const startOffset = context.currentType === 1 ? tokenizer.currentOffset() : context.offset;
    const startLoc = context.currentType === 1 ? context.endLoc : context.startLoc;
    const node = startNode(2, startOffset, startLoc);
    node.items = [];
    let nextToken = null;
    do {
      const token = nextToken || tokenizer.nextToken();
      nextToken = null;
      switch (token.type) {
        case 0:
          if (token.value == null) {
            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
          }
          node.items.push(parseText(tokenizer, token.value || ""));
          break;
        case 6:
          if (token.value == null) {
            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
          }
          node.items.push(parseList(tokenizer, token.value || ""));
          break;
        case 5:
          if (token.value == null) {
            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
          }
          node.items.push(parseNamed(tokenizer, token.value || ""));
          break;
        case 7:
          if (token.value == null) {
            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));
          }
          node.items.push(parseLiteral(tokenizer, token.value || ""));
          break;
        case 8:
          const parsed = parseLinked(tokenizer);
          node.items.push(parsed.node);
          nextToken = parsed.nextConsumeToken || null;
          break;
      }
    } while (context.currentType !== 14 && context.currentType !== 1);
    const endOffset = context.currentType === 1 ? context.lastOffset : tokenizer.currentOffset();
    const endLoc = context.currentType === 1 ? context.lastEndLoc : tokenizer.currentPosition();
    endNode(node, endOffset, endLoc);
    return node;
  }
  function parsePlural(tokenizer, offset, loc, msgNode) {
    const context = tokenizer.context();
    let hasEmptyMessage = msgNode.items.length === 0;
    const node = startNode(1, offset, loc);
    node.cases = [];
    node.cases.push(msgNode);
    do {
      const msg = parseMessage(tokenizer);
      if (!hasEmptyMessage) {
        hasEmptyMessage = msg.items.length === 0;
      }
      node.cases.push(msg);
    } while (context.currentType !== 14);
    if (hasEmptyMessage) {
      emitError(tokenizer, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, loc, 0);
    }
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  function parseResource(tokenizer) {
    const context = tokenizer.context();
    const { offset, startLoc } = context;
    const msgNode = parseMessage(tokenizer);
    if (context.currentType === 14) {
      return msgNode;
    } else {
      return parsePlural(tokenizer, offset, startLoc, msgNode);
    }
  }
  function parse2(source) {
    const tokenizer = createTokenizer(source, assign({}, options));
    const context = tokenizer.context();
    const node = startNode(0, context.offset, context.startLoc);
    if (location && node.loc) {
      node.loc.source = source;
    }
    node.body = parseResource(tokenizer);
    if (context.currentType !== 14) {
      emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, source[context.offset] || "");
    }
    endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());
    return node;
  }
  return { parse: parse2 };
}
function getTokenCaption(token) {
  if (token.type === 14) {
    return "EOF";
  }
  const name = (token.value || "").replace(/\r?\n/gu, "\\n");
  return name.length > 10 ? name.slice(0, 9) + "…" : name;
}
function createTransformer(ast, options = {}) {
  const _context = {
    ast,
    helpers: /* @__PURE__ */ new Set()
  };
  const context = () => _context;
  const helper = (name) => {
    _context.helpers.add(name);
    return name;
  };
  return { context, helper };
}
function traverseNodes(nodes, transformer) {
  for (let i6 = 0; i6 < nodes.length; i6++) {
    traverseNode(nodes[i6], transformer);
  }
}
function traverseNode(node, transformer) {
  switch (node.type) {
    case 1:
      traverseNodes(node.cases, transformer);
      transformer.helper(
        "plural"
        /* PLURAL */
      );
      break;
    case 2:
      traverseNodes(node.items, transformer);
      break;
    case 6:
      const linked = node;
      traverseNode(linked.key, transformer);
      transformer.helper(
        "linked"
        /* LINKED */
      );
      transformer.helper(
        "type"
        /* TYPE */
      );
      break;
    case 5:
      transformer.helper(
        "interpolate"
        /* INTERPOLATE */
      );
      transformer.helper(
        "list"
        /* LIST */
      );
      break;
    case 4:
      transformer.helper(
        "interpolate"
        /* INTERPOLATE */
      );
      transformer.helper(
        "named"
        /* NAMED */
      );
      break;
  }
}
function transform(ast, options = {}) {
  const transformer = createTransformer(ast);
  transformer.helper(
    "normalize"
    /* NORMALIZE */
  );
  ast.body && traverseNode(ast.body, transformer);
  const context = transformer.context();
  ast.helpers = Array.from(context.helpers);
}
function createCodeGenerator(ast, options) {
  const { sourceMap, filename, breakLineCode, needIndent: _needIndent } = options;
  const _context = {
    source: ast.loc.source,
    filename,
    code: "",
    column: 1,
    line: 1,
    offset: 0,
    map: void 0,
    breakLineCode,
    needIndent: _needIndent,
    indentLevel: 0
  };
  const context = () => _context;
  function push(code3, node) {
    _context.code += code3;
  }
  function _newline(n3, withBreakLine = true) {
    const _breakLineCode = withBreakLine ? breakLineCode : "";
    push(_needIndent ? _breakLineCode + `  `.repeat(n3) : _breakLineCode);
  }
  function indent(withNewLine = true) {
    const level = ++_context.indentLevel;
    withNewLine && _newline(level);
  }
  function deindent(withNewLine = true) {
    const level = --_context.indentLevel;
    withNewLine && _newline(level);
  }
  function newline() {
    _newline(_context.indentLevel);
  }
  const helper = (key) => `_${key}`;
  const needIndent = () => _context.needIndent;
  return {
    context,
    push,
    indent,
    deindent,
    newline,
    helper,
    needIndent
  };
}
function generateLinkedNode(generator, node) {
  const { helper } = generator;
  generator.push(`${helper(
    "linked"
    /* LINKED */
  )}(`);
  generateNode(generator, node.key);
  if (node.modifier) {
    generator.push(`, `);
    generateNode(generator, node.modifier);
    generator.push(`, _type`);
  } else {
    generator.push(`, undefined, _type`);
  }
  generator.push(`)`);
}
function generateMessageNode(generator, node) {
  const { helper, needIndent } = generator;
  generator.push(`${helper(
    "normalize"
    /* NORMALIZE */
  )}([`);
  generator.indent(needIndent());
  const length = node.items.length;
  for (let i6 = 0; i6 < length; i6++) {
    generateNode(generator, node.items[i6]);
    if (i6 === length - 1) {
      break;
    }
    generator.push(", ");
  }
  generator.deindent(needIndent());
  generator.push("])");
}
function generatePluralNode(generator, node) {
  const { helper, needIndent } = generator;
  if (node.cases.length > 1) {
    generator.push(`${helper(
      "plural"
      /* PLURAL */
    )}([`);
    generator.indent(needIndent());
    const length = node.cases.length;
    for (let i6 = 0; i6 < length; i6++) {
      generateNode(generator, node.cases[i6]);
      if (i6 === length - 1) {
        break;
      }
      generator.push(", ");
    }
    generator.deindent(needIndent());
    generator.push(`])`);
  }
}
function generateResource(generator, node) {
  if (node.body) {
    generateNode(generator, node.body);
  } else {
    generator.push("null");
  }
}
function generateNode(generator, node) {
  const { helper } = generator;
  switch (node.type) {
    case 0:
      generateResource(generator, node);
      break;
    case 1:
      generatePluralNode(generator, node);
      break;
    case 2:
      generateMessageNode(generator, node);
      break;
    case 6:
      generateLinkedNode(generator, node);
      break;
    case 8:
      generator.push(JSON.stringify(node.value), node);
      break;
    case 7:
      generator.push(JSON.stringify(node.value), node);
      break;
    case 5:
      generator.push(`${helper(
        "interpolate"
        /* INTERPOLATE */
      )}(${helper(
        "list"
        /* LIST */
      )}(${node.index}))`, node);
      break;
    case 4:
      generator.push(`${helper(
        "interpolate"
        /* INTERPOLATE */
      )}(${helper(
        "named"
        /* NAMED */
      )}(${JSON.stringify(node.key)}))`, node);
      break;
    case 9:
      generator.push(JSON.stringify(node.value), node);
      break;
    case 3:
      generator.push(JSON.stringify(node.value), node);
      break;
    default:
      if (true) {
        throw new Error(`unhandled codegen node type: ${node.type}`);
      }
  }
}
var generate = (ast, options = {}) => {
  const mode = isString3(options.mode) ? options.mode : "normal";
  const filename = isString3(options.filename) ? options.filename : "message.intl";
  const sourceMap = !!options.sourceMap;
  const breakLineCode = options.breakLineCode != null ? options.breakLineCode : mode === "arrow" ? ";" : "\n";
  const needIndent = options.needIndent ? options.needIndent : mode !== "arrow";
  const helpers = ast.helpers || [];
  const generator = createCodeGenerator(ast, {
    mode,
    filename,
    sourceMap,
    breakLineCode,
    needIndent
  });
  generator.push(mode === "normal" ? `function __msg__ (ctx) {` : `(ctx) => {`);
  generator.indent(needIndent);
  if (helpers.length > 0) {
    generator.push(`const { ${helpers.map((s7) => `${s7}: _${s7}`).join(", ")} } = ctx`);
    generator.newline();
  }
  generator.push(`return `);
  generateNode(generator, ast);
  generator.deindent(needIndent);
  generator.push(`}`);
  const { code: code3, map } = generator.context();
  return {
    ast,
    code: code3,
    map: map ? map.toJSON() : void 0
    // eslint-disable-line @typescript-eslint/no-explicit-any
  };
};
function baseCompile(source, options = {}) {
  const assignedOptions = assign({}, options);
  const parser = createParser(assignedOptions);
  const ast = parser.parse(source);
  transform(ast, assignedOptions);
  return generate(ast, assignedOptions);
}

// ../../node_modules/.pnpm/@intlify+devtools-if@9.2.2/node_modules/@intlify/devtools-if/dist/devtools-if.esm-bundler.js
var IntlifyDevToolsHooks = {
  I18nInit: "i18n:init",
  FunctionTranslate: "function:translate"
};

// ../../node_modules/.pnpm/@intlify+core-base@9.2.2/node_modules/@intlify/core-base/dist/core-base.esm-bundler.js
var pathStateMachine = [];
pathStateMachine[
  0
  /* BEFORE_PATH */
] = {
  [
    "w"
    /* WORKSPACE */
  ]: [
    0
    /* BEFORE_PATH */
  ],
  [
    "i"
    /* IDENT */
  ]: [
    3,
    0
    /* APPEND */
  ],
  [
    "["
    /* LEFT_BRACKET */
  ]: [
    4
    /* IN_SUB_PATH */
  ],
  [
    "o"
    /* END_OF_FAIL */
  ]: [
    7
    /* AFTER_PATH */
  ]
};
pathStateMachine[
  1
  /* IN_PATH */
] = {
  [
    "w"
    /* WORKSPACE */
  ]: [
    1
    /* IN_PATH */
  ],
  [
    "."
    /* DOT */
  ]: [
    2
    /* BEFORE_IDENT */
  ],
  [
    "["
    /* LEFT_BRACKET */
  ]: [
    4
    /* IN_SUB_PATH */
  ],
  [
    "o"
    /* END_OF_FAIL */
  ]: [
    7
    /* AFTER_PATH */
  ]
};
pathStateMachine[
  2
  /* BEFORE_IDENT */
] = {
  [
    "w"
    /* WORKSPACE */
  ]: [
    2
    /* BEFORE_IDENT */
  ],
  [
    "i"
    /* IDENT */
  ]: [
    3,
    0
    /* APPEND */
  ],
  [
    "0"
    /* ZERO */
  ]: [
    3,
    0
    /* APPEND */
  ]
};
pathStateMachine[
  3
  /* IN_IDENT */
] = {
  [
    "i"
    /* IDENT */
  ]: [
    3,
    0
    /* APPEND */
  ],
  [
    "0"
    /* ZERO */
  ]: [
    3,
    0
    /* APPEND */
  ],
  [
    "w"
    /* WORKSPACE */
  ]: [
    1,
    1
    /* PUSH */
  ],
  [
    "."
    /* DOT */
  ]: [
    2,
    1
    /* PUSH */
  ],
  [
    "["
    /* LEFT_BRACKET */
  ]: [
    4,
    1
    /* PUSH */
  ],
  [
    "o"
    /* END_OF_FAIL */
  ]: [
    7,
    1
    /* PUSH */
  ]
};
pathStateMachine[
  4
  /* IN_SUB_PATH */
] = {
  [
    "'"
    /* SINGLE_QUOTE */
  ]: [
    5,
    0
    /* APPEND */
  ],
  [
    '"'
    /* DOUBLE_QUOTE */
  ]: [
    6,
    0
    /* APPEND */
  ],
  [
    "["
    /* LEFT_BRACKET */
  ]: [
    4,
    2
    /* INC_SUB_PATH_DEPTH */
  ],
  [
    "]"
    /* RIGHT_BRACKET */
  ]: [
    1,
    3
    /* PUSH_SUB_PATH */
  ],
  [
    "o"
    /* END_OF_FAIL */
  ]: 8,
  [
    "l"
    /* ELSE */
  ]: [
    4,
    0
    /* APPEND */
  ]
};
pathStateMachine[
  5
  /* IN_SINGLE_QUOTE */
] = {
  [
    "'"
    /* SINGLE_QUOTE */
  ]: [
    4,
    0
    /* APPEND */
  ],
  [
    "o"
    /* END_OF_FAIL */
  ]: 8,
  [
    "l"
    /* ELSE */
  ]: [
    5,
    0
    /* APPEND */
  ]
};
pathStateMachine[
  6
  /* IN_DOUBLE_QUOTE */
] = {
  [
    '"'
    /* DOUBLE_QUOTE */
  ]: [
    4,
    0
    /* APPEND */
  ],
  [
    "o"
    /* END_OF_FAIL */
  ]: 8,
  [
    "l"
    /* ELSE */
  ]: [
    6,
    0
    /* APPEND */
  ]
};
var literalValueRE = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
function isLiteral(exp) {
  return literalValueRE.test(exp);
}
function stripQuotes(str) {
  const a18 = str.charCodeAt(0);
  const b5 = str.charCodeAt(str.length - 1);
  return a18 === b5 && (a18 === 34 || a18 === 39) ? str.slice(1, -1) : str;
}
function getPathCharType(ch) {
  if (ch === void 0 || ch === null) {
    return "o";
  }
  const code3 = ch.charCodeAt(0);
  switch (code3) {
    case 91:
    case 93:
    case 46:
    case 34:
    case 39:
      return ch;
    case 95:
    case 36:
    case 45:
      return "i";
    case 9:
    case 10:
    case 13:
    case 160:
    case 65279:
    case 8232:
    case 8233:
      return "w";
  }
  return "i";
}
function formatSubPath(path) {
  const trimmed = path.trim();
  if (path.charAt(0) === "0" && isNaN(parseInt(path))) {
    return false;
  }
  return isLiteral(trimmed) ? stripQuotes(trimmed) : "*" + trimmed;
}
function parse(path) {
  const keys2 = [];
  let index = -1;
  let mode = 0;
  let subPathDepth = 0;
  let c5;
  let key;
  let newChar;
  let type;
  let transition;
  let action;
  let typeMap;
  const actions = [];
  actions[
    0
    /* APPEND */
  ] = () => {
    if (key === void 0) {
      key = newChar;
    } else {
      key += newChar;
    }
  };
  actions[
    1
    /* PUSH */
  ] = () => {
    if (key !== void 0) {
      keys2.push(key);
      key = void 0;
    }
  };
  actions[
    2
    /* INC_SUB_PATH_DEPTH */
  ] = () => {
    actions[
      0
      /* APPEND */
    ]();
    subPathDepth++;
  };
  actions[
    3
    /* PUSH_SUB_PATH */
  ] = () => {
    if (subPathDepth > 0) {
      subPathDepth--;
      mode = 4;
      actions[
        0
        /* APPEND */
      ]();
    } else {
      subPathDepth = 0;
      if (key === void 0) {
        return false;
      }
      key = formatSubPath(key);
      if (key === false) {
        return false;
      } else {
        actions[
          1
          /* PUSH */
        ]();
      }
    }
  };
  function maybeUnescapeQuote() {
    const nextChar = path[index + 1];
    if (mode === 5 && nextChar === "'" || mode === 6 && nextChar === '"') {
      index++;
      newChar = "\\" + nextChar;
      actions[
        0
        /* APPEND */
      ]();
      return true;
    }
  }
  while (mode !== null) {
    index++;
    c5 = path[index];
    if (c5 === "\\" && maybeUnescapeQuote()) {
      continue;
    }
    type = getPathCharType(c5);
    typeMap = pathStateMachine[mode];
    transition = typeMap[type] || typeMap[
      "l"
      /* ELSE */
    ] || 8;
    if (transition === 8) {
      return;
    }
    mode = transition[0];
    if (transition[1] !== void 0) {
      action = actions[transition[1]];
      if (action) {
        newChar = c5;
        if (action() === false) {
          return;
        }
      }
    }
    if (mode === 7) {
      return keys2;
    }
  }
}
var cache = /* @__PURE__ */ new Map();
function resolveWithKeyValue(obj, path) {
  return isObject2(obj) ? obj[path] : null;
}
function resolveValue(obj, path) {
  if (!isObject2(obj)) {
    return null;
  }
  let hit = cache.get(path);
  if (!hit) {
    hit = parse(path);
    if (hit) {
      cache.set(path, hit);
    }
  }
  if (!hit) {
    return null;
  }
  const len = hit.length;
  let last = obj;
  let i6 = 0;
  while (i6 < len) {
    const val = last[hit[i6]];
    if (val === void 0) {
      return null;
    }
    last = val;
    i6++;
  }
  return last;
}
var DEFAULT_MODIFIER = (str) => str;
var DEFAULT_MESSAGE = (ctx) => "";
var DEFAULT_MESSAGE_DATA_TYPE = "text";
var DEFAULT_NORMALIZE = (values) => values.length === 0 ? "" : values.join("");
var DEFAULT_INTERPOLATE = toDisplayString2;
function pluralDefault(choice, choicesLength) {
  choice = Math.abs(choice);
  if (choicesLength === 2) {
    return choice ? choice > 1 ? 1 : 0 : 1;
  }
  return choice ? Math.min(choice, 2) : 0;
}
function getPluralIndex(options) {
  const index = isNumber2(options.pluralIndex) ? options.pluralIndex : -1;
  return options.named && (isNumber2(options.named.count) || isNumber2(options.named.n)) ? isNumber2(options.named.count) ? options.named.count : isNumber2(options.named.n) ? options.named.n : index : index;
}
function normalizeNamed(pluralIndex, props) {
  if (!props.count) {
    props.count = pluralIndex;
  }
  if (!props.n) {
    props.n = pluralIndex;
  }
}
function createMessageContext(options = {}) {
  const locale = options.locale;
  const pluralIndex = getPluralIndex(options);
  const pluralRule = isObject2(options.pluralRules) && isString3(locale) && isFunction3(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;
  const orgPluralRule = isObject2(options.pluralRules) && isString3(locale) && isFunction3(options.pluralRules[locale]) ? pluralDefault : void 0;
  const plural = (messages) => {
    return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];
  };
  const _list = options.list || [];
  const list = (index) => _list[index];
  const _named = options.named || {};
  isNumber2(options.pluralIndex) && normalizeNamed(pluralIndex, _named);
  const named = (key) => _named[key];
  function message(key) {
    const msg = isFunction3(options.messages) ? options.messages(key) : isObject2(options.messages) ? options.messages[key] : false;
    return !msg ? options.parent ? options.parent.message(key) : DEFAULT_MESSAGE : msg;
  }
  const _modifier = (name) => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;
  const normalize = isPlainObject(options.processor) && isFunction3(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;
  const interpolate = isPlainObject(options.processor) && isFunction3(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;
  const type = isPlainObject(options.processor) && isString3(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;
  const linked = (key, ...args) => {
    const [arg1, arg2] = args;
    let type2 = "text";
    let modifier = "";
    if (args.length === 1) {
      if (isObject2(arg1)) {
        modifier = arg1.modifier || modifier;
        type2 = arg1.type || type2;
      } else if (isString3(arg1)) {
        modifier = arg1 || modifier;
      }
    } else if (args.length === 2) {
      if (isString3(arg1)) {
        modifier = arg1 || modifier;
      }
      if (isString3(arg2)) {
        type2 = arg2 || type2;
      }
    }
    let msg = message(key)(ctx);
    if (type2 === "vnode" && isArray2(msg) && modifier) {
      msg = msg[0];
    }
    return modifier ? _modifier(modifier)(msg, type2) : msg;
  };
  const ctx = {
    [
      "list"
      /* LIST */
    ]: list,
    [
      "named"
      /* NAMED */
    ]: named,
    [
      "plural"
      /* PLURAL */
    ]: plural,
    [
      "linked"
      /* LINKED */
    ]: linked,
    [
      "message"
      /* MESSAGE */
    ]: message,
    [
      "type"
      /* TYPE */
    ]: type,
    [
      "interpolate"
      /* INTERPOLATE */
    ]: interpolate,
    [
      "normalize"
      /* NORMALIZE */
    ]: normalize
  };
  return ctx;
}
var devtools = null;
function setDevToolsHook(hook) {
  devtools = hook;
}
function initI18nDevTools(i18n, version2, meta) {
  devtools && devtools.emit(IntlifyDevToolsHooks.I18nInit, {
    timestamp: Date.now(),
    i18n,
    version: version2,
    meta
  });
}
var translateDevTools = createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);
function createDevToolsHook(hook) {
  return (payloads) => devtools && devtools.emit(hook, payloads);
}
var CoreWarnCodes = {
  NOT_FOUND_KEY: 1,
  FALLBACK_TO_TRANSLATE: 2,
  CANNOT_FORMAT_NUMBER: 3,
  FALLBACK_TO_NUMBER_FORMAT: 4,
  CANNOT_FORMAT_DATE: 5,
  FALLBACK_TO_DATE_FORMAT: 6,
  __EXTEND_POINT__: 7
};
var warnMessages = {
  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,
  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,
  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,
  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,
  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,
  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`
};
function getWarnMessage(code3, ...args) {
  return format(warnMessages[code3], ...args);
}
function fallbackWithSimple(ctx, fallback, start) {
  return [.../* @__PURE__ */ new Set([
    start,
    ...isArray2(fallback) ? fallback : isObject2(fallback) ? Object.keys(fallback) : isString3(fallback) ? [fallback] : [start]
  ])];
}
function fallbackWithLocaleChain(ctx, fallback, start) {
  const startLocale = isString3(start) ? start : DEFAULT_LOCALE;
  const context = ctx;
  if (!context.__localeChainCache) {
    context.__localeChainCache = /* @__PURE__ */ new Map();
  }
  let chain = context.__localeChainCache.get(startLocale);
  if (!chain) {
    chain = [];
    let block = [start];
    while (isArray2(block)) {
      block = appendBlockToChain(chain, block, fallback);
    }
    const defaults = isArray2(fallback) || !isPlainObject(fallback) ? fallback : fallback["default"] ? fallback["default"] : null;
    block = isString3(defaults) ? [defaults] : defaults;
    if (isArray2(block)) {
      appendBlockToChain(chain, block, false);
    }
    context.__localeChainCache.set(startLocale, chain);
  }
  return chain;
}
function appendBlockToChain(chain, block, blocks) {
  let follow = true;
  for (let i6 = 0; i6 < block.length && isBoolean(follow); i6++) {
    const locale = block[i6];
    if (isString3(locale)) {
      follow = appendLocaleToChain(chain, block[i6], blocks);
    }
  }
  return follow;
}
function appendLocaleToChain(chain, locale, blocks) {
  let follow;
  const tokens = locale.split("-");
  do {
    const target = tokens.join("-");
    follow = appendItemToChain(chain, target, blocks);
    tokens.splice(-1, 1);
  } while (tokens.length && follow === true);
  return follow;
}
function appendItemToChain(chain, target, blocks) {
  let follow = false;
  if (!chain.includes(target)) {
    follow = true;
    if (target) {
      follow = target[target.length - 1] !== "!";
      const locale = target.replace(/!/g, "");
      chain.push(locale);
      if ((isArray2(blocks) || isPlainObject(blocks)) && blocks[locale]) {
        follow = blocks[locale];
      }
    }
  }
  return follow;
}
var VERSION = "9.2.2";
var NOT_REOSLVED = -1;
var DEFAULT_LOCALE = "en-US";
var MISSING_RESOLVE_VALUE = "";
var capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;
function getDefaultLinkedModifiers() {
  return {
    upper: (val, type) => {
      return type === "text" && isString3(val) ? val.toUpperCase() : type === "vnode" && isObject2(val) && "__v_isVNode" in val ? val.children.toUpperCase() : val;
    },
    lower: (val, type) => {
      return type === "text" && isString3(val) ? val.toLowerCase() : type === "vnode" && isObject2(val) && "__v_isVNode" in val ? val.children.toLowerCase() : val;
    },
    capitalize: (val, type) => {
      return type === "text" && isString3(val) ? capitalize(val) : type === "vnode" && isObject2(val) && "__v_isVNode" in val ? capitalize(val.children) : val;
    }
  };
}
var _compiler;
function registerMessageCompiler(compiler) {
  _compiler = compiler;
}
var _resolver;
function registerMessageResolver(resolver) {
  _resolver = resolver;
}
var _fallbacker;
function registerLocaleFallbacker(fallbacker) {
  _fallbacker = fallbacker;
}
var _additionalMeta = null;
var setAdditionalMeta = (meta) => {
  _additionalMeta = meta;
};
var getAdditionalMeta = () => _additionalMeta;
var _fallbackContext = null;
var setFallbackContext = (context) => {
  _fallbackContext = context;
};
var getFallbackContext = () => _fallbackContext;
var _cid = 0;
function createCoreContext(options = {}) {
  const version2 = isString3(options.version) ? options.version : VERSION;
  const locale = isString3(options.locale) ? options.locale : DEFAULT_LOCALE;
  const fallbackLocale = isArray2(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString3(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : locale;
  const messages = isPlainObject(options.messages) ? options.messages : { [locale]: {} };
  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : { [locale]: {} };
  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : { [locale]: {} };
  const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());
  const pluralRules = options.pluralRules || {};
  const missing = isFunction3(options.missing) ? options.missing : null;
  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;
  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;
  const fallbackFormat = !!options.fallbackFormat;
  const unresolving = !!options.unresolving;
  const postTranslation = isFunction3(options.postTranslation) ? options.postTranslation : null;
  const processor = isPlainObject(options.processor) ? options.processor : null;
  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;
  const escapeParameter = !!options.escapeParameter;
  const messageCompiler = isFunction3(options.messageCompiler) ? options.messageCompiler : _compiler;
  const messageResolver = isFunction3(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;
  const localeFallbacker = isFunction3(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;
  const fallbackContext = isObject2(options.fallbackContext) ? options.fallbackContext : void 0;
  const onWarn = isFunction3(options.onWarn) ? options.onWarn : warn;
  const internalOptions = options;
  const __datetimeFormatters = isObject2(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : /* @__PURE__ */ new Map();
  const __numberFormatters = isObject2(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : /* @__PURE__ */ new Map();
  const __meta = isObject2(internalOptions.__meta) ? internalOptions.__meta : {};
  _cid++;
  const context = {
    version: version2,
    cid: _cid,
    locale,
    fallbackLocale,
    messages,
    modifiers,
    pluralRules,
    missing,
    missingWarn,
    fallbackWarn,
    fallbackFormat,
    unresolving,
    postTranslation,
    processor,
    warnHtmlMessage,
    escapeParameter,
    messageCompiler,
    messageResolver,
    localeFallbacker,
    fallbackContext,
    onWarn,
    __meta
  };
  {
    context.datetimeFormats = datetimeFormats;
    context.numberFormats = numberFormats;
    context.__datetimeFormatters = __datetimeFormatters;
    context.__numberFormatters = __numberFormatters;
  }
  if (true) {
    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : void 0;
  }
  if (true) {
    initI18nDevTools(context, version2, __meta);
  }
  return context;
}
function isTranslateFallbackWarn(fallback, key) {
  return fallback instanceof RegExp ? fallback.test(key) : fallback;
}
function isTranslateMissingWarn(missing, key) {
  return missing instanceof RegExp ? missing.test(key) : missing;
}
function handleMissing(context, key, locale, missingWarn, type) {
  const { missing, onWarn } = context;
  if (true) {
    const emitter = context.__v_emitter;
    if (emitter) {
      emitter.emit("missing", {
        locale,
        key,
        type,
        groupId: `${type}:${key}`
      });
    }
  }
  if (missing !== null) {
    const ret = missing(context, locale, key, type);
    return isString3(ret) ? ret : key;
  } else {
    if (isTranslateMissingWarn(missingWarn, key)) {
      onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));
    }
    return key;
  }
}
function updateFallbackLocale(ctx, locale, fallback) {
  const context = ctx;
  context.__localeChainCache = /* @__PURE__ */ new Map();
  ctx.localeFallbacker(ctx, fallback, locale);
}
var RE_HTML_TAG = /<\/?[\w\s="/.':;#-\/]+>/;
var WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;
function checkHtmlMessage(source, options) {
  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;
  if (warnHtmlMessage && RE_HTML_TAG.test(source)) {
    warn(format(WARN_MESSAGE, { source }));
  }
}
var defaultOnCacheKey = (source) => source;
var compileCache = /* @__PURE__ */ Object.create(null);
function compileToFunction(source, options = {}) {
  {
    checkHtmlMessage(source, options);
    const onCacheKey = options.onCacheKey || defaultOnCacheKey;
    const key = onCacheKey(source);
    const cached = compileCache[key];
    if (cached) {
      return cached;
    }
    let occurred = false;
    const onError = options.onError || defaultOnError;
    options.onError = (err) => {
      occurred = true;
      onError(err);
    };
    const { code: code3 } = baseCompile(source, options);
    const msg = new Function(`return ${code3}`)();
    return !occurred ? compileCache[key] = msg : msg;
  }
}
var code = CompileErrorCodes.__EXTEND_POINT__;
var inc = () => ++code;
var CoreErrorCodes = {
  INVALID_ARGUMENT: code,
  INVALID_DATE_ARGUMENT: inc(),
  INVALID_ISO_DATE_ARGUMENT: inc(),
  __EXTEND_POINT__: inc()
  // 18
};
function createCoreError(code3) {
  return createCompileError(code3, null, true ? { messages: errorMessages2 } : void 0);
}
var errorMessages2 = {
  [CoreErrorCodes.INVALID_ARGUMENT]: "Invalid arguments",
  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: "The date provided is an invalid Date object.Make sure your Date represents a valid date.",
  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: "The argument provided is not a valid ISO date string"
};
var NOOP_MESSAGE_FUNCTION = () => "";
var isMessageFunction = (val) => isFunction3(val);
function translate(context, ...args) {
  const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;
  const [key, options] = parseTranslateArgs(...args);
  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;
  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;
  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;
  const resolvedMessage = !!options.resolvedMessage;
  const defaultMsgOrKey = isString3(options.default) || isBoolean(options.default) ? !isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat ? !messageCompiler ? () => key : key : "";
  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== "";
  const locale = isString3(options.locale) ? options.locale : context.locale;
  escapeParameter && escapeParams(options);
  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [
    key,
    locale,
    messages[locale] || {}
  ];
  let format2 = formatScope;
  let cacheBaseKey = key;
  if (!resolvedMessage && !(isString3(format2) || isMessageFunction(format2))) {
    if (enableDefaultMsg) {
      format2 = defaultMsgOrKey;
      cacheBaseKey = format2;
    }
  }
  if (!resolvedMessage && (!(isString3(format2) || isMessageFunction(format2)) || !isString3(targetLocale))) {
    return unresolving ? NOT_REOSLVED : key;
  }
  if (isString3(format2) && context.messageCompiler == null) {
    warn(`The message format compilation is not supported in this build. Because message compiler isn't included. You need to pre-compilation all message format. So translate function return '${key}'.`);
    return key;
  }
  let occurred = false;
  const errorDetector = () => {
    occurred = true;
  };
  const msg = !isMessageFunction(format2) ? compileMessageFormat(context, key, targetLocale, format2, cacheBaseKey, errorDetector) : format2;
  if (occurred) {
    return format2;
  }
  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);
  const msgContext = createMessageContext(ctxOptions);
  const messaged = evaluateMessage(context, msg, msgContext);
  const ret = postTranslation ? postTranslation(messaged, key) : messaged;
  if (true) {
    const payloads = {
      timestamp: Date.now(),
      key: isString3(key) ? key : isMessageFunction(format2) ? format2.key : "",
      locale: targetLocale || (isMessageFunction(format2) ? format2.locale : ""),
      format: isString3(format2) ? format2 : isMessageFunction(format2) ? format2.source : "",
      message: ret
    };
    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});
    translateDevTools(payloads);
  }
  return ret;
}
function escapeParams(options) {
  if (isArray2(options.list)) {
    options.list = options.list.map((item) => isString3(item) ? escapeHtml(item) : item);
  } else if (isObject2(options.named)) {
    Object.keys(options.named).forEach((key) => {
      if (isString3(options.named[key])) {
        options.named[key] = escapeHtml(options.named[key]);
      }
    });
  }
}
function resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {
  const { messages, onWarn, messageResolver: resolveValue2, localeFallbacker } = context;
  const locales = localeFallbacker(context, fallbackLocale, locale);
  let message = {};
  let targetLocale;
  let format2 = null;
  let from = locale;
  let to = null;
  const type = "translate";
  for (let i6 = 0; i6 < locales.length; i6++) {
    targetLocale = to = locales[i6];
    if (locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {
      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {
        key,
        target: targetLocale
      }));
    }
    if (locale !== targetLocale) {
      const emitter = context.__v_emitter;
      if (emitter) {
        emitter.emit("fallback", {
          type,
          key,
          from,
          to,
          groupId: `${type}:${key}`
        });
      }
    }
    message = messages[targetLocale] || {};
    let start = null;
    let startTag;
    let endTag;
    if (inBrowser) {
      start = window.performance.now();
      startTag = "intlify-message-resolve-start";
      endTag = "intlify-message-resolve-end";
      mark && mark(startTag);
    }
    if ((format2 = resolveValue2(message, key)) === null) {
      format2 = message[key];
    }
    if (inBrowser) {
      const end = window.performance.now();
      const emitter = context.__v_emitter;
      if (emitter && start && format2) {
        emitter.emit("message-resolve", {
          type: "message-resolve",
          key,
          message: format2,
          time: end - start,
          groupId: `${type}:${key}`
        });
      }
      if (startTag && endTag && mark && measure) {
        mark(endTag);
        measure("intlify message resolve", startTag, endTag);
      }
    }
    if (isString3(format2) || isFunction3(format2))
      break;
    const missingRet = handleMissing(
      context,
      // eslint-disable-line @typescript-eslint/no-explicit-any
      key,
      targetLocale,
      missingWarn,
      type
    );
    if (missingRet !== key) {
      format2 = missingRet;
    }
    from = to;
  }
  return [format2, targetLocale, message];
}
function compileMessageFormat(context, key, targetLocale, format2, cacheBaseKey, errorDetector) {
  const { messageCompiler, warnHtmlMessage } = context;
  if (isMessageFunction(format2)) {
    const msg2 = format2;
    msg2.locale = msg2.locale || targetLocale;
    msg2.key = msg2.key || key;
    return msg2;
  }
  if (messageCompiler == null) {
    const msg2 = () => format2;
    msg2.locale = targetLocale;
    msg2.key = key;
    return msg2;
  }
  let start = null;
  let startTag;
  let endTag;
  if (inBrowser) {
    start = window.performance.now();
    startTag = "intlify-message-compilation-start";
    endTag = "intlify-message-compilation-end";
    mark && mark(startTag);
  }
  const msg = messageCompiler(format2, getCompileOptions(context, targetLocale, cacheBaseKey, format2, warnHtmlMessage, errorDetector));
  if (inBrowser) {
    const end = window.performance.now();
    const emitter = context.__v_emitter;
    if (emitter && start) {
      emitter.emit("message-compilation", {
        type: "message-compilation",
        message: format2,
        time: end - start,
        groupId: `${"translate"}:${key}`
      });
    }
    if (startTag && endTag && mark && measure) {
      mark(endTag);
      measure("intlify message compilation", startTag, endTag);
    }
  }
  msg.locale = targetLocale;
  msg.key = key;
  msg.source = format2;
  return msg;
}
function evaluateMessage(context, msg, msgCtx) {
  let start = null;
  let startTag;
  let endTag;
  if (inBrowser) {
    start = window.performance.now();
    startTag = "intlify-message-evaluation-start";
    endTag = "intlify-message-evaluation-end";
    mark && mark(startTag);
  }
  const messaged = msg(msgCtx);
  if (inBrowser) {
    const end = window.performance.now();
    const emitter = context.__v_emitter;
    if (emitter && start) {
      emitter.emit("message-evaluation", {
        type: "message-evaluation",
        value: messaged,
        time: end - start,
        groupId: `${"translate"}:${msg.key}`
      });
    }
    if (startTag && endTag && mark && measure) {
      mark(endTag);
      measure("intlify message evaluation", startTag, endTag);
    }
  }
  return messaged;
}
function parseTranslateArgs(...args) {
  const [arg1, arg2, arg3] = args;
  const options = {};
  if (!isString3(arg1) && !isNumber2(arg1) && !isMessageFunction(arg1)) {
    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);
  }
  const key = isNumber2(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;
  if (isNumber2(arg2)) {
    options.plural = arg2;
  } else if (isString3(arg2)) {
    options.default = arg2;
  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {
    options.named = arg2;
  } else if (isArray2(arg2)) {
    options.list = arg2;
  }
  if (isNumber2(arg3)) {
    options.plural = arg3;
  } else if (isString3(arg3)) {
    options.default = arg3;
  } else if (isPlainObject(arg3)) {
    assign(options, arg3);
  }
  return [key, options];
}
function getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {
  return {
    warnHtmlMessage,
    onError: (err) => {
      errorDetector && errorDetector(err);
      if (true) {
        const message = `Message compilation error: ${err.message}`;
        const codeFrame = err.location && generateCodeFrame(source, err.location.start.offset, err.location.end.offset);
        const emitter = context.__v_emitter;
        if (emitter) {
          emitter.emit("compile-error", {
            message: source,
            error: err.message,
            start: err.location && err.location.start.offset,
            end: err.location && err.location.end.offset,
            groupId: `${"translate"}:${key}`
          });
        }
        console.error(codeFrame ? `${message}
${codeFrame}` : message);
      } else {
        throw err;
      }
    },
    onCacheKey: (source2) => generateFormatCacheKey(locale, key, source2)
  };
}
function getMessageContextOptions(context, locale, message, options) {
  const { modifiers, pluralRules, messageResolver: resolveValue2, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;
  const resolveMessage = (key) => {
    let val = resolveValue2(message, key);
    if (val == null && fallbackContext) {
      const [, , message2] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);
      val = resolveValue2(message2, key);
    }
    if (isString3(val)) {
      let occurred = false;
      const errorDetector = () => {
        occurred = true;
      };
      const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);
      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;
    } else if (isMessageFunction(val)) {
      return val;
    } else {
      return NOOP_MESSAGE_FUNCTION;
    }
  };
  const ctxOptions = {
    locale,
    modifiers,
    pluralRules,
    messages: resolveMessage
  };
  if (context.processor) {
    ctxOptions.processor = context.processor;
  }
  if (options.list) {
    ctxOptions.list = options.list;
  }
  if (options.named) {
    ctxOptions.named = options.named;
  }
  if (isNumber2(options.plural)) {
    ctxOptions.pluralIndex = options.plural;
  }
  return ctxOptions;
}
var intlDefined = typeof Intl !== "undefined";
var Availabilities = {
  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== "undefined",
  numberFormat: intlDefined && typeof Intl.NumberFormat !== "undefined"
};
function datetime(context, ...args) {
  const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;
  const { __datetimeFormatters } = context;
  if (!Availabilities.dateTimeFormat) {
    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));
    return MISSING_RESOLVE_VALUE;
  }
  const [key, value, options, overrides] = parseDateTimeArgs(...args);
  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;
  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;
  const part = !!options.part;
  const locale = isString3(options.locale) ? options.locale : context.locale;
  const locales = localeFallbacker(
    context,
    // eslint-disable-line @typescript-eslint/no-explicit-any
    fallbackLocale,
    locale
  );
  if (!isString3(key) || key === "") {
    return new Intl.DateTimeFormat(locale, overrides).format(value);
  }
  let datetimeFormat = {};
  let targetLocale;
  let format2 = null;
  let from = locale;
  let to = null;
  const type = "datetime format";
  for (let i6 = 0; i6 < locales.length; i6++) {
    targetLocale = to = locales[i6];
    if (locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {
      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {
        key,
        target: targetLocale
      }));
    }
    if (locale !== targetLocale) {
      const emitter = context.__v_emitter;
      if (emitter) {
        emitter.emit("fallback", {
          type,
          key,
          from,
          to,
          groupId: `${type}:${key}`
        });
      }
    }
    datetimeFormat = datetimeFormats[targetLocale] || {};
    format2 = datetimeFormat[key];
    if (isPlainObject(format2))
      break;
    handleMissing(context, key, targetLocale, missingWarn, type);
    from = to;
  }
  if (!isPlainObject(format2) || !isString3(targetLocale)) {
    return unresolving ? NOT_REOSLVED : key;
  }
  let id = `${targetLocale}__${key}`;
  if (!isEmptyObject(overrides)) {
    id = `${id}__${JSON.stringify(overrides)}`;
  }
  let formatter = __datetimeFormatters.get(id);
  if (!formatter) {
    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format2, overrides));
    __datetimeFormatters.set(id, formatter);
  }
  return !part ? formatter.format(value) : formatter.formatToParts(value);
}
var DATETIME_FORMAT_OPTIONS_KEYS = [
  "localeMatcher",
  "weekday",
  "era",
  "year",
  "month",
  "day",
  "hour",
  "minute",
  "second",
  "timeZoneName",
  "formatMatcher",
  "hour12",
  "timeZone",
  "dateStyle",
  "timeStyle",
  "calendar",
  "dayPeriod",
  "numberingSystem",
  "hourCycle",
  "fractionalSecondDigits"
];
function parseDateTimeArgs(...args) {
  const [arg1, arg2, arg3, arg4] = args;
  const options = {};
  let overrides = {};
  let value;
  if (isString3(arg1)) {
    const matches = arg1.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);
    if (!matches) {
      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);
    }
    const dateTime = matches[3] ? matches[3].trim().startsWith("T") ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();
    value = new Date(dateTime);
    try {
      value.toISOString();
    } catch (e14) {
      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);
    }
  } else if (isDate(arg1)) {
    if (isNaN(arg1.getTime())) {
      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);
    }
    value = arg1;
  } else if (isNumber2(arg1)) {
    value = arg1;
  } else {
    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);
  }
  if (isString3(arg2)) {
    options.key = arg2;
  } else if (isPlainObject(arg2)) {
    Object.keys(arg2).forEach((key) => {
      if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {
        overrides[key] = arg2[key];
      } else {
        options[key] = arg2[key];
      }
    });
  }
  if (isString3(arg3)) {
    options.locale = arg3;
  } else if (isPlainObject(arg3)) {
    overrides = arg3;
  }
  if (isPlainObject(arg4)) {
    overrides = arg4;
  }
  return [options.key || "", value, options, overrides];
}
function clearDateTimeFormat(ctx, locale, format2) {
  const context = ctx;
  for (const key in format2) {
    const id = `${locale}__${key}`;
    if (!context.__datetimeFormatters.has(id)) {
      continue;
    }
    context.__datetimeFormatters.delete(id);
  }
}
function number(context, ...args) {
  const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;
  const { __numberFormatters } = context;
  if (!Availabilities.numberFormat) {
    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));
    return MISSING_RESOLVE_VALUE;
  }
  const [key, value, options, overrides] = parseNumberArgs(...args);
  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;
  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;
  const part = !!options.part;
  const locale = isString3(options.locale) ? options.locale : context.locale;
  const locales = localeFallbacker(
    context,
    // eslint-disable-line @typescript-eslint/no-explicit-any
    fallbackLocale,
    locale
  );
  if (!isString3(key) || key === "") {
    return new Intl.NumberFormat(locale, overrides).format(value);
  }
  let numberFormat = {};
  let targetLocale;
  let format2 = null;
  let from = locale;
  let to = null;
  const type = "number format";
  for (let i6 = 0; i6 < locales.length; i6++) {
    targetLocale = to = locales[i6];
    if (locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {
      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {
        key,
        target: targetLocale
      }));
    }
    if (locale !== targetLocale) {
      const emitter = context.__v_emitter;
      if (emitter) {
        emitter.emit("fallback", {
          type,
          key,
          from,
          to,
          groupId: `${type}:${key}`
        });
      }
    }
    numberFormat = numberFormats[targetLocale] || {};
    format2 = numberFormat[key];
    if (isPlainObject(format2))
      break;
    handleMissing(context, key, targetLocale, missingWarn, type);
    from = to;
  }
  if (!isPlainObject(format2) || !isString3(targetLocale)) {
    return unresolving ? NOT_REOSLVED : key;
  }
  let id = `${targetLocale}__${key}`;
  if (!isEmptyObject(overrides)) {
    id = `${id}__${JSON.stringify(overrides)}`;
  }
  let formatter = __numberFormatters.get(id);
  if (!formatter) {
    formatter = new Intl.NumberFormat(targetLocale, assign({}, format2, overrides));
    __numberFormatters.set(id, formatter);
  }
  return !part ? formatter.format(value) : formatter.formatToParts(value);
}
var NUMBER_FORMAT_OPTIONS_KEYS = [
  "localeMatcher",
  "style",
  "currency",
  "currencyDisplay",
  "currencySign",
  "useGrouping",
  "minimumIntegerDigits",
  "minimumFractionDigits",
  "maximumFractionDigits",
  "minimumSignificantDigits",
  "maximumSignificantDigits",
  "compactDisplay",
  "notation",
  "signDisplay",
  "unit",
  "unitDisplay",
  "roundingMode",
  "roundingPriority",
  "roundingIncrement",
  "trailingZeroDisplay"
];
function parseNumberArgs(...args) {
  const [arg1, arg2, arg3, arg4] = args;
  const options = {};
  let overrides = {};
  if (!isNumber2(arg1)) {
    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);
  }
  const value = arg1;
  if (isString3(arg2)) {
    options.key = arg2;
  } else if (isPlainObject(arg2)) {
    Object.keys(arg2).forEach((key) => {
      if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {
        overrides[key] = arg2[key];
      } else {
        options[key] = arg2[key];
      }
    });
  }
  if (isString3(arg3)) {
    options.locale = arg3;
  } else if (isPlainObject(arg3)) {
    overrides = arg3;
  }
  if (isPlainObject(arg4)) {
    overrides = arg4;
  }
  return [options.key || "", value, options, overrides];
}
function clearNumberFormat(ctx, locale, format2) {
  const context = ctx;
  for (const key in format2) {
    const id = `${locale}__${key}`;
    if (!context.__numberFormatters.has(id)) {
      continue;
    }
    context.__numberFormatters.delete(id);
  }
}
{
  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== "boolean") {
    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;
  }
}

// ../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/env.js
function getDevtoolsGlobalHook() {
  return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;
}
function getTarget() {
  return typeof navigator !== "undefined" && typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
}
var isProxyAvailable = typeof Proxy === "function";

// ../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/const.js
var HOOK_SETUP = "devtools-plugin:setup";
var HOOK_PLUGIN_SETTINGS_SET = "plugin:settings:set";

// ../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/time.js
var supported;
var perf;
function isPerformanceSupported() {
  var _a2;
  if (supported !== void 0) {
    return supported;
  }
  if (typeof window !== "undefined" && window.performance) {
    supported = true;
    perf = window.performance;
  } else if (typeof global !== "undefined" && ((_a2 = global.perf_hooks) === null || _a2 === void 0 ? void 0 : _a2.performance)) {
    supported = true;
    perf = global.perf_hooks.performance;
  } else {
    supported = false;
  }
  return supported;
}
function now() {
  return isPerformanceSupported() ? perf.now() : Date.now();
}

// ../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/proxy.js
var ApiProxy = class {
  constructor(plugin, hook) {
    this.target = null;
    this.targetQueue = [];
    this.onQueue = [];
    this.plugin = plugin;
    this.hook = hook;
    const defaultSettings = {};
    if (plugin.settings) {
      for (const id in plugin.settings) {
        const item = plugin.settings[id];
        defaultSettings[id] = item.defaultValue;
      }
    }
    const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;
    let currentSettings = Object.assign({}, defaultSettings);
    try {
      const raw = localStorage.getItem(localSettingsSaveId);
      const data = JSON.parse(raw);
      Object.assign(currentSettings, data);
    } catch (e14) {
    }
    this.fallbacks = {
      getSettings() {
        return currentSettings;
      },
      setSettings(value) {
        try {
          localStorage.setItem(localSettingsSaveId, JSON.stringify(value));
        } catch (e14) {
        }
        currentSettings = value;
      },
      now() {
        return now();
      }
    };
    if (hook) {
      hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {
        if (pluginId === this.plugin.id) {
          this.fallbacks.setSettings(value);
        }
      });
    }
    this.proxiedOn = new Proxy({}, {
      get: (_target, prop) => {
        if (this.target) {
          return this.target.on[prop];
        } else {
          return (...args) => {
            this.onQueue.push({
              method: prop,
              args
            });
          };
        }
      }
    });
    this.proxiedTarget = new Proxy({}, {
      get: (_target, prop) => {
        if (this.target) {
          return this.target[prop];
        } else if (prop === "on") {
          return this.proxiedOn;
        } else if (Object.keys(this.fallbacks).includes(prop)) {
          return (...args) => {
            this.targetQueue.push({
              method: prop,
              args,
              resolve: () => {
              }
            });
            return this.fallbacks[prop](...args);
          };
        } else {
          return (...args) => {
            return new Promise((resolve) => {
              this.targetQueue.push({
                method: prop,
                args,
                resolve
              });
            });
          };
        }
      }
    });
  }
  async setRealTarget(target) {
    this.target = target;
    for (const item of this.onQueue) {
      this.target.on[item.method](...item.args);
    }
    for (const item of this.targetQueue) {
      item.resolve(await this.target[item.method](...item.args));
    }
  }
};

// ../../node_modules/.pnpm/@vue+devtools-api@6.5.0/node_modules/@vue/devtools-api/lib/esm/index.js
function setupDevtoolsPlugin(pluginDescriptor, setupFn) {
  const descriptor = pluginDescriptor;
  const target = getTarget();
  const hook = getDevtoolsGlobalHook();
  const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;
  if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {
    hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);
  } else {
    const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;
    const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];
    list.push({
      pluginDescriptor: descriptor,
      setupFn,
      proxy
    });
    if (proxy)
      setupFn(proxy.proxiedTarget);
  }
}

// ../../node_modules/.pnpm/@intlify+vue-devtools@9.2.2/node_modules/@intlify/vue-devtools/dist/vue-devtools.esm-bundler.js
var VueDevToolsLabels = {
  [
    "vue-devtools-plugin-vue-i18n"
    /* PLUGIN */
  ]: "Vue I18n devtools",
  [
    "vue-i18n-resource-inspector"
    /* CUSTOM_INSPECTOR */
  ]: "I18n Resources",
  [
    "vue-i18n-timeline"
    /* TIMELINE */
  ]: "Vue I18n"
};
var VueDevToolsPlaceholders = {
  [
    "vue-i18n-resource-inspector"
    /* CUSTOM_INSPECTOR */
  ]: "Search for scopes ..."
};
var VueDevToolsTimelineColors = {
  [
    "vue-i18n-timeline"
    /* TIMELINE */
  ]: 16764185
};

// ../../node_modules/.pnpm/vue-i18n@9.2.2_vue@3.2.45/node_modules/vue-i18n/dist/vue-i18n.esm-bundler.js
var VERSION2 = "9.2.2";
function initFeatureFlags() {
  let needWarn = false;
  if (typeof __VUE_I18N_FULL_INSTALL__ !== "boolean") {
    needWarn = true;
    getGlobalThis().__VUE_I18N_FULL_INSTALL__ = true;
  }
  if (typeof __VUE_I18N_LEGACY_API__ !== "boolean") {
    needWarn = true;
    getGlobalThis().__VUE_I18N_LEGACY_API__ = true;
  }
  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== "boolean") {
    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;
  }
  if (needWarn) {
    console.warn(`You are running the esm-bundler build of vue-i18n. It is recommended to configure your bundler to explicitly replace feature flag globals with boolean literals to get proper tree-shaking in the final bundle.`);
  }
}
var code$1 = CoreWarnCodes.__EXTEND_POINT__;
var inc$1 = () => ++code$1;
var I18nWarnCodes = {
  FALLBACK_TO_ROOT: code$1,
  NOT_SUPPORTED_PRESERVE: inc$1(),
  NOT_SUPPORTED_FORMATTER: inc$1(),
  NOT_SUPPORTED_PRESERVE_DIRECTIVE: inc$1(),
  NOT_SUPPORTED_GET_CHOICE_INDEX: inc$1(),
  COMPONENT_NAME_LEGACY_COMPATIBLE: inc$1(),
  NOT_FOUND_PARENT_SCOPE: inc$1()
  // 13
};
var warnMessages2 = {
  [I18nWarnCodes.FALLBACK_TO_ROOT]: `Fall back to {type} '{key}' with root locale.`,
  [I18nWarnCodes.NOT_SUPPORTED_PRESERVE]: `Not supported 'preserve'.`,
  [I18nWarnCodes.NOT_SUPPORTED_FORMATTER]: `Not supported 'formatter'.`,
  [I18nWarnCodes.NOT_SUPPORTED_PRESERVE_DIRECTIVE]: `Not supported 'preserveDirectiveContent'.`,
  [I18nWarnCodes.NOT_SUPPORTED_GET_CHOICE_INDEX]: `Not supported 'getChoiceIndex'.`,
  [I18nWarnCodes.COMPONENT_NAME_LEGACY_COMPATIBLE]: `Component name legacy compatible: '{name}' -> 'i18n'`,
  [I18nWarnCodes.NOT_FOUND_PARENT_SCOPE]: `Not found parent scope. use the global scope.`
};
function getWarnMessage2(code3, ...args) {
  return format(warnMessages2[code3], ...args);
}
var code2 = CompileErrorCodes.__EXTEND_POINT__;
var inc2 = () => ++code2;
var I18nErrorCodes = {
  // composer module errors
  UNEXPECTED_RETURN_TYPE: code2,
  // legacy module errors
  INVALID_ARGUMENT: inc2(),
  // i18n module errors
  MUST_BE_CALL_SETUP_TOP: inc2(),
  NOT_INSLALLED: inc2(),
  NOT_AVAILABLE_IN_LEGACY_MODE: inc2(),
  // directive module errors
  REQUIRED_VALUE: inc2(),
  INVALID_VALUE: inc2(),
  // vue-devtools errors
  CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: inc2(),
  NOT_INSLALLED_WITH_PROVIDE: inc2(),
  // unexpected error
  UNEXPECTED_ERROR: inc2(),
  // not compatible legacy vue-i18n constructor
  NOT_COMPATIBLE_LEGACY_VUE_I18N: inc2(),
  // bridge support vue 2.x only
  BRIDGE_SUPPORT_VUE_2_ONLY: inc2(),
  // need to define `i18n` option in `allowComposition: true` and `useScope: 'local' at `useI18n``
  MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: inc2(),
  // Not available Compostion API in Legacy API mode. Please make sure that the legacy API mode is working properly
  NOT_AVAILABLE_COMPOSITION_IN_LEGACY: inc2(),
  // for enhancement
  __EXTEND_POINT__: inc2()
  // 29
};
function createI18nError(code3, ...args) {
  return createCompileError(code3, null, true ? { messages: errorMessages3, args } : void 0);
}
var errorMessages3 = {
  [I18nErrorCodes.UNEXPECTED_RETURN_TYPE]: "Unexpected return type in composer",
  [I18nErrorCodes.INVALID_ARGUMENT]: "Invalid argument",
  [I18nErrorCodes.MUST_BE_CALL_SETUP_TOP]: "Must be called at the top of a `setup` function",
  [I18nErrorCodes.NOT_INSLALLED]: "Need to install with `app.use` function",
  [I18nErrorCodes.UNEXPECTED_ERROR]: "Unexpected error",
  [I18nErrorCodes.NOT_AVAILABLE_IN_LEGACY_MODE]: "Not available in legacy mode",
  [I18nErrorCodes.REQUIRED_VALUE]: `Required in value: {0}`,
  [I18nErrorCodes.INVALID_VALUE]: `Invalid value`,
  [I18nErrorCodes.CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN]: `Cannot setup vue-devtools plugin`,
  [I18nErrorCodes.NOT_INSLALLED_WITH_PROVIDE]: "Need to install with `provide` function",
  [I18nErrorCodes.NOT_COMPATIBLE_LEGACY_VUE_I18N]: "Not compatible legacy VueI18n.",
  [I18nErrorCodes.BRIDGE_SUPPORT_VUE_2_ONLY]: "vue-i18n-bridge support Vue 2.x only",
  [I18nErrorCodes.MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION]: "Must define ‘i18n’ option or custom block in Composition API with using local scope in Legacy API mode",
  [I18nErrorCodes.NOT_AVAILABLE_COMPOSITION_IN_LEGACY]: "Not available Compostion API in Legacy API mode. Please make sure that the legacy API mode is working properly"
};
var TransrateVNodeSymbol = makeSymbol("__transrateVNode");
var DatetimePartsSymbol = makeSymbol("__datetimeParts");
var NumberPartsSymbol = makeSymbol("__numberParts");
var EnableEmitter = makeSymbol("__enableEmitter");
var DisableEmitter = makeSymbol("__disableEmitter");
var SetPluralRulesSymbol = makeSymbol("__setPluralRules");
makeSymbol("__intlifyMeta");
var InejctWithOption = makeSymbol("__injectWithOption");
function handleFlatJson(obj) {
  if (!isObject2(obj)) {
    return obj;
  }
  for (const key in obj) {
    if (!hasOwn2(obj, key)) {
      continue;
    }
    if (!key.includes(".")) {
      if (isObject2(obj[key])) {
        handleFlatJson(obj[key]);
      }
    } else {
      const subKeys = key.split(".");
      const lastIndex = subKeys.length - 1;
      let currentObj = obj;
      for (let i6 = 0; i6 < lastIndex; i6++) {
        if (!(subKeys[i6] in currentObj)) {
          currentObj[subKeys[i6]] = {};
        }
        currentObj = currentObj[subKeys[i6]];
      }
      currentObj[subKeys[lastIndex]] = obj[key];
      delete obj[key];
      if (isObject2(currentObj[subKeys[lastIndex]])) {
        handleFlatJson(currentObj[subKeys[lastIndex]]);
      }
    }
  }
  return obj;
}
function getLocaleMessages(locale, options) {
  const { messages, __i18n, messageResolver, flatJson } = options;
  const ret = isPlainObject(messages) ? messages : isArray2(__i18n) ? {} : { [locale]: {} };
  if (isArray2(__i18n)) {
    __i18n.forEach((custom) => {
      if ("locale" in custom && "resource" in custom) {
        const { locale: locale2, resource } = custom;
        if (locale2) {
          ret[locale2] = ret[locale2] || {};
          deepCopy(resource, ret[locale2]);
        } else {
          deepCopy(resource, ret);
        }
      } else {
        isString3(custom) && deepCopy(JSON.parse(custom), ret);
      }
    });
  }
  if (messageResolver == null && flatJson) {
    for (const key in ret) {
      if (hasOwn2(ret, key)) {
        handleFlatJson(ret[key]);
      }
    }
  }
  return ret;
}
var isNotObjectOrIsArray = (val) => !isObject2(val) || isArray2(val);
function deepCopy(src, des) {
  if (isNotObjectOrIsArray(src) || isNotObjectOrIsArray(des)) {
    throw createI18nError(I18nErrorCodes.INVALID_VALUE);
  }
  for (const key in src) {
    if (hasOwn2(src, key)) {
      if (isNotObjectOrIsArray(src[key]) || isNotObjectOrIsArray(des[key])) {
        des[key] = src[key];
      } else {
        deepCopy(src[key], des[key]);
      }
    }
  }
}
function getComponentOptions(instance) {
  return instance.type;
}
function adjustI18nResources(global2, options, componentOptions) {
  let messages = isObject2(options.messages) ? options.messages : {};
  if ("__i18nGlobal" in componentOptions) {
    messages = getLocaleMessages(global2.locale.value, {
      messages,
      __i18n: componentOptions.__i18nGlobal
    });
  }
  const locales = Object.keys(messages);
  if (locales.length) {
    locales.forEach((locale) => {
      global2.mergeLocaleMessage(locale, messages[locale]);
    });
  }
  {
    if (isObject2(options.datetimeFormats)) {
      const locales2 = Object.keys(options.datetimeFormats);
      if (locales2.length) {
        locales2.forEach((locale) => {
          global2.mergeDateTimeFormat(locale, options.datetimeFormats[locale]);
        });
      }
    }
    if (isObject2(options.numberFormats)) {
      const locales2 = Object.keys(options.numberFormats);
      if (locales2.length) {
        locales2.forEach((locale) => {
          global2.mergeNumberFormat(locale, options.numberFormats[locale]);
        });
      }
    }
  }
}
function createTextNode(key) {
  return createVNode(Text, null, key, 0);
}
var DEVTOOLS_META = "__INTLIFY_META__";
var composerID = 0;
function defineCoreMissingHandler(missing) {
  return (ctx, locale, key, type) => {
    return missing(locale, key, getCurrentInstance() || void 0, type);
  };
}
var getMetaInfo = () => {
  const instance = getCurrentInstance();
  let meta = null;
  return instance && (meta = getComponentOptions(instance)[DEVTOOLS_META]) ? { [DEVTOOLS_META]: meta } : null;
};
function createComposer(options = {}, VueI18nLegacy) {
  const { __root } = options;
  const _isGlobal = __root === void 0;
  let _inheritLocale = isBoolean(options.inheritLocale) ? options.inheritLocale : true;
  const _locale = ref(
    // prettier-ignore
    __root && _inheritLocale ? __root.locale.value : isString3(options.locale) ? options.locale : DEFAULT_LOCALE
  );
  const _fallbackLocale = ref(
    // prettier-ignore
    __root && _inheritLocale ? __root.fallbackLocale.value : isString3(options.fallbackLocale) || isArray2(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : _locale.value
  );
  const _messages = ref(getLocaleMessages(_locale.value, options));
  const _datetimeFormats = ref(isPlainObject(options.datetimeFormats) ? options.datetimeFormats : { [_locale.value]: {} });
  const _numberFormats = ref(isPlainObject(options.numberFormats) ? options.numberFormats : { [_locale.value]: {} });
  let _missingWarn = __root ? __root.missingWarn : isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;
  let _fallbackWarn = __root ? __root.fallbackWarn : isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;
  let _fallbackRoot = __root ? __root.fallbackRoot : isBoolean(options.fallbackRoot) ? options.fallbackRoot : true;
  let _fallbackFormat = !!options.fallbackFormat;
  let _missing = isFunction3(options.missing) ? options.missing : null;
  let _runtimeMissing = isFunction3(options.missing) ? defineCoreMissingHandler(options.missing) : null;
  let _postTranslation = isFunction3(options.postTranslation) ? options.postTranslation : null;
  let _warnHtmlMessage = __root ? __root.warnHtmlMessage : isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;
  let _escapeParameter = !!options.escapeParameter;
  const _modifiers = __root ? __root.modifiers : isPlainObject(options.modifiers) ? options.modifiers : {};
  let _pluralRules = options.pluralRules || __root && __root.pluralRules;
  let _context;
  const getCoreContext = () => {
    _isGlobal && setFallbackContext(null);
    const ctxOptions = {
      version: VERSION2,
      locale: _locale.value,
      fallbackLocale: _fallbackLocale.value,
      messages: _messages.value,
      modifiers: _modifiers,
      pluralRules: _pluralRules,
      missing: _runtimeMissing === null ? void 0 : _runtimeMissing,
      missingWarn: _missingWarn,
      fallbackWarn: _fallbackWarn,
      fallbackFormat: _fallbackFormat,
      unresolving: true,
      postTranslation: _postTranslation === null ? void 0 : _postTranslation,
      warnHtmlMessage: _warnHtmlMessage,
      escapeParameter: _escapeParameter,
      messageResolver: options.messageResolver,
      __meta: { framework: "vue" }
    };
    {
      ctxOptions.datetimeFormats = _datetimeFormats.value;
      ctxOptions.numberFormats = _numberFormats.value;
      ctxOptions.__datetimeFormatters = isPlainObject(_context) ? _context.__datetimeFormatters : void 0;
      ctxOptions.__numberFormatters = isPlainObject(_context) ? _context.__numberFormatters : void 0;
    }
    if (true) {
      ctxOptions.__v_emitter = isPlainObject(_context) ? _context.__v_emitter : void 0;
    }
    const ctx = createCoreContext(ctxOptions);
    _isGlobal && setFallbackContext(ctx);
    return ctx;
  };
  _context = getCoreContext();
  updateFallbackLocale(_context, _locale.value, _fallbackLocale.value);
  function trackReactivityValues() {
    return [
      _locale.value,
      _fallbackLocale.value,
      _messages.value,
      _datetimeFormats.value,
      _numberFormats.value
    ];
  }
  const locale = computed({
    get: () => _locale.value,
    set: (val) => {
      _locale.value = val;
      _context.locale = _locale.value;
    }
  });
  const fallbackLocale = computed({
    get: () => _fallbackLocale.value,
    set: (val) => {
      _fallbackLocale.value = val;
      _context.fallbackLocale = _fallbackLocale.value;
      updateFallbackLocale(_context, _locale.value, val);
    }
  });
  const messages = computed(() => _messages.value);
  const datetimeFormats = computed(() => _datetimeFormats.value);
  const numberFormats = computed(() => _numberFormats.value);
  function getPostTranslationHandler() {
    return isFunction3(_postTranslation) ? _postTranslation : null;
  }
  function setPostTranslationHandler(handler) {
    _postTranslation = handler;
    _context.postTranslation = handler;
  }
  function getMissingHandler() {
    return _missing;
  }
  function setMissingHandler(handler) {
    if (handler !== null) {
      _runtimeMissing = defineCoreMissingHandler(handler);
    }
    _missing = handler;
    _context.missing = _runtimeMissing;
  }
  function isResolvedTranslateMessage(type, arg) {
    return type !== "translate" || !arg.resolvedMessage;
  }
  const wrapWithDeps = (fn, argumentParser, warnType, fallbackSuccess, fallbackFail, successCondition) => {
    trackReactivityValues();
    let ret;
    if (true) {
      try {
        setAdditionalMeta(getMetaInfo());
        if (!_isGlobal) {
          _context.fallbackContext = __root ? getFallbackContext() : void 0;
        }
        ret = fn(_context);
      } finally {
        setAdditionalMeta(null);
        if (!_isGlobal) {
          _context.fallbackContext = void 0;
        }
      }
    } else {
      ret = fn(_context);
    }
    if (isNumber2(ret) && ret === NOT_REOSLVED) {
      const [key, arg2] = argumentParser();
      if (__root && isString3(key) && isResolvedTranslateMessage(warnType, arg2)) {
        if (_fallbackRoot && (isTranslateFallbackWarn(_fallbackWarn, key) || isTranslateMissingWarn(_missingWarn, key))) {
          warn(getWarnMessage2(I18nWarnCodes.FALLBACK_TO_ROOT, {
            key,
            type: warnType
          }));
        }
        if (true) {
          const { __v_emitter: emitter } = _context;
          if (emitter && _fallbackRoot) {
            emitter.emit("fallback", {
              type: warnType,
              key,
              to: "global",
              groupId: `${warnType}:${key}`
            });
          }
        }
      }
      return __root && _fallbackRoot ? fallbackSuccess(__root) : fallbackFail(key);
    } else if (successCondition(ret)) {
      return ret;
    } else {
      throw createI18nError(I18nErrorCodes.UNEXPECTED_RETURN_TYPE);
    }
  };
  function t12(...args) {
    return wrapWithDeps((context) => Reflect.apply(translate, null, [context, ...args]), () => parseTranslateArgs(...args), "translate", (root) => Reflect.apply(root.t, root, [...args]), (key) => key, (val) => isString3(val));
  }
  function rt(...args) {
    const [arg1, arg2, arg3] = args;
    if (arg3 && !isObject2(arg3)) {
      throw createI18nError(I18nErrorCodes.INVALID_ARGUMENT);
    }
    return t12(...[arg1, arg2, assign({ resolvedMessage: true }, arg3 || {})]);
  }
  function d4(...args) {
    return wrapWithDeps((context) => Reflect.apply(datetime, null, [context, ...args]), () => parseDateTimeArgs(...args), "datetime format", (root) => Reflect.apply(root.d, root, [...args]), () => MISSING_RESOLVE_VALUE, (val) => isString3(val));
  }
  function n3(...args) {
    return wrapWithDeps((context) => Reflect.apply(number, null, [context, ...args]), () => parseNumberArgs(...args), "number format", (root) => Reflect.apply(root.n, root, [...args]), () => MISSING_RESOLVE_VALUE, (val) => isString3(val));
  }
  function normalize(values) {
    return values.map((val) => isString3(val) || isNumber2(val) || isBoolean(val) ? createTextNode(String(val)) : val);
  }
  const interpolate = (val) => val;
  const processor = {
    normalize,
    interpolate,
    type: "vnode"
  };
  function transrateVNode(...args) {
    return wrapWithDeps(
      (context) => {
        let ret;
        const _context2 = context;
        try {
          _context2.processor = processor;
          ret = Reflect.apply(translate, null, [_context2, ...args]);
        } finally {
          _context2.processor = null;
        }
        return ret;
      },
      () => parseTranslateArgs(...args),
      "translate",
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      (root) => root[TransrateVNodeSymbol](...args),
      (key) => [createTextNode(key)],
      (val) => isArray2(val)
    );
  }
  function numberParts(...args) {
    return wrapWithDeps(
      (context) => Reflect.apply(number, null, [context, ...args]),
      () => parseNumberArgs(...args),
      "number format",
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      (root) => root[NumberPartsSymbol](...args),
      () => [],
      (val) => isString3(val) || isArray2(val)
    );
  }
  function datetimeParts(...args) {
    return wrapWithDeps(
      (context) => Reflect.apply(datetime, null, [context, ...args]),
      () => parseDateTimeArgs(...args),
      "datetime format",
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      (root) => root[DatetimePartsSymbol](...args),
      () => [],
      (val) => isString3(val) || isArray2(val)
    );
  }
  function setPluralRules(rules) {
    _pluralRules = rules;
    _context.pluralRules = _pluralRules;
  }
  function te2(key, locale2) {
    const targetLocale = isString3(locale2) ? locale2 : _locale.value;
    const message = getLocaleMessage(targetLocale);
    return _context.messageResolver(message, key) !== null;
  }
  function resolveMessages(key) {
    let messages2 = null;
    const locales = fallbackWithLocaleChain(_context, _fallbackLocale.value, _locale.value);
    for (let i6 = 0; i6 < locales.length; i6++) {
      const targetLocaleMessages = _messages.value[locales[i6]] || {};
      const messageValue = _context.messageResolver(targetLocaleMessages, key);
      if (messageValue != null) {
        messages2 = messageValue;
        break;
      }
    }
    return messages2;
  }
  function tm(key) {
    const messages2 = resolveMessages(key);
    return messages2 != null ? messages2 : __root ? __root.tm(key) || {} : {};
  }
  function getLocaleMessage(locale2) {
    return _messages.value[locale2] || {};
  }
  function setLocaleMessage(locale2, message) {
    _messages.value[locale2] = message;
    _context.messages = _messages.value;
  }
  function mergeLocaleMessage(locale2, message) {
    _messages.value[locale2] = _messages.value[locale2] || {};
    deepCopy(message, _messages.value[locale2]);
    _context.messages = _messages.value;
  }
  function getDateTimeFormat(locale2) {
    return _datetimeFormats.value[locale2] || {};
  }
  function setDateTimeFormat(locale2, format2) {
    _datetimeFormats.value[locale2] = format2;
    _context.datetimeFormats = _datetimeFormats.value;
    clearDateTimeFormat(_context, locale2, format2);
  }
  function mergeDateTimeFormat(locale2, format2) {
    _datetimeFormats.value[locale2] = assign(_datetimeFormats.value[locale2] || {}, format2);
    _context.datetimeFormats = _datetimeFormats.value;
    clearDateTimeFormat(_context, locale2, format2);
  }
  function getNumberFormat(locale2) {
    return _numberFormats.value[locale2] || {};
  }
  function setNumberFormat(locale2, format2) {
    _numberFormats.value[locale2] = format2;
    _context.numberFormats = _numberFormats.value;
    clearNumberFormat(_context, locale2, format2);
  }
  function mergeNumberFormat(locale2, format2) {
    _numberFormats.value[locale2] = assign(_numberFormats.value[locale2] || {}, format2);
    _context.numberFormats = _numberFormats.value;
    clearNumberFormat(_context, locale2, format2);
  }
  composerID++;
  if (__root && inBrowser) {
    watch(__root.locale, (val) => {
      if (_inheritLocale) {
        _locale.value = val;
        _context.locale = val;
        updateFallbackLocale(_context, _locale.value, _fallbackLocale.value);
      }
    });
    watch(__root.fallbackLocale, (val) => {
      if (_inheritLocale) {
        _fallbackLocale.value = val;
        _context.fallbackLocale = val;
        updateFallbackLocale(_context, _locale.value, _fallbackLocale.value);
      }
    });
  }
  const composer = {
    id: composerID,
    locale,
    fallbackLocale,
    get inheritLocale() {
      return _inheritLocale;
    },
    set inheritLocale(val) {
      _inheritLocale = val;
      if (val && __root) {
        _locale.value = __root.locale.value;
        _fallbackLocale.value = __root.fallbackLocale.value;
        updateFallbackLocale(_context, _locale.value, _fallbackLocale.value);
      }
    },
    get availableLocales() {
      return Object.keys(_messages.value).sort();
    },
    messages,
    get modifiers() {
      return _modifiers;
    },
    get pluralRules() {
      return _pluralRules || {};
    },
    get isGlobal() {
      return _isGlobal;
    },
    get missingWarn() {
      return _missingWarn;
    },
    set missingWarn(val) {
      _missingWarn = val;
      _context.missingWarn = _missingWarn;
    },
    get fallbackWarn() {
      return _fallbackWarn;
    },
    set fallbackWarn(val) {
      _fallbackWarn = val;
      _context.fallbackWarn = _fallbackWarn;
    },
    get fallbackRoot() {
      return _fallbackRoot;
    },
    set fallbackRoot(val) {
      _fallbackRoot = val;
    },
    get fallbackFormat() {
      return _fallbackFormat;
    },
    set fallbackFormat(val) {
      _fallbackFormat = val;
      _context.fallbackFormat = _fallbackFormat;
    },
    get warnHtmlMessage() {
      return _warnHtmlMessage;
    },
    set warnHtmlMessage(val) {
      _warnHtmlMessage = val;
      _context.warnHtmlMessage = val;
    },
    get escapeParameter() {
      return _escapeParameter;
    },
    set escapeParameter(val) {
      _escapeParameter = val;
      _context.escapeParameter = val;
    },
    t: t12,
    getLocaleMessage,
    setLocaleMessage,
    mergeLocaleMessage,
    getPostTranslationHandler,
    setPostTranslationHandler,
    getMissingHandler,
    setMissingHandler,
    [SetPluralRulesSymbol]: setPluralRules
  };
  {
    composer.datetimeFormats = datetimeFormats;
    composer.numberFormats = numberFormats;
    composer.rt = rt;
    composer.te = te2;
    composer.tm = tm;
    composer.d = d4;
    composer.n = n3;
    composer.getDateTimeFormat = getDateTimeFormat;
    composer.setDateTimeFormat = setDateTimeFormat;
    composer.mergeDateTimeFormat = mergeDateTimeFormat;
    composer.getNumberFormat = getNumberFormat;
    composer.setNumberFormat = setNumberFormat;
    composer.mergeNumberFormat = mergeNumberFormat;
    composer[InejctWithOption] = options.__injectWithOption;
    composer[TransrateVNodeSymbol] = transrateVNode;
    composer[DatetimePartsSymbol] = datetimeParts;
    composer[NumberPartsSymbol] = numberParts;
  }
  if (true) {
    composer[EnableEmitter] = (emitter) => {
      _context.__v_emitter = emitter;
    };
    composer[DisableEmitter] = () => {
      _context.__v_emitter = void 0;
    };
  }
  return composer;
}
function convertComposerOptions(options) {
  const locale = isString3(options.locale) ? options.locale : DEFAULT_LOCALE;
  const fallbackLocale = isString3(options.fallbackLocale) || isArray2(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : locale;
  const missing = isFunction3(options.missing) ? options.missing : void 0;
  const missingWarn = isBoolean(options.silentTranslationWarn) || isRegExp(options.silentTranslationWarn) ? !options.silentTranslationWarn : true;
  const fallbackWarn = isBoolean(options.silentFallbackWarn) || isRegExp(options.silentFallbackWarn) ? !options.silentFallbackWarn : true;
  const fallbackRoot = isBoolean(options.fallbackRoot) ? options.fallbackRoot : true;
  const fallbackFormat = !!options.formatFallbackMessages;
  const modifiers = isPlainObject(options.modifiers) ? options.modifiers : {};
  const pluralizationRules = options.pluralizationRules;
  const postTranslation = isFunction3(options.postTranslation) ? options.postTranslation : void 0;
  const warnHtmlMessage = isString3(options.warnHtmlInMessage) ? options.warnHtmlInMessage !== "off" : true;
  const escapeParameter = !!options.escapeParameterHtml;
  const inheritLocale = isBoolean(options.sync) ? options.sync : true;
  if (options.formatter) {
    warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_FORMATTER));
  }
  if (options.preserveDirectiveContent) {
    warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_PRESERVE_DIRECTIVE));
  }
  let messages = options.messages;
  if (isPlainObject(options.sharedMessages)) {
    const sharedMessages = options.sharedMessages;
    const locales = Object.keys(sharedMessages);
    messages = locales.reduce((messages2, locale2) => {
      const message = messages2[locale2] || (messages2[locale2] = {});
      assign(message, sharedMessages[locale2]);
      return messages2;
    }, messages || {});
  }
  const { __i18n, __root, __injectWithOption } = options;
  const datetimeFormats = options.datetimeFormats;
  const numberFormats = options.numberFormats;
  const flatJson = options.flatJson;
  return {
    locale,
    fallbackLocale,
    messages,
    flatJson,
    datetimeFormats,
    numberFormats,
    missing,
    missingWarn,
    fallbackWarn,
    fallbackRoot,
    fallbackFormat,
    modifiers,
    pluralRules: pluralizationRules,
    postTranslation,
    warnHtmlMessage,
    escapeParameter,
    messageResolver: options.messageResolver,
    inheritLocale,
    __i18n,
    __root,
    __injectWithOption
  };
}
function createVueI18n(options = {}, VueI18nLegacy) {
  {
    const composer = createComposer(convertComposerOptions(options));
    const vueI18n = {
      // id
      id: composer.id,
      // locale
      get locale() {
        return composer.locale.value;
      },
      set locale(val) {
        composer.locale.value = val;
      },
      // fallbackLocale
      get fallbackLocale() {
        return composer.fallbackLocale.value;
      },
      set fallbackLocale(val) {
        composer.fallbackLocale.value = val;
      },
      // messages
      get messages() {
        return composer.messages.value;
      },
      // datetimeFormats
      get datetimeFormats() {
        return composer.datetimeFormats.value;
      },
      // numberFormats
      get numberFormats() {
        return composer.numberFormats.value;
      },
      // availableLocales
      get availableLocales() {
        return composer.availableLocales;
      },
      // formatter
      get formatter() {
        warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_FORMATTER));
        return {
          interpolate() {
            return [];
          }
        };
      },
      set formatter(val) {
        warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_FORMATTER));
      },
      // missing
      get missing() {
        return composer.getMissingHandler();
      },
      set missing(handler) {
        composer.setMissingHandler(handler);
      },
      // silentTranslationWarn
      get silentTranslationWarn() {
        return isBoolean(composer.missingWarn) ? !composer.missingWarn : composer.missingWarn;
      },
      set silentTranslationWarn(val) {
        composer.missingWarn = isBoolean(val) ? !val : val;
      },
      // silentFallbackWarn
      get silentFallbackWarn() {
        return isBoolean(composer.fallbackWarn) ? !composer.fallbackWarn : composer.fallbackWarn;
      },
      set silentFallbackWarn(val) {
        composer.fallbackWarn = isBoolean(val) ? !val : val;
      },
      // modifiers
      get modifiers() {
        return composer.modifiers;
      },
      // formatFallbackMessages
      get formatFallbackMessages() {
        return composer.fallbackFormat;
      },
      set formatFallbackMessages(val) {
        composer.fallbackFormat = val;
      },
      // postTranslation
      get postTranslation() {
        return composer.getPostTranslationHandler();
      },
      set postTranslation(handler) {
        composer.setPostTranslationHandler(handler);
      },
      // sync
      get sync() {
        return composer.inheritLocale;
      },
      set sync(val) {
        composer.inheritLocale = val;
      },
      // warnInHtmlMessage
      get warnHtmlInMessage() {
        return composer.warnHtmlMessage ? "warn" : "off";
      },
      set warnHtmlInMessage(val) {
        composer.warnHtmlMessage = val !== "off";
      },
      // escapeParameterHtml
      get escapeParameterHtml() {
        return composer.escapeParameter;
      },
      set escapeParameterHtml(val) {
        composer.escapeParameter = val;
      },
      // preserveDirectiveContent
      get preserveDirectiveContent() {
        warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_PRESERVE_DIRECTIVE));
        return true;
      },
      set preserveDirectiveContent(val) {
        warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_PRESERVE_DIRECTIVE));
      },
      // pluralizationRules
      get pluralizationRules() {
        return composer.pluralRules || {};
      },
      // for internal
      __composer: composer,
      // t
      t(...args) {
        const [arg1, arg2, arg3] = args;
        const options2 = {};
        let list = null;
        let named = null;
        if (!isString3(arg1)) {
          throw createI18nError(I18nErrorCodes.INVALID_ARGUMENT);
        }
        const key = arg1;
        if (isString3(arg2)) {
          options2.locale = arg2;
        } else if (isArray2(arg2)) {
          list = arg2;
        } else if (isPlainObject(arg2)) {
          named = arg2;
        }
        if (isArray2(arg3)) {
          list = arg3;
        } else if (isPlainObject(arg3)) {
          named = arg3;
        }
        return Reflect.apply(composer.t, composer, [
          key,
          list || named || {},
          options2
        ]);
      },
      rt(...args) {
        return Reflect.apply(composer.rt, composer, [...args]);
      },
      // tc
      tc(...args) {
        const [arg1, arg2, arg3] = args;
        const options2 = { plural: 1 };
        let list = null;
        let named = null;
        if (!isString3(arg1)) {
          throw createI18nError(I18nErrorCodes.INVALID_ARGUMENT);
        }
        const key = arg1;
        if (isString3(arg2)) {
          options2.locale = arg2;
        } else if (isNumber2(arg2)) {
          options2.plural = arg2;
        } else if (isArray2(arg2)) {
          list = arg2;
        } else if (isPlainObject(arg2)) {
          named = arg2;
        }
        if (isString3(arg3)) {
          options2.locale = arg3;
        } else if (isArray2(arg3)) {
          list = arg3;
        } else if (isPlainObject(arg3)) {
          named = arg3;
        }
        return Reflect.apply(composer.t, composer, [
          key,
          list || named || {},
          options2
        ]);
      },
      // te
      te(key, locale) {
        return composer.te(key, locale);
      },
      // tm
      tm(key) {
        return composer.tm(key);
      },
      // getLocaleMessage
      getLocaleMessage(locale) {
        return composer.getLocaleMessage(locale);
      },
      // setLocaleMessage
      setLocaleMessage(locale, message) {
        composer.setLocaleMessage(locale, message);
      },
      // mergeLocaleMessage
      mergeLocaleMessage(locale, message) {
        composer.mergeLocaleMessage(locale, message);
      },
      // d
      d(...args) {
        return Reflect.apply(composer.d, composer, [...args]);
      },
      // getDateTimeFormat
      getDateTimeFormat(locale) {
        return composer.getDateTimeFormat(locale);
      },
      // setDateTimeFormat
      setDateTimeFormat(locale, format2) {
        composer.setDateTimeFormat(locale, format2);
      },
      // mergeDateTimeFormat
      mergeDateTimeFormat(locale, format2) {
        composer.mergeDateTimeFormat(locale, format2);
      },
      // n
      n(...args) {
        return Reflect.apply(composer.n, composer, [...args]);
      },
      // getNumberFormat
      getNumberFormat(locale) {
        return composer.getNumberFormat(locale);
      },
      // setNumberFormat
      setNumberFormat(locale, format2) {
        composer.setNumberFormat(locale, format2);
      },
      // mergeNumberFormat
      mergeNumberFormat(locale, format2) {
        composer.mergeNumberFormat(locale, format2);
      },
      // getChoiceIndex
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      getChoiceIndex(choice, choicesLength) {
        warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_GET_CHOICE_INDEX));
        return -1;
      },
      // for internal
      __onComponentInstanceCreated(target) {
        const { componentInstanceCreatedListener } = options;
        if (componentInstanceCreatedListener) {
          componentInstanceCreatedListener(target, vueI18n);
        }
      }
    };
    if (true) {
      vueI18n.__enableEmitter = (emitter) => {
        const __composer = composer;
        __composer[EnableEmitter] && __composer[EnableEmitter](emitter);
      };
      vueI18n.__disableEmitter = () => {
        const __composer = composer;
        __composer[DisableEmitter] && __composer[DisableEmitter]();
      };
    }
    return vueI18n;
  }
}
var baseFormatProps = {
  tag: {
    type: [String, Object]
  },
  locale: {
    type: String
  },
  scope: {
    type: String,
    // NOTE: avoid https://github.com/microsoft/rushstack/issues/1050
    validator: (val) => val === "parent" || val === "global",
    default: "parent"
    /* ComponetI18nScope */
  },
  i18n: {
    type: Object
  }
};
function getInterpolateArg({ slots }, keys2) {
  if (keys2.length === 1 && keys2[0] === "default") {
    const ret = slots.default ? slots.default() : [];
    return ret.reduce((slot, current) => {
      return slot = [
        ...slot,
        ...isArray2(current.children) ? current.children : [current]
      ];
    }, []);
  } else {
    return keys2.reduce((arg, key) => {
      const slot = slots[key];
      if (slot) {
        arg[key] = slot();
      }
      return arg;
    }, {});
  }
}
function getFragmentableTag(tag) {
  return Fragment;
}
var Translation = (
  /* defineComponent */
  {
    /* eslint-disable */
    name: "i18n-t",
    props: assign({
      keypath: {
        type: String,
        required: true
      },
      plural: {
        type: [Number, String],
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        validator: (val) => isNumber2(val) || !isNaN(val)
      }
    }, baseFormatProps),
    /* eslint-enable */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    setup(props, context) {
      const { slots, attrs } = context;
      const i18n = props.i18n || useI18n({
        useScope: props.scope,
        __useComponent: true
      });
      return () => {
        const keys2 = Object.keys(slots).filter((key) => key !== "_");
        const options = {};
        if (props.locale) {
          options.locale = props.locale;
        }
        if (props.plural !== void 0) {
          options.plural = isString3(props.plural) ? +props.plural : props.plural;
        }
        const arg = getInterpolateArg(context, keys2);
        const children = i18n[TransrateVNodeSymbol](props.keypath, arg, options);
        const assignedAttrs = assign({}, attrs);
        const tag = isString3(props.tag) || isObject2(props.tag) ? props.tag : getFragmentableTag();
        return h(tag, assignedAttrs, children);
      };
    }
  }
);
function isVNode2(target) {
  return isArray2(target) && !isString3(target[0]);
}
function renderFormatter(props, context, slotKeys, partFormatter) {
  const { slots, attrs } = context;
  return () => {
    const options = { part: true };
    let overrides = {};
    if (props.locale) {
      options.locale = props.locale;
    }
    if (isString3(props.format)) {
      options.key = props.format;
    } else if (isObject2(props.format)) {
      if (isString3(props.format.key)) {
        options.key = props.format.key;
      }
      overrides = Object.keys(props.format).reduce((options2, prop) => {
        return slotKeys.includes(prop) ? assign({}, options2, { [prop]: props.format[prop] }) : options2;
      }, {});
    }
    const parts = partFormatter(...[props.value, options, overrides]);
    let children = [options.key];
    if (isArray2(parts)) {
      children = parts.map((part, index) => {
        const slot = slots[part.type];
        const node = slot ? slot({ [part.type]: part.value, index, parts }) : [part.value];
        if (isVNode2(node)) {
          node[0].key = `${part.type}-${index}`;
        }
        return node;
      });
    } else if (isString3(parts)) {
      children = [parts];
    }
    const assignedAttrs = assign({}, attrs);
    const tag = isString3(props.tag) || isObject2(props.tag) ? props.tag : getFragmentableTag();
    return h(tag, assignedAttrs, children);
  };
}
var NumberFormat = (
  /* defineComponent */
  {
    /* eslint-disable */
    name: "i18n-n",
    props: assign({
      value: {
        type: Number,
        required: true
      },
      format: {
        type: [String, Object]
      }
    }, baseFormatProps),
    /* eslint-enable */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    setup(props, context) {
      const i18n = props.i18n || useI18n({ useScope: "parent", __useComponent: true });
      return renderFormatter(props, context, NUMBER_FORMAT_OPTIONS_KEYS, (...args) => (
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        i18n[NumberPartsSymbol](...args)
      ));
    }
  }
);
var DatetimeFormat = (
  /*defineComponent */
  {
    /* eslint-disable */
    name: "i18n-d",
    props: assign({
      value: {
        type: [Number, Date],
        required: true
      },
      format: {
        type: [String, Object]
      }
    }, baseFormatProps),
    /* eslint-enable */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    setup(props, context) {
      const i18n = props.i18n || useI18n({ useScope: "parent", __useComponent: true });
      return renderFormatter(props, context, DATETIME_FORMAT_OPTIONS_KEYS, (...args) => (
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        i18n[DatetimePartsSymbol](...args)
      ));
    }
  }
);
function getComposer$2(i18n, instance) {
  const i18nInternal = i18n;
  if (i18n.mode === "composition") {
    return i18nInternal.__getInstance(instance) || i18n.global;
  } else {
    const vueI18n = i18nInternal.__getInstance(instance);
    return vueI18n != null ? vueI18n.__composer : i18n.global.__composer;
  }
}
function vTDirective(i18n) {
  const _process = (binding) => {
    const { instance, modifiers, value } = binding;
    if (!instance || !instance.$) {
      throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
    }
    const composer = getComposer$2(i18n, instance.$);
    if (modifiers.preserve) {
      warn(getWarnMessage2(I18nWarnCodes.NOT_SUPPORTED_PRESERVE));
    }
    const parsedValue = parseValue(value);
    return [
      Reflect.apply(composer.t, composer, [...makeParams(parsedValue)]),
      composer
    ];
  };
  const register = (el, binding) => {
    const [textContent, composer] = _process(binding);
    if (inBrowser && i18n.global === composer) {
      el.__i18nWatcher = watch(composer.locale, () => {
        binding.instance && binding.instance.$forceUpdate();
      });
    }
    el.__composer = composer;
    el.textContent = textContent;
  };
  const unregister = (el) => {
    if (inBrowser && el.__i18nWatcher) {
      el.__i18nWatcher();
      el.__i18nWatcher = void 0;
      delete el.__i18nWatcher;
    }
    if (el.__composer) {
      el.__composer = void 0;
      delete el.__composer;
    }
  };
  const update = (el, { value }) => {
    if (el.__composer) {
      const composer = el.__composer;
      const parsedValue = parseValue(value);
      el.textContent = Reflect.apply(composer.t, composer, [
        ...makeParams(parsedValue)
      ]);
    }
  };
  const getSSRProps = (binding) => {
    const [textContent] = _process(binding);
    return { textContent };
  };
  return {
    created: register,
    unmounted: unregister,
    beforeUpdate: update,
    getSSRProps
  };
}
function parseValue(value) {
  if (isString3(value)) {
    return { path: value };
  } else if (isPlainObject(value)) {
    if (!("path" in value)) {
      throw createI18nError(I18nErrorCodes.REQUIRED_VALUE, "path");
    }
    return value;
  } else {
    throw createI18nError(I18nErrorCodes.INVALID_VALUE);
  }
}
function makeParams(value) {
  const { path, locale, args, choice, plural } = value;
  const options = {};
  const named = args || {};
  if (isString3(locale)) {
    options.locale = locale;
  }
  if (isNumber2(choice)) {
    options.plural = choice;
  }
  if (isNumber2(plural)) {
    options.plural = plural;
  }
  return [path, named, options];
}
function apply(app, i18n, ...options) {
  const pluginOptions = isPlainObject(options[0]) ? options[0] : {};
  const useI18nComponentName = !!pluginOptions.useI18nComponentName;
  const globalInstall = isBoolean(pluginOptions.globalInstall) ? pluginOptions.globalInstall : true;
  if (globalInstall && useI18nComponentName) {
    warn(getWarnMessage2(I18nWarnCodes.COMPONENT_NAME_LEGACY_COMPATIBLE, {
      name: Translation.name
    }));
  }
  if (globalInstall) {
    app.component(!useI18nComponentName ? Translation.name : "i18n", Translation);
    app.component(NumberFormat.name, NumberFormat);
    app.component(DatetimeFormat.name, DatetimeFormat);
  }
  {
    app.directive("t", vTDirective(i18n));
  }
}
var VUE_I18N_COMPONENT_TYPES = "vue-i18n: composer properties";
var devtoolsApi;
async function enableDevTools(app, i18n) {
  return new Promise((resolve, reject) => {
    try {
      setupDevtoolsPlugin({
        id: "vue-devtools-plugin-vue-i18n",
        label: VueDevToolsLabels[
          "vue-devtools-plugin-vue-i18n"
          /* PLUGIN */
        ],
        packageName: "vue-i18n",
        homepage: "https://vue-i18n.intlify.dev",
        logo: "https://vue-i18n.intlify.dev/vue-i18n-devtools-logo.png",
        componentStateTypes: [VUE_I18N_COMPONENT_TYPES],
        app
        // eslint-disable-line @typescript-eslint/no-explicit-any
      }, (api) => {
        devtoolsApi = api;
        api.on.visitComponentTree(({ componentInstance, treeNode }) => {
          updateComponentTreeTags(componentInstance, treeNode, i18n);
        });
        api.on.inspectComponent(({ componentInstance, instanceData }) => {
          if (componentInstance.vnode.el && componentInstance.vnode.el.__VUE_I18N__ && instanceData) {
            if (i18n.mode === "legacy") {
              if (componentInstance.vnode.el.__VUE_I18N__ !== i18n.global.__composer) {
                inspectComposer(instanceData, componentInstance.vnode.el.__VUE_I18N__);
              }
            } else {
              inspectComposer(instanceData, componentInstance.vnode.el.__VUE_I18N__);
            }
          }
        });
        api.addInspector({
          id: "vue-i18n-resource-inspector",
          label: VueDevToolsLabels[
            "vue-i18n-resource-inspector"
            /* CUSTOM_INSPECTOR */
          ],
          icon: "language",
          treeFilterPlaceholder: VueDevToolsPlaceholders[
            "vue-i18n-resource-inspector"
            /* CUSTOM_INSPECTOR */
          ]
        });
        api.on.getInspectorTree((payload) => {
          if (payload.app === app && payload.inspectorId === "vue-i18n-resource-inspector") {
            registerScope(payload, i18n);
          }
        });
        const roots = /* @__PURE__ */ new Map();
        api.on.getInspectorState(async (payload) => {
          if (payload.app === app && payload.inspectorId === "vue-i18n-resource-inspector") {
            api.unhighlightElement();
            inspectScope(payload, i18n);
            if (payload.nodeId === "global") {
              if (!roots.has(payload.app)) {
                const [root] = await api.getComponentInstances(payload.app);
                roots.set(payload.app, root);
              }
              api.highlightElement(roots.get(payload.app));
            } else {
              const instance = getComponentInstance(payload.nodeId, i18n);
              instance && api.highlightElement(instance);
            }
          }
        });
        api.on.editInspectorState((payload) => {
          if (payload.app === app && payload.inspectorId === "vue-i18n-resource-inspector") {
            editScope(payload, i18n);
          }
        });
        api.addTimelineLayer({
          id: "vue-i18n-timeline",
          label: VueDevToolsLabels[
            "vue-i18n-timeline"
            /* TIMELINE */
          ],
          color: VueDevToolsTimelineColors[
            "vue-i18n-timeline"
            /* TIMELINE */
          ]
        });
        resolve(true);
      });
    } catch (e14) {
      console.error(e14);
      reject(false);
    }
  });
}
function getI18nScopeLable(instance) {
  return instance.type.name || instance.type.displayName || instance.type.__file || "Anonymous";
}
function updateComponentTreeTags(instance, treeNode, i18n) {
  const global2 = i18n.mode === "composition" ? i18n.global : i18n.global.__composer;
  if (instance && instance.vnode.el && instance.vnode.el.__VUE_I18N__) {
    if (instance.vnode.el.__VUE_I18N__ !== global2) {
      const tag = {
        label: `i18n (${getI18nScopeLable(instance)} Scope)`,
        textColor: 0,
        backgroundColor: 16764185
      };
      treeNode.tags.push(tag);
    }
  }
}
function inspectComposer(instanceData, composer) {
  const type = VUE_I18N_COMPONENT_TYPES;
  instanceData.state.push({
    type,
    key: "locale",
    editable: true,
    value: composer.locale.value
  });
  instanceData.state.push({
    type,
    key: "availableLocales",
    editable: false,
    value: composer.availableLocales
  });
  instanceData.state.push({
    type,
    key: "fallbackLocale",
    editable: true,
    value: composer.fallbackLocale.value
  });
  instanceData.state.push({
    type,
    key: "inheritLocale",
    editable: true,
    value: composer.inheritLocale
  });
  instanceData.state.push({
    type,
    key: "messages",
    editable: false,
    value: getLocaleMessageValue(composer.messages.value)
  });
  {
    instanceData.state.push({
      type,
      key: "datetimeFormats",
      editable: false,
      value: composer.datetimeFormats.value
    });
    instanceData.state.push({
      type,
      key: "numberFormats",
      editable: false,
      value: composer.numberFormats.value
    });
  }
}
function getLocaleMessageValue(messages) {
  const value = {};
  Object.keys(messages).forEach((key) => {
    const v6 = messages[key];
    if (isFunction3(v6) && "source" in v6) {
      value[key] = getMessageFunctionDetails(v6);
    } else if (isObject2(v6)) {
      value[key] = getLocaleMessageValue(v6);
    } else {
      value[key] = v6;
    }
  });
  return value;
}
var ESC = {
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "&": "&amp;"
};
function escape(s7) {
  return s7.replace(/[<>"&]/g, escapeChar);
}
function escapeChar(a18) {
  return ESC[a18] || a18;
}
function getMessageFunctionDetails(func) {
  const argString = func.source ? `("${escape(func.source)}")` : `(?)`;
  return {
    _custom: {
      type: "function",
      display: `<span>ƒ</span> ${argString}`
    }
  };
}
function registerScope(payload, i18n) {
  payload.rootNodes.push({
    id: "global",
    label: "Global Scope"
  });
  const global2 = i18n.mode === "composition" ? i18n.global : i18n.global.__composer;
  for (const [keyInstance, instance] of i18n.__instances) {
    const composer = i18n.mode === "composition" ? instance : instance.__composer;
    if (global2 === composer) {
      continue;
    }
    payload.rootNodes.push({
      id: composer.id.toString(),
      label: `${getI18nScopeLable(keyInstance)} Scope`
    });
  }
}
function getComponentInstance(nodeId, i18n) {
  let instance = null;
  if (nodeId !== "global") {
    for (const [component, composer] of i18n.__instances.entries()) {
      if (composer.id.toString() === nodeId) {
        instance = component;
        break;
      }
    }
  }
  return instance;
}
function getComposer$1(nodeId, i18n) {
  if (nodeId === "global") {
    return i18n.mode === "composition" ? i18n.global : i18n.global.__composer;
  } else {
    const instance = Array.from(i18n.__instances.values()).find((item) => item.id.toString() === nodeId);
    if (instance) {
      return i18n.mode === "composition" ? instance : instance.__composer;
    } else {
      return null;
    }
  }
}
function inspectScope(payload, i18n) {
  const composer = getComposer$1(payload.nodeId, i18n);
  if (composer) {
    payload.state = makeScopeInspectState(composer);
  }
  return null;
}
function makeScopeInspectState(composer) {
  const state = {};
  const localeType = "Locale related info";
  const localeStates = [
    {
      type: localeType,
      key: "locale",
      editable: true,
      value: composer.locale.value
    },
    {
      type: localeType,
      key: "fallbackLocale",
      editable: true,
      value: composer.fallbackLocale.value
    },
    {
      type: localeType,
      key: "availableLocales",
      editable: false,
      value: composer.availableLocales
    },
    {
      type: localeType,
      key: "inheritLocale",
      editable: true,
      value: composer.inheritLocale
    }
  ];
  state[localeType] = localeStates;
  const localeMessagesType = "Locale messages info";
  const localeMessagesStates = [
    {
      type: localeMessagesType,
      key: "messages",
      editable: false,
      value: getLocaleMessageValue(composer.messages.value)
    }
  ];
  state[localeMessagesType] = localeMessagesStates;
  {
    const datetimeFormatsType = "Datetime formats info";
    const datetimeFormatsStates = [
      {
        type: datetimeFormatsType,
        key: "datetimeFormats",
        editable: false,
        value: composer.datetimeFormats.value
      }
    ];
    state[datetimeFormatsType] = datetimeFormatsStates;
    const numberFormatsType = "Datetime formats info";
    const numberFormatsStates = [
      {
        type: numberFormatsType,
        key: "numberFormats",
        editable: false,
        value: composer.numberFormats.value
      }
    ];
    state[numberFormatsType] = numberFormatsStates;
  }
  return state;
}
function addTimelineEvent(event, payload) {
  if (devtoolsApi) {
    let groupId;
    if (payload && "groupId" in payload) {
      groupId = payload.groupId;
      delete payload.groupId;
    }
    devtoolsApi.addTimelineEvent({
      layerId: "vue-i18n-timeline",
      event: {
        title: event,
        groupId,
        time: Date.now(),
        meta: {},
        data: payload || {},
        logType: event === "compile-error" ? "error" : event === "fallback" || event === "missing" ? "warning" : "default"
      }
    });
  }
}
function editScope(payload, i18n) {
  const composer = getComposer$1(payload.nodeId, i18n);
  if (composer) {
    const [field] = payload.path;
    if (field === "locale" && isString3(payload.state.value)) {
      composer.locale.value = payload.state.value;
    } else if (field === "fallbackLocale" && (isString3(payload.state.value) || isArray2(payload.state.value) || isObject2(payload.state.value))) {
      composer.fallbackLocale.value = payload.state.value;
    } else if (field === "inheritLocale" && isBoolean(payload.state.value)) {
      composer.inheritLocale = payload.state.value;
    }
  }
}
function defineMixin(vuei18n, composer, i18n) {
  return {
    beforeCreate() {
      const instance = getCurrentInstance();
      if (!instance) {
        throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
      }
      const options = this.$options;
      if (options.i18n) {
        const optionsI18n = options.i18n;
        if (options.__i18n) {
          optionsI18n.__i18n = options.__i18n;
        }
        optionsI18n.__root = composer;
        if (this === this.$root) {
          this.$i18n = mergeToRoot(vuei18n, optionsI18n);
        } else {
          optionsI18n.__injectWithOption = true;
          this.$i18n = createVueI18n(optionsI18n);
        }
      } else if (options.__i18n) {
        if (this === this.$root) {
          this.$i18n = mergeToRoot(vuei18n, options);
        } else {
          this.$i18n = createVueI18n({
            __i18n: options.__i18n,
            __injectWithOption: true,
            __root: composer
          });
        }
      } else {
        this.$i18n = vuei18n;
      }
      if (options.__i18nGlobal) {
        adjustI18nResources(composer, options, options);
      }
      vuei18n.__onComponentInstanceCreated(this.$i18n);
      i18n.__setInstance(instance, this.$i18n);
      this.$t = (...args) => this.$i18n.t(...args);
      this.$rt = (...args) => this.$i18n.rt(...args);
      this.$tc = (...args) => this.$i18n.tc(...args);
      this.$te = (key, locale) => this.$i18n.te(key, locale);
      this.$d = (...args) => this.$i18n.d(...args);
      this.$n = (...args) => this.$i18n.n(...args);
      this.$tm = (key) => this.$i18n.tm(key);
    },
    mounted() {
      if (this.$el && this.$i18n) {
        this.$el.__VUE_I18N__ = this.$i18n.__composer;
        const emitter = this.__v_emitter = createEmitter();
        const _vueI18n = this.$i18n;
        _vueI18n.__enableEmitter && _vueI18n.__enableEmitter(emitter);
        emitter.on("*", addTimelineEvent);
      }
    },
    unmounted() {
      const instance = getCurrentInstance();
      if (!instance) {
        throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
      }
      if (this.$el && this.$el.__VUE_I18N__) {
        if (this.__v_emitter) {
          this.__v_emitter.off("*", addTimelineEvent);
          delete this.__v_emitter;
        }
        if (this.$i18n) {
          const _vueI18n = this.$i18n;
          _vueI18n.__disableEmitter && _vueI18n.__disableEmitter();
          delete this.$el.__VUE_I18N__;
        }
      }
      delete this.$t;
      delete this.$rt;
      delete this.$tc;
      delete this.$te;
      delete this.$d;
      delete this.$n;
      delete this.$tm;
      i18n.__deleteInstance(instance);
      delete this.$i18n;
    }
  };
}
function mergeToRoot(root, options) {
  root.locale = options.locale || root.locale;
  root.fallbackLocale = options.fallbackLocale || root.fallbackLocale;
  root.missing = options.missing || root.missing;
  root.silentTranslationWarn = options.silentTranslationWarn || root.silentFallbackWarn;
  root.silentFallbackWarn = options.silentFallbackWarn || root.silentFallbackWarn;
  root.formatFallbackMessages = options.formatFallbackMessages || root.formatFallbackMessages;
  root.postTranslation = options.postTranslation || root.postTranslation;
  root.warnHtmlInMessage = options.warnHtmlInMessage || root.warnHtmlInMessage;
  root.escapeParameterHtml = options.escapeParameterHtml || root.escapeParameterHtml;
  root.sync = options.sync || root.sync;
  root.__composer[SetPluralRulesSymbol](options.pluralizationRules || root.pluralizationRules);
  const messages = getLocaleMessages(root.locale, {
    messages: options.messages,
    __i18n: options.__i18n
  });
  Object.keys(messages).forEach((locale) => root.mergeLocaleMessage(locale, messages[locale]));
  if (options.datetimeFormats) {
    Object.keys(options.datetimeFormats).forEach((locale) => root.mergeDateTimeFormat(locale, options.datetimeFormats[locale]));
  }
  if (options.numberFormats) {
    Object.keys(options.numberFormats).forEach((locale) => root.mergeNumberFormat(locale, options.numberFormats[locale]));
  }
  return root;
}
var I18nInjectionKey = makeSymbol("global-vue-i18n");
function createI18n(options = {}, VueI18nLegacy) {
  const __legacyMode = __VUE_I18N_LEGACY_API__ && isBoolean(options.legacy) ? options.legacy : __VUE_I18N_LEGACY_API__;
  const __globalInjection = isBoolean(options.globalInjection) ? options.globalInjection : true;
  const __allowComposition = __VUE_I18N_LEGACY_API__ && __legacyMode ? !!options.allowComposition : true;
  const __instances = /* @__PURE__ */ new Map();
  const [globalScope, __global] = createGlobal(options, __legacyMode);
  const symbol = makeSymbol(true ? "vue-i18n" : "");
  function __getInstance(component) {
    return __instances.get(component) || null;
  }
  function __setInstance(component, instance) {
    __instances.set(component, instance);
  }
  function __deleteInstance(component) {
    __instances.delete(component);
  }
  {
    const i18n = {
      // mode
      get mode() {
        return __VUE_I18N_LEGACY_API__ && __legacyMode ? "legacy" : "composition";
      },
      // allowComposition
      get allowComposition() {
        return __allowComposition;
      },
      // install plugin
      async install(app, ...options2) {
        if (true) {
          app.__VUE_I18N__ = i18n;
        }
        app.__VUE_I18N_SYMBOL__ = symbol;
        app.provide(app.__VUE_I18N_SYMBOL__, i18n);
        if (!__legacyMode && __globalInjection) {
          injectGlobalFields(app, i18n.global);
        }
        if (__VUE_I18N_FULL_INSTALL__) {
          apply(app, i18n, ...options2);
        }
        if (__VUE_I18N_LEGACY_API__ && __legacyMode) {
          app.mixin(defineMixin(__global, __global.__composer, i18n));
        }
        const unmountApp = app.unmount;
        app.unmount = () => {
          i18n.dispose();
          unmountApp();
        };
        if (true) {
          const ret = await enableDevTools(app, i18n);
          if (!ret) {
            throw createI18nError(I18nErrorCodes.CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN);
          }
          const emitter = createEmitter();
          if (__legacyMode) {
            const _vueI18n = __global;
            _vueI18n.__enableEmitter && _vueI18n.__enableEmitter(emitter);
          } else {
            const _composer = __global;
            _composer[EnableEmitter] && _composer[EnableEmitter](emitter);
          }
          emitter.on("*", addTimelineEvent);
        }
      },
      // global accessor
      get global() {
        return __global;
      },
      dispose() {
        globalScope.stop();
      },
      // @internal
      __instances,
      // @internal
      __getInstance,
      // @internal
      __setInstance,
      // @internal
      __deleteInstance
    };
    return i18n;
  }
}
function useI18n(options = {}) {
  const instance = getCurrentInstance();
  if (instance == null) {
    throw createI18nError(I18nErrorCodes.MUST_BE_CALL_SETUP_TOP);
  }
  if (!instance.isCE && instance.appContext.app != null && !instance.appContext.app.__VUE_I18N_SYMBOL__) {
    throw createI18nError(I18nErrorCodes.NOT_INSLALLED);
  }
  const i18n = getI18nInstance(instance);
  const global2 = getGlobalComposer(i18n);
  const componentOptions = getComponentOptions(instance);
  const scope = getScope(options, componentOptions);
  if (__VUE_I18N_LEGACY_API__) {
    if (i18n.mode === "legacy" && !options.__useComponent) {
      if (!i18n.allowComposition) {
        throw createI18nError(I18nErrorCodes.NOT_AVAILABLE_IN_LEGACY_MODE);
      }
      return useI18nForLegacy(instance, scope, global2, options);
    }
  }
  if (scope === "global") {
    adjustI18nResources(global2, options, componentOptions);
    return global2;
  }
  if (scope === "parent") {
    let composer2 = getComposer(i18n, instance, options.__useComponent);
    if (composer2 == null) {
      if (true) {
        warn(getWarnMessage2(I18nWarnCodes.NOT_FOUND_PARENT_SCOPE));
      }
      composer2 = global2;
    }
    return composer2;
  }
  const i18nInternal = i18n;
  let composer = i18nInternal.__getInstance(instance);
  if (composer == null) {
    const composerOptions = assign({}, options);
    if ("__i18n" in componentOptions) {
      composerOptions.__i18n = componentOptions.__i18n;
    }
    if (global2) {
      composerOptions.__root = global2;
    }
    composer = createComposer(composerOptions);
    setupLifeCycle(i18nInternal, instance, composer);
    i18nInternal.__setInstance(instance, composer);
  }
  return composer;
}
function createGlobal(options, legacyMode, VueI18nLegacy) {
  const scope = effectScope();
  {
    const obj = __VUE_I18N_LEGACY_API__ && legacyMode ? scope.run(() => createVueI18n(options)) : scope.run(() => createComposer(options));
    if (obj == null) {
      throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
    }
    return [scope, obj];
  }
}
function getI18nInstance(instance) {
  {
    const i18n = inject(!instance.isCE ? instance.appContext.app.__VUE_I18N_SYMBOL__ : I18nInjectionKey);
    if (!i18n) {
      throw createI18nError(!instance.isCE ? I18nErrorCodes.UNEXPECTED_ERROR : I18nErrorCodes.NOT_INSLALLED_WITH_PROVIDE);
    }
    return i18n;
  }
}
function getScope(options, componentOptions) {
  return isEmptyObject(options) ? "__i18n" in componentOptions ? "local" : "global" : !options.useScope ? "local" : options.useScope;
}
function getGlobalComposer(i18n) {
  return i18n.mode === "composition" ? i18n.global : i18n.global.__composer;
}
function getComposer(i18n, target, useComponent = false) {
  let composer = null;
  const root = target.root;
  let current = target.parent;
  while (current != null) {
    const i18nInternal = i18n;
    if (i18n.mode === "composition") {
      composer = i18nInternal.__getInstance(current);
    } else {
      if (__VUE_I18N_LEGACY_API__) {
        const vueI18n = i18nInternal.__getInstance(current);
        if (vueI18n != null) {
          composer = vueI18n.__composer;
          if (useComponent && composer && !composer[InejctWithOption]) {
            composer = null;
          }
        }
      }
    }
    if (composer != null) {
      break;
    }
    if (root === current) {
      break;
    }
    current = current.parent;
  }
  return composer;
}
function setupLifeCycle(i18n, target, composer) {
  let emitter = null;
  {
    onMounted(() => {
      if (target.vnode.el) {
        target.vnode.el.__VUE_I18N__ = composer;
        emitter = createEmitter();
        const _composer = composer;
        _composer[EnableEmitter] && _composer[EnableEmitter](emitter);
        emitter.on("*", addTimelineEvent);
      }
    }, target);
    onUnmounted(() => {
      if (target.vnode.el && target.vnode.el.__VUE_I18N__) {
        emitter && emitter.off("*", addTimelineEvent);
        const _composer = composer;
        _composer[DisableEmitter] && _composer[DisableEmitter]();
        delete target.vnode.el.__VUE_I18N__;
      }
      i18n.__deleteInstance(target);
    }, target);
  }
}
function useI18nForLegacy(instance, scope, root, options = {}) {
  const isLocale = scope === "local";
  const _composer = shallowRef(null);
  if (isLocale && instance.proxy && !(instance.proxy.$options.i18n || instance.proxy.$options.__i18n)) {
    throw createI18nError(I18nErrorCodes.MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION);
  }
  const _inheritLocale = isBoolean(options.inheritLocale) ? options.inheritLocale : true;
  const _locale = ref(
    // prettier-ignore
    isLocale && _inheritLocale ? root.locale.value : isString3(options.locale) ? options.locale : DEFAULT_LOCALE
  );
  const _fallbackLocale = ref(
    // prettier-ignore
    isLocale && _inheritLocale ? root.fallbackLocale.value : isString3(options.fallbackLocale) || isArray2(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : _locale.value
  );
  const _messages = ref(getLocaleMessages(_locale.value, options));
  const _datetimeFormats = ref(isPlainObject(options.datetimeFormats) ? options.datetimeFormats : { [_locale.value]: {} });
  const _numberFormats = ref(isPlainObject(options.numberFormats) ? options.numberFormats : { [_locale.value]: {} });
  const _missingWarn = isLocale ? root.missingWarn : isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;
  const _fallbackWarn = isLocale ? root.fallbackWarn : isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;
  const _fallbackRoot = isLocale ? root.fallbackRoot : isBoolean(options.fallbackRoot) ? options.fallbackRoot : true;
  const _fallbackFormat = !!options.fallbackFormat;
  const _missing = isFunction3(options.missing) ? options.missing : null;
  const _postTranslation = isFunction3(options.postTranslation) ? options.postTranslation : null;
  const _warnHtmlMessage = isLocale ? root.warnHtmlMessage : isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;
  const _escapeParameter = !!options.escapeParameter;
  const _modifiers = isLocale ? root.modifiers : isPlainObject(options.modifiers) ? options.modifiers : {};
  const _pluralRules = options.pluralRules || isLocale && root.pluralRules;
  function trackReactivityValues() {
    return [
      _locale.value,
      _fallbackLocale.value,
      _messages.value,
      _datetimeFormats.value,
      _numberFormats.value
    ];
  }
  const locale = computed({
    get: () => {
      return _composer.value ? _composer.value.locale.value : _locale.value;
    },
    set: (val) => {
      if (_composer.value) {
        _composer.value.locale.value = val;
      }
      _locale.value = val;
    }
  });
  const fallbackLocale = computed({
    get: () => {
      return _composer.value ? _composer.value.fallbackLocale.value : _fallbackLocale.value;
    },
    set: (val) => {
      if (_composer.value) {
        _composer.value.fallbackLocale.value = val;
      }
      _fallbackLocale.value = val;
    }
  });
  const messages = computed(() => {
    if (_composer.value) {
      return _composer.value.messages.value;
    } else {
      return _messages.value;
    }
  });
  const datetimeFormats = computed(() => _datetimeFormats.value);
  const numberFormats = computed(() => _numberFormats.value);
  function getPostTranslationHandler() {
    return _composer.value ? _composer.value.getPostTranslationHandler() : _postTranslation;
  }
  function setPostTranslationHandler(handler) {
    if (_composer.value) {
      _composer.value.setPostTranslationHandler(handler);
    }
  }
  function getMissingHandler() {
    return _composer.value ? _composer.value.getMissingHandler() : _missing;
  }
  function setMissingHandler(handler) {
    if (_composer.value) {
      _composer.value.setMissingHandler(handler);
    }
  }
  function warpWithDeps(fn) {
    trackReactivityValues();
    return fn();
  }
  function t12(...args) {
    return _composer.value ? warpWithDeps(() => Reflect.apply(_composer.value.t, null, [...args])) : warpWithDeps(() => "");
  }
  function rt(...args) {
    return _composer.value ? Reflect.apply(_composer.value.rt, null, [...args]) : "";
  }
  function d4(...args) {
    return _composer.value ? warpWithDeps(() => Reflect.apply(_composer.value.d, null, [...args])) : warpWithDeps(() => "");
  }
  function n3(...args) {
    return _composer.value ? warpWithDeps(() => Reflect.apply(_composer.value.n, null, [...args])) : warpWithDeps(() => "");
  }
  function tm(key) {
    return _composer.value ? _composer.value.tm(key) : {};
  }
  function te2(key, locale2) {
    return _composer.value ? _composer.value.te(key, locale2) : false;
  }
  function getLocaleMessage(locale2) {
    return _composer.value ? _composer.value.getLocaleMessage(locale2) : {};
  }
  function setLocaleMessage(locale2, message) {
    if (_composer.value) {
      _composer.value.setLocaleMessage(locale2, message);
      _messages.value[locale2] = message;
    }
  }
  function mergeLocaleMessage(locale2, message) {
    if (_composer.value) {
      _composer.value.mergeLocaleMessage(locale2, message);
    }
  }
  function getDateTimeFormat(locale2) {
    return _composer.value ? _composer.value.getDateTimeFormat(locale2) : {};
  }
  function setDateTimeFormat(locale2, format2) {
    if (_composer.value) {
      _composer.value.setDateTimeFormat(locale2, format2);
      _datetimeFormats.value[locale2] = format2;
    }
  }
  function mergeDateTimeFormat(locale2, format2) {
    if (_composer.value) {
      _composer.value.mergeDateTimeFormat(locale2, format2);
    }
  }
  function getNumberFormat(locale2) {
    return _composer.value ? _composer.value.getNumberFormat(locale2) : {};
  }
  function setNumberFormat(locale2, format2) {
    if (_composer.value) {
      _composer.value.setNumberFormat(locale2, format2);
      _numberFormats.value[locale2] = format2;
    }
  }
  function mergeNumberFormat(locale2, format2) {
    if (_composer.value) {
      _composer.value.mergeNumberFormat(locale2, format2);
    }
  }
  const wrapper = {
    get id() {
      return _composer.value ? _composer.value.id : -1;
    },
    locale,
    fallbackLocale,
    messages,
    datetimeFormats,
    numberFormats,
    get inheritLocale() {
      return _composer.value ? _composer.value.inheritLocale : _inheritLocale;
    },
    set inheritLocale(val) {
      if (_composer.value) {
        _composer.value.inheritLocale = val;
      }
    },
    get availableLocales() {
      return _composer.value ? _composer.value.availableLocales : Object.keys(_messages.value);
    },
    get modifiers() {
      return _composer.value ? _composer.value.modifiers : _modifiers;
    },
    get pluralRules() {
      return _composer.value ? _composer.value.pluralRules : _pluralRules;
    },
    get isGlobal() {
      return _composer.value ? _composer.value.isGlobal : false;
    },
    get missingWarn() {
      return _composer.value ? _composer.value.missingWarn : _missingWarn;
    },
    set missingWarn(val) {
      if (_composer.value) {
        _composer.value.missingWarn = val;
      }
    },
    get fallbackWarn() {
      return _composer.value ? _composer.value.fallbackWarn : _fallbackWarn;
    },
    set fallbackWarn(val) {
      if (_composer.value) {
        _composer.value.missingWarn = val;
      }
    },
    get fallbackRoot() {
      return _composer.value ? _composer.value.fallbackRoot : _fallbackRoot;
    },
    set fallbackRoot(val) {
      if (_composer.value) {
        _composer.value.fallbackRoot = val;
      }
    },
    get fallbackFormat() {
      return _composer.value ? _composer.value.fallbackFormat : _fallbackFormat;
    },
    set fallbackFormat(val) {
      if (_composer.value) {
        _composer.value.fallbackFormat = val;
      }
    },
    get warnHtmlMessage() {
      return _composer.value ? _composer.value.warnHtmlMessage : _warnHtmlMessage;
    },
    set warnHtmlMessage(val) {
      if (_composer.value) {
        _composer.value.warnHtmlMessage = val;
      }
    },
    get escapeParameter() {
      return _composer.value ? _composer.value.escapeParameter : _escapeParameter;
    },
    set escapeParameter(val) {
      if (_composer.value) {
        _composer.value.escapeParameter = val;
      }
    },
    t: t12,
    getPostTranslationHandler,
    setPostTranslationHandler,
    getMissingHandler,
    setMissingHandler,
    rt,
    d: d4,
    n: n3,
    tm,
    te: te2,
    getLocaleMessage,
    setLocaleMessage,
    mergeLocaleMessage,
    getDateTimeFormat,
    setDateTimeFormat,
    mergeDateTimeFormat,
    getNumberFormat,
    setNumberFormat,
    mergeNumberFormat
  };
  function sync(composer) {
    composer.locale.value = _locale.value;
    composer.fallbackLocale.value = _fallbackLocale.value;
    Object.keys(_messages.value).forEach((locale2) => {
      composer.mergeLocaleMessage(locale2, _messages.value[locale2]);
    });
    Object.keys(_datetimeFormats.value).forEach((locale2) => {
      composer.mergeDateTimeFormat(locale2, _datetimeFormats.value[locale2]);
    });
    Object.keys(_numberFormats.value).forEach((locale2) => {
      composer.mergeNumberFormat(locale2, _numberFormats.value[locale2]);
    });
    composer.escapeParameter = _escapeParameter;
    composer.fallbackFormat = _fallbackFormat;
    composer.fallbackRoot = _fallbackRoot;
    composer.fallbackWarn = _fallbackWarn;
    composer.missingWarn = _missingWarn;
    composer.warnHtmlMessage = _warnHtmlMessage;
  }
  onBeforeMount(() => {
    if (instance.proxy == null || instance.proxy.$i18n == null) {
      throw createI18nError(I18nErrorCodes.NOT_AVAILABLE_COMPOSITION_IN_LEGACY);
    }
    const composer = _composer.value = instance.proxy.$i18n.__composer;
    if (scope === "global") {
      _locale.value = composer.locale.value;
      _fallbackLocale.value = composer.fallbackLocale.value;
      _messages.value = composer.messages.value;
      _datetimeFormats.value = composer.datetimeFormats.value;
      _numberFormats.value = composer.numberFormats.value;
    } else if (isLocale) {
      sync(composer);
    }
  });
  return wrapper;
}
var globalExportProps = [
  "locale",
  "fallbackLocale",
  "availableLocales"
];
var globalExportMethods = ["t", "rt", "d", "n", "tm"];
function injectGlobalFields(app, composer) {
  const i18n = /* @__PURE__ */ Object.create(null);
  globalExportProps.forEach((prop) => {
    const desc = Object.getOwnPropertyDescriptor(composer, prop);
    if (!desc) {
      throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
    }
    const wrap = isRef(desc.value) ? {
      get() {
        return desc.value.value;
      },
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      set(val) {
        desc.value.value = val;
      }
    } : {
      get() {
        return desc.get && desc.get();
      }
    };
    Object.defineProperty(i18n, prop, wrap);
  });
  app.config.globalProperties.$i18n = i18n;
  globalExportMethods.forEach((method) => {
    const desc = Object.getOwnPropertyDescriptor(composer, method);
    if (!desc || !desc.value) {
      throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
    }
    Object.defineProperty(app.config.globalProperties, `$${method}`, desc);
  });
}
registerMessageCompiler(compileToFunction);
registerMessageResolver(resolveValue);
registerLocaleFallbacker(fallbackWithLocaleChain);
{
  initFeatureFlags();
}
if (true) {
  const target = getGlobalThis();
  target.__INTLIFY__ = true;
  setDevToolsHook(target.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__);
}
if (true)
  ;

// ../../node_modules/.pnpm/@hview-plus+locale@1.0.1_vue@3.2.45/node_modules/@hview-plus/locale/es/index.js
var m8 = () => {
  const n3 = [e13, u3], e14 = {};
  return n3.reduce((t12, o8) => (t12[o8.name] = o8.hp, t12), e14), e14;
};
var i5 = {
  install(n3) {
    const e14 = createI18n({
      locale: localStorage.getItem("hp_lang") || "zh-CN",
      messages: m8()
    });
    n3.use(e14);
  }
};

// ../../node_modules/.pnpm/hview-plus@1.3.11_vue@3.2.45/node_modules/hview-plus/es/index.mjs
var s6 = {
  install: (o8) => {
    $7.forEach((e14) => o8.use(e14)), o8.use(i5);
  }
};
export {
  d as Aside,
  m2 as Avatar,
  r9 as Badge,
  a2 as Button,
  m as Card,
  m5 as Carousel,
  a10 as CarouselItem,
  a16 as Checkbox,
  a15 as CheckboxGroup,
  e6 as Container,
  a17 as Empty,
  h2 as Footer,
  $4 as Header,
  a3 as Icon,
  a5 as Input,
  r3 as Link,
  l as Main,
  a7 as Message,
  r10 as Modal,
  m6 as Progress,
  m3 as Radio,
  s5 as Result,
  l3 as ScrollBar,
  m7 as Slider,
  r7 as Tag,
  r4 as Tooltip,
  a14 as Tree,
  s6 as default,
  r11 as upload
};
/*! Bundled license information:

@intlify/shared/dist/shared.esm-bundler.js:
  (*!
    * shared v9.2.2
    * (c) 2022 kazuya kawaguchi
    * Released under the MIT License.
    *)

@intlify/message-compiler/dist/message-compiler.esm-bundler.js:
  (*!
    * message-compiler v9.2.2
    * (c) 2022 kazuya kawaguchi
    * Released under the MIT License.
    *)

@intlify/devtools-if/dist/devtools-if.esm-bundler.js:
  (*!
    * devtools-if v9.2.2
    * (c) 2022 kazuya kawaguchi
    * Released under the MIT License.
    *)

@intlify/core-base/dist/core-base.esm-bundler.js:
  (*!
    * core-base v9.2.2
    * (c) 2022 kazuya kawaguchi
    * Released under the MIT License.
    *)

@intlify/vue-devtools/dist/vue-devtools.esm-bundler.js:
  (*!
    * vue-devtools v9.2.2
    * (c) 2022 kazuya kawaguchi
    * Released under the MIT License.
    *)

vue-i18n/dist/vue-i18n.esm-bundler.js:
  (*!
    * vue-i18n v9.2.2
    * (c) 2022 kazuya kawaguchi
    * Released under the MIT License.
    *)
*/
//# sourceMappingURL=hview-plus.js.map
