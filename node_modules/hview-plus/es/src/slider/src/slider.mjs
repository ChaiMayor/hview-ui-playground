import { defineComponent as h, ref as r, watch as i, openBlock as w, createElementBlock as f, normalizeClass as c, createElementVNode as v, createVNode as g, nextTick as y } from "vue";
import "../style/index.mjs";
import { SliderProps as k } from "./slider2.mjs";
import C from "./runway.mjs";
import { isOutBounds as u } from "./utils.mjs";
import { isArray as V } from "@vue/shared";
const B = {
  name: "HSlider"
}, N = /* @__PURE__ */ h({
  ...B,
  props: k,
  setup(m) {
    const a = m, l = r(a.modelValue), t = r(null), p = r(null), o = r(null), s = r(0), d = r(!1), n = () => {
      y(() => {
        s.value = a.vertical ? a.height : o.value.offsetWidth;
      });
    };
    return i(
      () => a.modelValue,
      () => {
        if (V(l.value) ? l.value.forEach((e) => {
          u(e, a.min, a.max);
        }) : u(l.value, a.min, a.max), a.range && l.value.length !== 2)
          throw new Error("\u6709range\u5B57\u6BB5\u5219\u5FC5\u987B\u4F20\u5165modelValue\u4E00\u4E2A\u6570\u7EC4\u53C2\u6570");
        n();
      },
      {
        immediate: !0
      }
    ), i([() => a.range], () => {
      t.value.update();
    }), i([() => a.vertical, () => a.height], () => {
      n();
    }), (e, E) => (w(), f("div", {
      ref_key: "slider",
      ref: p,
      class: c(["h-slider", { "is-vertical": e.vertical }, { "is-disabled": e.disabled }, { "is-clicking": d.value }])
    }, [
      v("div", {
        class: "h-slider__runway_wraper",
        ref_key: "runway_wraper",
        ref: o
      }, [
        g(C, {
          ref_key: "runway",
          ref: t,
          modelValue: l.value,
          min: e.min,
          max: e.max,
          step: e.step,
          showTooltip: e.showTooltip,
          showStops: e.showStops,
          disabled: e.disabled,
          formatTooltip: e.formatTooltip,
          range: e.range,
          vertical: e.vertical,
          width: s.value,
          height: e.height,
          tooltipClass: e.tooltipClass,
          placement: e.placement,
          marks: e.marks,
          runway_wraper: o.value
        }, null, 8, ["modelValue", "min", "max", "step", "showTooltip", "showStops", "disabled", "formatTooltip", "range", "vertical", "width", "height", "tooltipClass", "placement", "marks", "runway_wraper"])
      ], 512)
    ], 2));
  }
});
export {
  N as default
};
