import { defineComponent as H, getCurrentInstance as c, toRefs as b, ref as L, onMounted as W, watchEffect as _, nextTick as $, onUnmounted as B, openBlock as C, createElementBlock as T, renderSlot as k } from "vue";
import "../style/index.mjs";
import { TooltipProps as I } from "./tooltip2.mjs";
const S = {
  name: "HTooltip"
}, j = /* @__PURE__ */ H({
  ...S,
  props: I,
  setup(g) {
    const r = g, d = c(), { placement: a, content: u, width: n, modelValue: m } = b(r), i = L(m.value);
    let l = null, f = "";
    function p(e) {
      const t = document.getElementById(e);
      t && t.classList.remove("h-tooltip-show");
    }
    function x(e) {
      e && e.classList.add("h-tooltip-show");
    }
    function E(e, t, h) {
      let s = document.documentElement.scrollTop, o = 0;
      return {
        "top-start": () => {
          o += e.x, s += e.y - t.offsetHeight;
        },
        top: () => {
          o += e.x + (e.width - t.offsetWidth) * 0.5, s += e.y - t.offsetHeight;
        },
        "top-end": () => {
          o += e.x + e.width - t.offsetWidth, s += e.y - t.offsetHeight;
        },
        "left-start": () => {
          o += e.x - t.offsetWidth, s += e.y;
        },
        left: () => {
          o += e.x - t.offsetWidth, s += e.y + (e.height - t.offsetHeight) * 0.5;
        },
        "left-end": () => {
          o += e.x - t.offsetWidth, s += e.y + e.height - t.offsetHeight;
        },
        "right-start": () => {
          o += e.x + e.width, s += e.y;
        },
        right: () => {
          o += e.x + e.width, s += e.y + (e.height - t.offsetHeight) * 0.5;
        },
        "right-end": () => {
          o += e.x + e.width, s += e.y + e.height - t.offsetHeight;
        },
        "bottom-start": () => {
          o += e.x, s += e.y + e.height;
        },
        bottom: () => {
          o += e.x + (e.width - t.offsetWidth) * 0.5, s += e.y + e.height;
        },
        "bottom-end": () => {
          o += e.x + e.width - t.offsetWidth, s += e.y + e.height;
        }
      }[h](), { x: o, y: s };
    }
    function w(e, t) {
      var v;
      const h = (v = d == null ? void 0 : d.proxy) == null ? void 0 : v.$el.firstElementChild.getBoundingClientRect();
      document.getElementById(t) || document.body.appendChild(e), e.style.display = "block";
      const { x: o, y } = E(h, e, a == null ? void 0 : a.value);
      e.style.top = y + "px", e.style.left = o + "px";
    }
    return W(() => {
      var t;
      const e = (t = d == null ? void 0 : d.proxy) == null ? void 0 : t.$el;
      l = document.createElement("div"), l && l.addEventListener("mouseenter", () => {
        i.value = !0;
      }), l && l.addEventListener("mouseleave", () => {
        i.value = !1;
      }), l.className = `h-tooltip h-tooltip-${a.value}`, n != null && n.value && (l.style.width = n.value), f = l.id = `h-tooltip-${d.uid}`, _(() => {
        l.innerHTML = `<span>${u == null ? void 0 : u.value}</span>` || "", $(w(l, f)), l.className = `h-tooltip h-tooltip-${a.value}`, n != null && n.value && (l.style.width = n.value), toString.call(r.modelValue) !== "[object Null]" && (i.value = m.value), i.value ? x(l) : p(f);
      }), B(() => {
        document.getElementById(f) && document.body.removeChild(l);
      }), e && e.addEventListener("mouseenter", () => {
        i.value = !0;
      }), e && e.addEventListener("mouseleave", () => {
        setTimeout(() => {
          i.value = !1;
        }, 500);
      });
    }), (e, t) => (C(), T("span", null, [
      k(e.$slots, "default")
    ]));
  }
});
export {
  j as default
};
