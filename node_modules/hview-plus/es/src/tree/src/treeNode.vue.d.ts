declare const _sfc_main: import("vue").DefineComponent<{
    items: {
        type: ObjectConstructor;
        default: () => void;
    };
    label: StringConstructor;
    children: StringConstructor;
    showCheckbox: BooleanConstructor;
    index: NumberConstructor;
    nodeKey: StringConstructor;
    defaultExpandedKeys: ArrayConstructor;
    defaultCheckedKeys: ArrayConstructor;
    defaultExpandAll: BooleanConstructor;
    renderContent: FunctionConstructor;
    parentData: ArrayConstructor;
}, {
    props: any;
    checkboxChange: () => void;
    toggleChange: (param: any) => void;
    checkedChange: (param: any) => void;
    isShow: import("vue").ComputedRef<any>;
    nodeStyle: import("vue").ComputedRef<{
        "padding-left": string;
    }>;
    expandIconClass: import("vue").ComputedRef<(string | {
        expanded: any;
    })[]>;
    handleToggle: (item: any) => void;
    handleCheckChange: (val: any) => void;
    updateChildChecked: (item: any, val: any) => void;
    updateParentChecked: () => void;
    _initDefault: () => void;
    nodeContent: {
        props: {
            data: {
                type: ObjectConstructor;
                required: boolean;
            };
            renderContent: FunctionConstructor;
            parentData: ArrayConstructor;
        };
        setup(props: any): () => any[];
    };
    HCollapseTransition: import("vue").DefineComponent<{
        duration: {
            type: NumberConstructor;
            default: number;
        };
        animate: {
            type: StringConstructor;
            default: string;
        };
    }, {
        OnbeforeEnter: (el: HTMLDivElement) => void;
        Onenter: (el: HTMLDivElement) => void;
        OnafterEnter: (el: HTMLDivElement) => void;
        OnbeforeLeave: (el: HTMLDivElement) => void;
        Onleave: (el: HTMLDivElement) => void;
        OnafterLeave: (el: HTMLDivElement) => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        duration: {
            type: NumberConstructor;
            default: number;
        };
        animate: {
            type: StringConstructor;
            default: string;
        };
    }>>, {
        duration: number;
        animate: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    items: {
        type: ObjectConstructor;
        default: () => void;
    };
    label: StringConstructor;
    children: StringConstructor;
    showCheckbox: BooleanConstructor;
    index: NumberConstructor;
    nodeKey: StringConstructor;
    defaultExpandedKeys: ArrayConstructor;
    defaultCheckedKeys: ArrayConstructor;
    defaultExpandAll: BooleanConstructor;
    renderContent: FunctionConstructor;
    parentData: ArrayConstructor;
}>>, {
    items: Record<string, any>;
    showCheckbox: boolean;
    defaultExpandAll: boolean;
}>;
export default _sfc_main;
