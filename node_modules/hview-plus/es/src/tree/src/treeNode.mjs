import { defineComponent as T, inject as h, onMounted as j, watch as z, computed as u, nextTick as g, resolveComponent as b, openBlock as c, createElementBlock as m, normalizeStyle as F, unref as k, createElementVNode as x, normalizeClass as w, withModifiers as H, createBlock as K, createCommentVNode as E, createVNode as S, withCtx as M, withDirectives as $, Fragment as I, renderList as L, vShow as P } from "vue";
import U from "./nodeContent.mjs";
import q from "./transition.mjs";
const G = /* @__PURE__ */ x("i", { class: "h-icon-you1" }, null, -1), J = [
  G
], Q = {
  key: 0,
  class: "h-tree-ul-box"
}, R = {
  name: "HTreeNode"
}, Z = /* @__PURE__ */ T({
  ...R,
  props: {
    items: {
      type: Object,
      default: () => {
      }
    },
    label: String,
    children: String,
    showCheckbox: Boolean,
    index: Number,
    nodeKey: String,
    defaultExpandedKeys: Array,
    defaultCheckedKeys: Array,
    defaultExpandAll: Boolean,
    renderContent: Function,
    parentData: Array
  },
  setup(e) {
    const d = e, f = h("checkboxChange", () => {
    }), V = h("toggle-change", () => {
    }), A = h("checked-change", () => {
    });
    j(() => {
      y();
    }), z(
      () => d.defaultCheckedKeys,
      (n) => {
        n && y();
      }
    );
    const O = u(() => d.items.children && d.items.children.length), p = u(() => ({
      "padding-left": d.index * 15 + "px"
    })), v = u(() => [
      "h-tree-node__expand-icon",
      {
        expanded: d.items.isOpen
      }
    ]), B = (n) => {
      n.isOpen = !n.isOpen, V(n);
    }, N = (n) => {
      o(d.items, n), C(), A(d.items);
    }, o = (n, t) => {
      n.isChecked = t, n.children && n.children.length && n.children.forEach((l) => {
        o(l, t);
      });
    }, C = () => {
      g(() => {
        f && f();
      });
    }, y = () => {
      let { items: n, nodeKey: t, defaultExpandedKeys: l, defaultCheckedKeys: s, defaultExpandAll: a } = d;
      const i = t && n[t], D = l.includes(i) || a, r = s.includes(i);
      n.isOpen = D, n.isChecked = r, g(() => {
        r && o(d.items, r), C();
      });
    };
    return (n, t) => {
      const l = b("h-checkbox"), s = b("tree-node", !0);
      return c(), m("ul", {
        class: "h-tree-node",
        style: F(k(p))
      }, [
        x("div", {
          class: w(["h-tree-node__content"]),
          onClick: t[1] || (t[1] = H((a) => B(e.items), ["stop"]))
        }, [
          x("span", {
            class: w(k(v))
          }, J, 2),
          e.showCheckbox ? (c(), K(l, {
            key: 0,
            style: { "margin-right": "0" },
            modelValue: e.items.isChecked,
            "onUpdate:modelValue": t[0] || (t[0] = (a) => e.items.isChecked = a),
            indeterminate: e.items.indeterminate,
            disabled: e.items.disabled,
            onChange: N
          }, null, 8, ["modelValue", "indeterminate", "disabled"])) : E("", !0),
          S(U, {
            data: e.items,
            "render-content": e.renderContent,
            "parent-data": e.parentData
          }, null, 8, ["data", "render-content", "parent-data"])
        ]),
        S(q, {
          duration: 0.3,
          animate: "linear"
        }, {
          default: M(() => [
            k(O) ? $((c(), m("div", Q, [
              (c(!0), m(I, null, L(e.items.children, (a, i) => (c(), K(s, {
                key: i,
                items: a,
                label: e.label,
                children: e.children,
                "show-checkbox": e.showCheckbox,
                index: e.index && e.index + 1,
                "node-key": e.nodeKey,
                "default-expanded-keys": e.defaultExpandedKeys,
                "default-checked-keys": e.defaultCheckedKeys,
                "default-expand-all": e.defaultExpandAll,
                "render-content": e.renderContent,
                "parent-data": e.items.children
              }, null, 8, ["items", "label", "children", "show-checkbox", "index", "node-key", "default-expanded-keys", "default-checked-keys", "default-expand-all", "render-content", "parent-data"]))), 128))
            ], 512)), [
              [P, e.items.isOpen]
            ]) : E("", !0)
          ]),
          _: 1
        }, 8, ["duration"])
      ], 4);
    };
  }
});
export {
  Z as default
};
