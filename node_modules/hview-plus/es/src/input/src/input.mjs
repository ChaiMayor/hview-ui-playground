import { defineComponent as k, toRefs as B, ref as V, computed as f, watchEffect as A, openBlock as n, createElementBlock as a, normalizeClass as l, Fragment as h, createElementVNode as s, mergeProps as m, unref as u, createCommentVNode as i, createVNode as C, Transition as I, withCtx as $, toDisplayString as d } from "vue";
import "../style/index.mjs";
import { InputProps as b } from "./input2.mjs";
const z = ["type", "value"], E = ["value", "maxlength"], N = { class: "h-textarea-maxlength" }, w = {
  name: "HInput"
}, L = /* @__PURE__ */ k({
  ...w,
  props: b,
  emits: ["update:modelValue"],
  setup(v, { emit: g }) {
    const o = v, { modelValue: p } = B(o), t = V(), y = f(() => ({
      [`h-input-${o.size}`]: o.size
    }));
    A(() => {
      t.value = p ? p.value : "";
    });
    const r = (e) => {
      t.value = e ? e.target.value : "", g("update:modelValue", t.value);
    }, c = f(() => t.value === void 0 ? 0 : t.value.length);
    return (e, P) => (n(), a("div", {
      class: l(["h-from-input", {
        "h-input-icon-before": e.iconBefore && e.iconBefore !== "",
        "h-input-icon-after": e.iconAfter && e.iconAfter !== "" || e.clearable
      }])
    }, [
      e.type !== "textarea" ? (n(), a(h, { key: 0 }, [
        s("input", m({ class: "h-input" }, e.$attrs, {
          type: e.type,
          value: t.value,
          class: u(y),
          onInput: r
        }), null, 16, z),
        e.iconAfter && e.iconAfter !== "" ? (n(), a("i", {
          key: 0,
          class: l(["h-after", `h-icon-${e.iconAfter}`])
        }, null, 2)) : i("", !0),
        e.iconBefore && e.iconBefore !== "" ? (n(), a("i", {
          key: 1,
          class: l(["h-before", `h-icon-${e.iconBefore}`])
        }, null, 2)) : i("", !0),
        C(I, { name: "fade" }, {
          default: $(() => [
            e.clearable && u(c) > 0 ? (n(), a("span", {
              key: 0,
              class: "h-icon-h",
              onClick: r
            })) : i("", !0)
          ]),
          _: 1
        })
      ], 64)) : (n(), a(h, { key: 1 }, [
        s("textarea", m({ class: "h-textarea" }, e.$attrs, {
          value: t.value,
          maxlength: e.maxlength,
          onInput: r
        }), `\r
      `, 16, E),
        s("span", N, d(u(c)) + "/" + d(e.maxlength), 1)
      ], 64))
    ], 2));
  }
});
export {
  L as default
};
