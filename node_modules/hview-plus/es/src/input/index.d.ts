declare const Input: import("@hview-plus/utils").SFCWithInstall<import("vue").DefineComponent<{
    type: StringConstructor;
    maxlength: NumberConstructor;
    iconBefore: StringConstructor;
    iconAfter: StringConstructor;
    size: StringConstructor;
    clearable: BooleanConstructor;
    modelValue: (StringConstructor | NumberConstructor)[];
}, {
    props: any;
    emit: (event: "update:modelValue", ...args: any[]) => void;
    modelValue: import("vue").Ref<string | number>;
    text: import("vue").Ref<any>;
    size: import("vue").ComputedRef<{
        [x: string]: string;
    }>;
    handerInput: (e: any) => void;
    textLength: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    type: StringConstructor;
    maxlength: NumberConstructor;
    iconBefore: StringConstructor;
    iconAfter: StringConstructor;
    size: StringConstructor;
    clearable: BooleanConstructor;
    modelValue: (StringConstructor | NumberConstructor)[];
}>> & {
    "onUpdate:modelValue"?: (...args: any[]) => any;
}, {
    clearable: boolean;
}>>;
export default Input;
