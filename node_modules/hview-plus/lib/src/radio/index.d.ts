declare const Radio: import("@hview-plus/utils").SFCWithInstall<import("vue").DefineComponent<{
    options: {
        type: ArrayConstructor;
        default: () => any[];
    };
    inline: {
        type: BooleanConstructor;
        default: boolean;
    };
    customColor: {
        type: StringConstructor;
        default: string;
    };
}, {
    props: any;
    emit: (event: "change", ...args: any[]) => void;
    radioIndex: import("vue").Ref<number>;
    isInline: import("vue").Ref<string>;
    inlineStyle: () => {
        display: string;
    };
    colorStyle: (index: number) => {
        marginRight: string;
        backgroundColor: string;
    } | {
        marginRight: string;
        backgroundColor?: undefined;
    };
    change: (item: import("./src/radio").IItem, index: number) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "change"[], "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    options: {
        type: ArrayConstructor;
        default: () => any[];
    };
    inline: {
        type: BooleanConstructor;
        default: boolean;
    };
    customColor: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    onChange?: (...args: any[]) => any;
}, {
    options: unknown[];
    inline: boolean;
    customColor: string;
}>>;
export default Radio;
