import type { CSSProperties } from "vue";
declare const _sfc_main: import("vue").DefineComponent<{
    name: {
        type: StringConstructor;
        default: string;
    };
    label: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
}, {
    props: any;
    active: import("vue").Ref<boolean>;
    animating: import("vue").Ref<boolean>;
    hover: import("vue").Ref<boolean>;
    inStage: import("vue").Ref<boolean>;
    isVertical: import("vue").Ref<boolean>;
    translate: import("vue").Ref<number>;
    scale: import("vue").Ref<number>;
    ready: import("vue").Ref<boolean>;
    handleItemClick: () => void;
    styleClass: import("vue").ComputedRef<{
        "h-carousel-item--active": boolean;
        "h-carousel-item--inStage": boolean;
        "h-carousel-item--hover": boolean;
        "h-carousel-item--animating": boolean;
    }>;
    itemStyle: import("vue").ComputedRef<CSSProperties>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    name: {
        type: StringConstructor;
        default: string;
    };
    label: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
}>>, {
    name: string;
    label: string | number;
}>;
export default _sfc_main;
