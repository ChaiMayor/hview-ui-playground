declare const Checkbox: import("@hview-plus/utils").SFCWithInstall<import("vue").DefineComponent<{
    modelValue: BooleanConstructor;
    label: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    indeterminate: {
        type: BooleanConstructor;
        default: boolean;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    emit: (event: "update:modelValue" | "change", ...args: any[]) => void;
    props: any;
    checkboxGroup: any;
    isGroup: import("vue").ComputedRef<boolean>;
    model: import("vue").WritableComputedRef<any>;
    isChecked: import("vue").ComputedRef<any>;
    isDisabled: import("vue").ComputedRef<any>;
    handleChange: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "change")[], "update:modelValue" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: BooleanConstructor;
    label: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    indeterminate: {
        type: BooleanConstructor;
        default: boolean;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: (...args: any[]) => any;
    onChange?: (...args: any[]) => any;
}, {
    disabled: boolean;
    modelValue: boolean;
    border: boolean;
    indeterminate: boolean;
}>>;
export default Checkbox;
