"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("vue");require("../style/index.js");const D=require("./scrollbar2.js"),V=require("./scroll-thumb.js"),p=require("@hview-plus/utils"),W={class:"h-scrollbar",ref:"scrollbar"},F={name:"HScrollbar"},q=e.defineComponent({...F,props:D.ScrollBarProps,emits:["scroll"],setup(H,{expose:T,emit:z}){const t=H,a=e.ref(null),u=e.ref(null),i=e.ref(null),r=e.ref(Number(parseInt(t.height))),n=e.ref(Number(parseInt(t.maxHeight))),v=e.ref(0),m=e.ref(0),b=e.ref(0),c=e.ref(!1),S=e.ref(0),s=e.ref(0),h=e.ref(0),y=e.ref(!1),d=e.computed(()=>!t.height&&!t.maxHeight?"moveX":"moveY"),_=e.computed(()=>r.value?{height:`${r.value}px`}:{}),L=l=>{i.value.handleDrawScrollVal(l,"moveY"),c.value=!1},k=l=>{i.value.handleDrawScrollVal(l,"moveX"),c.value=!1},f=()=>{if(c.value)return;const l=d.value==="moveX"?Number(a.value.scrollLeft.toFixed(5)):Number(a.value.scrollTop.toFixed(5));d.value==="moveX"?i.value.setScrollLeft(l):i.value.setScrollTop(l),z("scroll",{scrollTop:a.value.scrollTop,scrollLeft:a.value.scrollLeft})},x=l=>{a.value.scrollTop=l},N=l=>{a.value.scrollLeft=l},w=()=>{var l,o;y.value=!0,v.value=u.value.offsetWidth,m.value=(l=u.value)==null?void 0:l.offsetHeight,b.value=(o=u.value)==null?void 0:o.scrollWidth,s.value=p.toFixed(r.value*r.value/m.value,0),r.value!==-1&&s.value<=t.minSize&&(s.value=t.minSize),h.value=p.toFixed(v.value*v.value/b.value,0),h.value<=t.minSize&&(h.value=t.minSize),n.value&&(m.value>=n.value?r.value=n.value:(r.value=0,s.value=0)),S.value=1-(d.value==="moveX"?p.toFixed(h.value/v.value,2):p.toFixed(s.value/r.value,2)),y.value=!1};e.watch(()=>t.height,()=>{t.noresize||(r.value=Number(parseInt(t.height)),w(),f())}),e.watch(()=>t.maxHeight,()=>{t.noresize||(n.value=Number(parseInt(t.maxHeight)),r.value=Number(parseInt(t.height))||0,w(),f())});let g=null;return e.onMounted(()=>{var o;w(),(o=a.value)==null||o.addEventListener("scroll",f),g=new MutationObserver(l);function l(){t.noresize||(w(),f())}e.nextTick(()=>{g.observe(u.value,{childList:!0,characterData:!0})})}),e.onUnmounted(()=>{var l;(l=a.value)==null||l.removeEventListener("scroll",f),g.disconnect()}),T({setScrollTop:L,setScrollLeft:k,wrapRef:a}),(l,o)=>(e.openBlock(),e.createElementBlock("div",W,[e.createElementVNode("div",{class:e.normalizeClass([l.wrapClass,"h-scrollbar__wrap",{native:l.native}]),ref_key:"scrollbar_wrap",ref:a,style:e.normalizeStyle([e.unref(_),l.wrapStyle])},[(e.openBlock(),e.createBlock(e.resolveDynamicComponent(l.tag),{class:e.normalizeClass([l.viewClass,"h-scrollbar__view"]),ref_key:"scrollbar_view",ref:u,style:e.normalizeStyle(l.viewStyle)},{default:e.withCtx(()=>[e.renderSlot(l.$slots,"default")]),_:3},8,["class","style"]))],6),e.createVNode(V.default,{ref_key:"scrollThumb",ref:i,onSetScrollViewTop:x,onSetScrollViewLeft:N,always:l.always,isDraw:c.value,"onUpdate:isDraw":o[0]||(o[0]=C=>c.value=C),height:r.value,maxHeight:n.value,width:v.value,noresize:l.noresize,viewHeight:m.value,viewWidth:b.value,thumbWidth:h.value,native:t.native,move:e.unref(d),retio:S.value,thumbHeight:s.value},null,8,["always","isDraw","height","maxHeight","width","noresize","viewHeight","viewWidth","thumbWidth","native","move","retio","thumbHeight"])],512))}});exports.default=q;
