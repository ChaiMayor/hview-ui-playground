declare const _sfc_main: import("vue").DefineComponent<{
    message: StringConstructor;
    type: {
        type: StringConstructor;
        validator(value: string): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    center: {
        type: BooleanConstructor;
        default: boolean;
    };
    dangerouslyUseHTMLString: {
        type: BooleanConstructor;
        default: boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    onClose: {
        type: FunctionConstructor;
    };
}, {
    props: any;
    message: import("vue").Ref<string>;
    showClose: import("vue").Ref<boolean>;
    type: import("vue").Ref<string>;
    duration: import("vue").Ref<number>;
    center: import("vue").Ref<boolean>;
    dangerouslyUseHTMLString: import("vue").Ref<boolean>;
    onClose: import("vue").Ref<Function>;
    visible: import("vue").Ref<boolean>;
    timer: any;
    typeClass: import("vue").ComputedRef<string>;
    startTimer: () => void;
    close: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    message: StringConstructor;
    type: {
        type: StringConstructor;
        validator(value: string): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    center: {
        type: BooleanConstructor;
        default: boolean;
    };
    dangerouslyUseHTMLString: {
        type: BooleanConstructor;
        default: boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    onClose: {
        type: FunctionConstructor;
    };
}>>, {
    duration: number;
    center: boolean;
    dangerouslyUseHTMLString: boolean;
    showClose: boolean;
}>;
export default _sfc_main;
